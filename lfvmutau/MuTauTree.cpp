/* Generated by Cython 0.19.1 on Tue May 21 11:51:02 2013 */

#define PY_SSIZE_T_CLEAN
#ifndef CYTHON_USE_PYLONG_INTERNALS
#ifdef PYLONG_BITS_IN_DIGIT
#define CYTHON_USE_PYLONG_INTERNALS 0
#else
#include "pyconfig.h"
#ifdef PYLONG_BITS_IN_DIGIT
#define CYTHON_USE_PYLONG_INTERNALS 1
#else
#define CYTHON_USE_PYLONG_INTERNALS 0
#endif
#endif
#endif
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02040000
    #error Cython requires Python 2.4+.
#else
#include <stddef.h> /* For offsetof */
#ifndef offsetof
#define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#ifdef PYPY_VERSION
#define CYTHON_COMPILING_IN_PYPY 1
#define CYTHON_COMPILING_IN_CPYTHON 0
#else
#define CYTHON_COMPILING_IN_PYPY 0
#define CYTHON_COMPILING_IN_CPYTHON 1
#endif
#if PY_VERSION_HEX < 0x02050000
  typedef int Py_ssize_t;
  #define PY_SSIZE_T_MAX INT_MAX
  #define PY_SSIZE_T_MIN INT_MIN
  #define PY_FORMAT_SIZE_T ""
  #define CYTHON_FORMAT_SSIZE_T ""
  #define PyInt_FromSsize_t(z) PyInt_FromLong(z)
  #define PyInt_AsSsize_t(o)   __Pyx_PyInt_AsInt(o)
  #define PyNumber_Index(o)    ((PyNumber_Check(o) && !PyFloat_Check(o)) ? PyNumber_Int(o) : \
                                (PyErr_Format(PyExc_TypeError, \
                                              "expected index value, got %.200s", Py_TYPE(o)->tp_name), \
                                 (PyObject*)0))
  #define __Pyx_PyIndex_Check(o) (PyNumber_Check(o) && !PyFloat_Check(o) && \
                                  !PyComplex_Check(o))
  #define PyIndex_Check __Pyx_PyIndex_Check
  #define PyErr_WarnEx(category, message, stacklevel) PyErr_Warn(category, message)
  #define __PYX_BUILD_PY_SSIZE_T "i"
#else
  #define __PYX_BUILD_PY_SSIZE_T "n"
  #define CYTHON_FORMAT_SSIZE_T "z"
  #define __Pyx_PyIndex_Check PyIndex_Check
#endif
#if PY_VERSION_HEX < 0x02060000
  #define Py_REFCNT(ob) (((PyObject*)(ob))->ob_refcnt)
  #define Py_TYPE(ob)   (((PyObject*)(ob))->ob_type)
  #define Py_SIZE(ob)   (((PyVarObject*)(ob))->ob_size)
  #define PyVarObject_HEAD_INIT(type, size) \
          PyObject_HEAD_INIT(type) size,
  #define PyType_Modified(t)
  typedef struct {
     void *buf;
     PyObject *obj;
     Py_ssize_t len;
     Py_ssize_t itemsize;
     int readonly;
     int ndim;
     char *format;
     Py_ssize_t *shape;
     Py_ssize_t *strides;
     Py_ssize_t *suboffsets;
     void *internal;
  } Py_buffer;
  #define PyBUF_SIMPLE 0
  #define PyBUF_WRITABLE 0x0001
  #define PyBUF_FORMAT 0x0004
  #define PyBUF_ND 0x0008
  #define PyBUF_STRIDES (0x0010 | PyBUF_ND)
  #define PyBUF_C_CONTIGUOUS (0x0020 | PyBUF_STRIDES)
  #define PyBUF_F_CONTIGUOUS (0x0040 | PyBUF_STRIDES)
  #define PyBUF_ANY_CONTIGUOUS (0x0080 | PyBUF_STRIDES)
  #define PyBUF_INDIRECT (0x0100 | PyBUF_STRIDES)
  #define PyBUF_RECORDS (PyBUF_STRIDES | PyBUF_FORMAT | PyBUF_WRITABLE)
  #define PyBUF_FULL (PyBUF_INDIRECT | PyBUF_FORMAT | PyBUF_WRITABLE)
  typedef int (*getbufferproc)(PyObject *, Py_buffer *, int);
  typedef void (*releasebufferproc)(PyObject *, Py_buffer *);
#endif
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos) \
          PyCode_New(a, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos) \
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#endif
#if PY_MAJOR_VERSION < 3 && PY_MINOR_VERSION < 6
  #define PyUnicode_FromString(s) PyUnicode_Decode(s, strlen(s), "UTF-8", "strict")
#endif
#if PY_MAJOR_VERSION >= 3
  #define Py_TPFLAGS_CHECKTYPES 0
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#if (PY_VERSION_HEX < 0x02060000) || (PY_MAJOR_VERSION >= 3)
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#if PY_VERSION_HEX < 0x02060000
  #define Py_TPFLAGS_HAVE_VERSION_TAG 0
#endif
#if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ? \
                                              0 : _PyUnicode_Ready((PyObject *)(op)))
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
#else
  #define CYTHON_PEP393_ENABLED 0
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((k=k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#endif
#if PY_VERSION_HEX < 0x02060000
  #define PyBytesObject                PyStringObject
  #define PyBytes_Type                 PyString_Type
  #define PyBytes_Check                PyString_Check
  #define PyBytes_CheckExact           PyString_CheckExact
  #define PyBytes_FromString           PyString_FromString
  #define PyBytes_FromStringAndSize    PyString_FromStringAndSize
  #define PyBytes_FromFormat           PyString_FromFormat
  #define PyBytes_DecodeEscape         PyString_DecodeEscape
  #define PyBytes_AsString             PyString_AsString
  #define PyBytes_AsStringAndSize      PyString_AsStringAndSize
  #define PyBytes_Size                 PyString_Size
  #define PyBytes_AS_STRING            PyString_AS_STRING
  #define PyBytes_GET_SIZE             PyString_GET_SIZE
  #define PyBytes_Repr                 PyString_Repr
  #define PyBytes_Concat               PyString_Concat
  #define PyBytes_ConcatAndDel         PyString_ConcatAndDel
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj) || \
                                         PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (Py_TYPE(obj) == &PyBaseString_Type)
#endif
#if PY_VERSION_HEX < 0x02060000
  #define PySet_Check(obj)             PyObject_TypeCheck(obj, &PySet_Type)
  #define PyFrozenSet_Check(obj)       PyObject_TypeCheck(obj, &PyFrozenSet_Type)
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
#endif
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_VERSION_HEX < 0x03020000
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   PyInt_AsLong
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   PyInt_AsSsize_t
#endif
#if (PY_MAJOR_VERSION < 3) || (PY_VERSION_HEX >= 0x03010300)
  #define __Pyx_PySequence_GetSlice(obj, a, b) PySequence_GetSlice(obj, a, b)
  #define __Pyx_PySequence_SetSlice(obj, a, b, value) PySequence_SetSlice(obj, a, b, value)
  #define __Pyx_PySequence_DelSlice(obj, a, b) PySequence_DelSlice(obj, a, b)
#else
  #define __Pyx_PySequence_GetSlice(obj, a, b) (unlikely(!(obj)) ? \
        (PyErr_SetString(PyExc_SystemError, "null argument to internal routine"), (PyObject*)0) : \
        (likely((obj)->ob_type->tp_as_mapping) ? (PySequence_GetSlice(obj, a, b)) : \
            (PyErr_Format(PyExc_TypeError, "'%.200s' object is unsliceable", (obj)->ob_type->tp_name), (PyObject*)0)))
  #define __Pyx_PySequence_SetSlice(obj, a, b, value) (unlikely(!(obj)) ? \
        (PyErr_SetString(PyExc_SystemError, "null argument to internal routine"), -1) : \
        (likely((obj)->ob_type->tp_as_mapping) ? (PySequence_SetSlice(obj, a, b, value)) : \
            (PyErr_Format(PyExc_TypeError, "'%.200s' object doesn't support slice assignment", (obj)->ob_type->tp_name), -1)))
  #define __Pyx_PySequence_DelSlice(obj, a, b) (unlikely(!(obj)) ? \
        (PyErr_SetString(PyExc_SystemError, "null argument to internal routine"), -1) : \
        (likely((obj)->ob_type->tp_as_mapping) ? (PySequence_DelSlice(obj, a, b)) : \
            (PyErr_Format(PyExc_TypeError, "'%.200s' object doesn't support slice deletion", (obj)->ob_type->tp_name), -1)))
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyMethod_New(func, self, klass) ((self) ? PyMethod_New(func, self) : PyInstanceMethod_New(func))
#endif
#if PY_VERSION_HEX < 0x02050000
  #define __Pyx_GetAttrString(o,n)   PyObject_GetAttrString((o),((char *)(n)))
  #define __Pyx_SetAttrString(o,n,a) PyObject_SetAttrString((o),((char *)(n)),(a))
  #define __Pyx_DelAttrString(o,n)   PyObject_DelAttrString((o),((char *)(n)))
#else
  #define __Pyx_GetAttrString(o,n)   PyObject_GetAttrString((o),(n))
  #define __Pyx_SetAttrString(o,n,a) PyObject_SetAttrString((o),(n),(a))
  #define __Pyx_DelAttrString(o,n)   PyObject_DelAttrString((o),(n))
#endif
#if PY_VERSION_HEX < 0x02050000
  #define __Pyx_NAMESTR(n) ((char *)(n))
  #define __Pyx_DOCSTR(n)  ((char *)(n))
#else
  #define __Pyx_NAMESTR(n) (n)
  #define __Pyx_DOCSTR(n)  (n)
#endif
#ifndef CYTHON_INLINE
  #if defined(__GNUC__)
    #define CYTHON_INLINE __inline__
  #elif defined(_MSC_VER)
    #define CYTHON_INLINE __inline
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_INLINE inline
  #else
    #define CYTHON_INLINE
  #endif
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER)
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  /* Initialize NaN. The sign is irrelevant, an exponent with all bits 1 and
   a nonzero mantissa means NaN. If the first bit in the mantissa is 1, it is
   a quiet NaN. */
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif


#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#if defined(WIN32) || defined(MS_WINDOWS)
#define _USE_MATH_DEFINES
#endif
#include <math.h>
#define __PYX_HAVE__MuTauTree
#define __PYX_HAVE_API__MuTauTree
#include "TObject.h"
#include "TBranch.h"
#include "TTree.h"
#include "TFile.h"
#include "TTreeFormula.h"
#include "string.h"
#include "stdio.h"
#include "pythread.h"
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#ifdef PYREX_WITHOUT_ASSERTIONS
#define CYTHON_WITHOUT_ASSERTIONS
#endif

#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
typedef struct {PyObject **p; char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry; /*proto*/

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT 0
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
static CYTHON_INLINE char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyObject_AsUString(s)    ((unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromUString(s)  __Pyx_PyObject_FromString((char*)s)
#define __Pyx_PyBytes_FromUString(s)   __Pyx_PyBytes_FromString((char*)s)
#define __Pyx_PyStr_FromUString(s)     __Pyx_PyStr_FromString((char*)s)
#define __Pyx_PyUnicode_FromUString(s) __Pyx_PyUnicode_FromString((char*)s)
#if PY_MAJOR_VERSION < 3
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u)
{
    const Py_UNICODE *u_end = u;
    while (*u_end++) ;
    return u_end - u - 1;
}
#else
#define __Pyx_Py_UNICODE_strlen Py_UNICODE_strlen
#endif
#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))
#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_Owned_Py_None(b) (Py_INCREF(Py_None), Py_None)
#define __Pyx_PyBool_FromLong(b) ((b) ? (Py_INCREF(Py_True), Py_True) : (Py_INCREF(Py_False), Py_False))
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x);
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
static CYTHON_INLINE size_t __Pyx_PyInt_AsSize_t(PyObject*);
#if CYTHON_COMPILING_IN_CPYTHON
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params() {
    PyObject* sys = NULL;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    sys = PyImport_ImportModule("sys");
    if (sys == NULL) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    if (default_encoding == NULL) goto bad;
    if (strcmp(PyBytes_AsString(default_encoding), "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        const char* default_encoding_c = PyBytes_AS_STRING(default_encoding);
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (ascii_chars_u == NULL) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (ascii_chars_b == NULL || strncmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
    }
    Py_XDECREF(sys);
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return 0;
bad:
    Py_XDECREF(sys);
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params() {
    PyObject* sys = NULL;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (sys == NULL) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    if (default_encoding == NULL) goto bad;
    default_encoding_c = PyBytes_AS_STRING(default_encoding);
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c));
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(sys);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(sys);
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


#ifdef __GNUC__
  /* Test for GCC > 2.95 */
  #if __GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95))
    #define likely(x)   __builtin_expect(!!(x), 1)
    #define unlikely(x) __builtin_expect(!!(x), 0)
  #else /* __GNUC__ > 2 ... */
    #define likely(x)   (x)
    #define unlikely(x) (x)
  #endif /* __GNUC__ > 2 ... */
#else /* __GNUC__ */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */

static PyObject *__pyx_m;
static PyObject *__pyx_d;
static PyObject *__pyx_b;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;


static const char *__pyx_f[] = {
  "MuTauTree.pyx",
  "type.pxd",
  "bool.pxd",
  "complex.pxd",
};

/*--- Type declarations ---*/
struct __pyx_obj_9MuTauTree___pyx_scope_struct____iter__;
struct __pyx_obj_9MuTauTree___pyx_scope_struct_1_where;
struct __pyx_obj_9MuTauTree_MuTauTree;

/* "MuTauTree.pyx":3723
 * 
 *     # Iterating over the tree
 *     def __iter__(self):             # <<<<<<<<<<<<<<
 *         self.ientry = 0
 *         while self.ientry < self.tree.GetEntries():
 */
struct __pyx_obj_9MuTauTree___pyx_scope_struct____iter__ {
  PyObject_HEAD
  struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self;
};


/* "MuTauTree.pyx":3731
 * 
 *     # Iterate over rows which pass the filter
 *     def where(self, filter):             # <<<<<<<<<<<<<<
 *         print "where"
 *         cdef TTreeFormula* formula = new TTreeFormula(
 */
struct __pyx_obj_9MuTauTree___pyx_scope_struct_1_where {
  PyObject_HEAD
  TTree *__pyx_v_currentTree;
  PyObject *__pyx_v_filter;
  TTreeFormula *__pyx_v_formula;
  struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self;
};


/* "MuTauTree.pyx":42
 * warnings.formatwarning = my_warning_format
 * 
 * cdef class MuTauTree:             # <<<<<<<<<<<<<<
 *     # Pointers to tree (may be a chain), current active tree, and current entry
 *     # localentry is the entry in the current tree of the chain
 */
struct __pyx_obj_9MuTauTree_MuTauTree {
  PyObject_HEAD
  struct __pyx_vtabstruct_9MuTauTree_MuTauTree *__pyx_vtab;
  TTree *tree;
  TTree *currentTree;
  int currentTreeNumber;
  long ientry;
  long localentry;
  PyObject *complained;
  TBranch *LT_branch;
  float LT_value;
  TBranch *Mass_branch;
  float Mass_value;
  TBranch *MassError_branch;
  float MassError_value;
  TBranch *MassErrord1_branch;
  float MassErrord1_value;
  TBranch *MassErrord2_branch;
  float MassErrord2_value;
  TBranch *MassErrord3_branch;
  float MassErrord3_value;
  TBranch *MassErrord4_branch;
  float MassErrord4_value;
  TBranch *Pt_branch;
  float Pt_value;
  TBranch *bjetCSVVeto_branch;
  float bjetCSVVeto_value;
  TBranch *bjetCSVVeto30_branch;
  float bjetCSVVeto30_value;
  TBranch *bjetCSVVetoZHLike_branch;
  float bjetCSVVetoZHLike_value;
  TBranch *bjetCSVVetoZHLikeNoJetId_branch;
  float bjetCSVVetoZHLikeNoJetId_value;
  TBranch *bjetVeto_branch;
  float bjetVeto_value;
  TBranch *charge_branch;
  float charge_value;
  TBranch *doubleEExtraGroup_branch;
  float doubleEExtraGroup_value;
  TBranch *doubleEExtraPass_branch;
  float doubleEExtraPass_value;
  TBranch *doubleEExtraPrescale_branch;
  float doubleEExtraPrescale_value;
  TBranch *doubleEGroup_branch;
  float doubleEGroup_value;
  TBranch *doubleEPass_branch;
  float doubleEPass_value;
  TBranch *doubleEPrescale_branch;
  float doubleEPrescale_value;
  TBranch *doubleETightGroup_branch;
  float doubleETightGroup_value;
  TBranch *doubleETightPass_branch;
  float doubleETightPass_value;
  TBranch *doubleETightPrescale_branch;
  float doubleETightPrescale_value;
  TBranch *doubleMuGroup_branch;
  float doubleMuGroup_value;
  TBranch *doubleMuPass_branch;
  float doubleMuPass_value;
  TBranch *doubleMuPrescale_branch;
  float doubleMuPrescale_value;
  TBranch *doubleMuTrkGroup_branch;
  float doubleMuTrkGroup_value;
  TBranch *doubleMuTrkPass_branch;
  float doubleMuTrkPass_value;
  TBranch *doubleMuTrkPrescale_branch;
  float doubleMuTrkPrescale_value;
  TBranch *doublePhoGroup_branch;
  float doublePhoGroup_value;
  TBranch *doublePhoPass_branch;
  float doublePhoPass_value;
  TBranch *doublePhoPrescale_branch;
  float doublePhoPrescale_value;
  TBranch *eVetoCicTightIso_branch;
  float eVetoCicTightIso_value;
  TBranch *eVetoMVAIso_branch;
  float eVetoMVAIso_value;
  TBranch *eVetoMVAIsoVtx_branch;
  float eVetoMVAIsoVtx_value;
  TBranch *evt_branch;
  int evt_value;
  TBranch *isGtautau_branch;
  float isGtautau_value;
  TBranch *isWmunu_branch;
  float isWmunu_value;
  TBranch *isWtaunu_branch;
  float isWtaunu_value;
  TBranch *isZtautau_branch;
  float isZtautau_value;
  TBranch *isdata_branch;
  int isdata_value;
  TBranch *isoMu24eta2p1Group_branch;
  float isoMu24eta2p1Group_value;
  TBranch *isoMu24eta2p1Pass_branch;
  float isoMu24eta2p1Pass_value;
  TBranch *isoMu24eta2p1Prescale_branch;
  float isoMu24eta2p1Prescale_value;
  TBranch *isoMuGroup_branch;
  float isoMuGroup_value;
  TBranch *isoMuPass_branch;
  float isoMuPass_value;
  TBranch *isoMuPrescale_branch;
  float isoMuPrescale_value;
  TBranch *isoMuTauGroup_branch;
  float isoMuTauGroup_value;
  TBranch *isoMuTauPass_branch;
  float isoMuTauPass_value;
  TBranch *isoMuTauPrescale_branch;
  float isoMuTauPrescale_value;
  TBranch *jetVeto20_branch;
  float jetVeto20_value;
  TBranch *jetVeto30_branch;
  float jetVeto30_value;
  TBranch *jetVeto40_branch;
  float jetVeto40_value;
  TBranch *lumi_branch;
  int lumi_value;
  TBranch *mAbsEta_branch;
  float mAbsEta_value;
  TBranch *mCharge_branch;
  float mCharge_value;
  TBranch *mComesFromHiggs_branch;
  float mComesFromHiggs_value;
  TBranch *mD0_branch;
  float mD0_value;
  TBranch *mDZ_branch;
  float mDZ_value;
  TBranch *mDiMuonL3PreFiltered7_branch;
  float mDiMuonL3PreFiltered7_value;
  TBranch *mDiMuonL3p5PreFiltered8_branch;
  float mDiMuonL3p5PreFiltered8_value;
  TBranch *mDiMuonMu17Mu8DzFiltered0p2_branch;
  float mDiMuonMu17Mu8DzFiltered0p2_value;
  TBranch *mEErrRochCor2011A_branch;
  float mEErrRochCor2011A_value;
  TBranch *mEErrRochCor2011B_branch;
  float mEErrRochCor2011B_value;
  TBranch *mEErrRochCor2012_branch;
  float mEErrRochCor2012_value;
  TBranch *mERochCor2011A_branch;
  float mERochCor2011A_value;
  TBranch *mERochCor2011B_branch;
  float mERochCor2011B_value;
  TBranch *mERochCor2012_branch;
  float mERochCor2012_value;
  TBranch *mEffectiveArea2011_branch;
  float mEffectiveArea2011_value;
  TBranch *mEffectiveArea2012_branch;
  float mEffectiveArea2012_value;
  TBranch *mEta_branch;
  float mEta_value;
  TBranch *mEtaRochCor2011A_branch;
  float mEtaRochCor2011A_value;
  TBranch *mEtaRochCor2011B_branch;
  float mEtaRochCor2011B_value;
  TBranch *mEtaRochCor2012_branch;
  float mEtaRochCor2012_value;
  TBranch *mGenMotherPdgId_branch;
  float mGenMotherPdgId_value;
  TBranch *mGlbTrkHits_branch;
  float mGlbTrkHits_value;
  TBranch *mIDHZG2011_branch;
  float mIDHZG2011_value;
  TBranch *mIDHZG2012_branch;
  float mIDHZG2012_value;
  TBranch *mIP3DS_branch;
  float mIP3DS_value;
  TBranch *mIsGlobal_branch;
  float mIsGlobal_value;
  TBranch *mIsTracker_branch;
  float mIsTracker_value;
  TBranch *mJetArea_branch;
  float mJetArea_value;
  TBranch *mJetBtag_branch;
  float mJetBtag_value;
  TBranch *mJetCSVBtag_branch;
  float mJetCSVBtag_value;
  TBranch *mJetEtaEtaMoment_branch;
  float mJetEtaEtaMoment_value;
  TBranch *mJetEtaPhiMoment_branch;
  float mJetEtaPhiMoment_value;
  TBranch *mJetEtaPhiSpread_branch;
  float mJetEtaPhiSpread_value;
  TBranch *mJetPhiPhiMoment_branch;
  float mJetPhiPhiMoment_value;
  TBranch *mJetPt_branch;
  float mJetPt_value;
  TBranch *mL1Mu3EG5L3Filtered17_branch;
  float mL1Mu3EG5L3Filtered17_value;
  TBranch *mL3fL1DoubleMu10MuOpenL1f0L2f10L3Filtered17_branch;
  float mL3fL1DoubleMu10MuOpenL1f0L2f10L3Filtered17_value;
  TBranch *mMass_branch;
  float mMass_value;
  TBranch *mMatchedStations_branch;
  float mMatchedStations_value;
  TBranch *mMatchesDoubleMu2011Paths_branch;
  float mMatchesDoubleMu2011Paths_value;
  TBranch *mMatchesIsoMu24eta2p1_branch;
  float mMatchesIsoMu24eta2p1_value;
  TBranch *mMatchesIsoMuGroup_branch;
  float mMatchesIsoMuGroup_value;
  TBranch *mMatchesMu17Ele8Path_branch;
  float mMatchesMu17Ele8Path_value;
  TBranch *mMatchesMu17Mu8Path_branch;
  float mMatchesMu17Mu8Path_value;
  TBranch *mMatchesMu17TrkMu8Path_branch;
  float mMatchesMu17TrkMu8Path_value;
  TBranch *mMatchesMu8Ele17Path_branch;
  float mMatchesMu8Ele17Path_value;
  TBranch *mMtToMET_branch;
  float mMtToMET_value;
  TBranch *mMtToMVAMET_branch;
  float mMtToMVAMET_value;
  TBranch *mMtToPFMET_branch;
  float mMtToPFMET_value;
  TBranch *mMtToPfMet_Ty1_branch;
  float mMtToPfMet_Ty1_value;
  TBranch *mMtToPfMet_jes_branch;
  float mMtToPfMet_jes_value;
  TBranch *mMtToPfMet_mes_branch;
  float mMtToPfMet_mes_value;
  TBranch *mMtToPfMet_tes_branch;
  float mMtToPfMet_tes_value;
  TBranch *mMtToPfMet_ues_branch;
  float mMtToPfMet_ues_value;
  TBranch *mMu17Ele8dZFilter_branch;
  float mMu17Ele8dZFilter_value;
  TBranch *mMuonHits_branch;
  float mMuonHits_value;
  TBranch *mNormTrkChi2_branch;
  float mNormTrkChi2_value;
  TBranch *mPFChargedIso_branch;
  float mPFChargedIso_value;
  TBranch *mPFIDTight_branch;
  float mPFIDTight_value;
  TBranch *mPFNeutralIso_branch;
  float mPFNeutralIso_value;
  TBranch *mPFPUChargedIso_branch;
  float mPFPUChargedIso_value;
  TBranch *mPFPhotonIso_branch;
  float mPFPhotonIso_value;
  TBranch *mPVDXY_branch;
  float mPVDXY_value;
  TBranch *mPVDZ_branch;
  float mPVDZ_value;
  TBranch *mPhi_branch;
  float mPhi_value;
  TBranch *mPhiRochCor2011A_branch;
  float mPhiRochCor2011A_value;
  TBranch *mPhiRochCor2011B_branch;
  float mPhiRochCor2011B_value;
  TBranch *mPhiRochCor2012_branch;
  float mPhiRochCor2012_value;
  TBranch *mPixHits_branch;
  float mPixHits_value;
  TBranch *mPt_branch;
  float mPt_value;
  TBranch *mPtRochCor2011A_branch;
  float mPtRochCor2011A_value;
  TBranch *mPtRochCor2011B_branch;
  float mPtRochCor2011B_value;
  TBranch *mPtRochCor2012_branch;
  float mPtRochCor2012_value;
  TBranch *mPtUncorr_branch;
  float mPtUncorr_value;
  TBranch *mRelPFIsoDB_branch;
  float mRelPFIsoDB_value;
  TBranch *mRhoHZG2011_branch;
  float mRhoHZG2011_value;
  TBranch *mRhoHZG2012_branch;
  float mRhoHZG2012_value;
  TBranch *mSingleMu13L3Filtered13_branch;
  float mSingleMu13L3Filtered13_value;
  TBranch *mSingleMu13L3Filtered17_branch;
  float mSingleMu13L3Filtered17_value;
  TBranch *mTkLayersWithMeasurement_branch;
  float mTkLayersWithMeasurement_value;
  TBranch *mToMETDPhi_branch;
  float mToMETDPhi_value;
  TBranch *mTypeCode_branch;
  int mTypeCode_value;
  TBranch *mVBTFID_branch;
  float mVBTFID_value;
  TBranch *mVZ_branch;
  float mVZ_value;
  TBranch *mWWID_branch;
  float mWWID_value;
  TBranch *m_t_CosThetaStar_branch;
  float m_t_CosThetaStar_value;
  TBranch *m_t_DPhi_branch;
  float m_t_DPhi_value;
  TBranch *m_t_DR_branch;
  float m_t_DR_value;
  TBranch *m_t_Mass_branch;
  float m_t_Mass_value;
  TBranch *m_t_PZeta_branch;
  float m_t_PZeta_value;
  TBranch *m_t_PZetaVis_branch;
  float m_t_PZetaVis_value;
  TBranch *m_t_Pt_branch;
  float m_t_Pt_value;
  TBranch *m_t_SS_branch;
  float m_t_SS_value;
  TBranch *m_t_ToMETDPhi_Ty1_branch;
  float m_t_ToMETDPhi_Ty1_value;
  TBranch *m_t_Zcompat_branch;
  float m_t_Zcompat_value;
  TBranch *mu17ele8Group_branch;
  float mu17ele8Group_value;
  TBranch *mu17ele8Pass_branch;
  float mu17ele8Pass_value;
  TBranch *mu17ele8Prescale_branch;
  float mu17ele8Prescale_value;
  TBranch *mu17ele8isoGroup_branch;
  float mu17ele8isoGroup_value;
  TBranch *mu17ele8isoPass_branch;
  float mu17ele8isoPass_value;
  TBranch *mu17ele8isoPrescale_branch;
  float mu17ele8isoPrescale_value;
  TBranch *mu17mu8Group_branch;
  float mu17mu8Group_value;
  TBranch *mu17mu8Pass_branch;
  float mu17mu8Pass_value;
  TBranch *mu17mu8Prescale_branch;
  float mu17mu8Prescale_value;
  TBranch *mu8ele17Group_branch;
  float mu8ele17Group_value;
  TBranch *mu8ele17Pass_branch;
  float mu8ele17Pass_value;
  TBranch *mu8ele17Prescale_branch;
  float mu8ele17Prescale_value;
  TBranch *mu8ele17isoGroup_branch;
  float mu8ele17isoGroup_value;
  TBranch *mu8ele17isoPass_branch;
  float mu8ele17isoPass_value;
  TBranch *mu8ele17isoPrescale_branch;
  float mu8ele17isoPrescale_value;
  TBranch *muGlbIsoVetoPt10_branch;
  float muGlbIsoVetoPt10_value;
  TBranch *muTauGroup_branch;
  float muTauGroup_value;
  TBranch *muTauPass_branch;
  float muTauPass_value;
  TBranch *muTauPrescale_branch;
  float muTauPrescale_value;
  TBranch *muTauTestGroup_branch;
  float muTauTestGroup_value;
  TBranch *muTauTestPass_branch;
  float muTauTestPass_value;
  TBranch *muTauTestPrescale_branch;
  float muTauTestPrescale_value;
  TBranch *muVetoPt15IsoIdVtx_branch;
  float muVetoPt15IsoIdVtx_value;
  TBranch *muVetoPt5_branch;
  float muVetoPt5_value;
  TBranch *muVetoPt5IsoIdVtx_branch;
  float muVetoPt5IsoIdVtx_value;
  TBranch *mva_metEt_branch;
  float mva_metEt_value;
  TBranch *mva_metPhi_branch;
  float mva_metPhi_value;
  TBranch *nTruePU_branch;
  float nTruePU_value;
  TBranch *nvtx_branch;
  float nvtx_value;
  TBranch *pfMetEt_branch;
  float pfMetEt_value;
  TBranch *pfMetPhi_branch;
  float pfMetPhi_value;
  TBranch *pfMet_jes_Et_branch;
  float pfMet_jes_Et_value;
  TBranch *pfMet_jes_Phi_branch;
  float pfMet_jes_Phi_value;
  TBranch *pfMet_mes_Et_branch;
  float pfMet_mes_Et_value;
  TBranch *pfMet_mes_Phi_branch;
  float pfMet_mes_Phi_value;
  TBranch *pfMet_tes_Et_branch;
  float pfMet_tes_Et_value;
  TBranch *pfMet_tes_Phi_branch;
  float pfMet_tes_Phi_value;
  TBranch *pfMet_ues_Et_branch;
  float pfMet_ues_Et_value;
  TBranch *pfMet_ues_Phi_branch;
  float pfMet_ues_Phi_value;
  TBranch *processID_branch;
  float processID_value;
  TBranch *pvChi2_branch;
  float pvChi2_value;
  TBranch *pvDX_branch;
  float pvDX_value;
  TBranch *pvDY_branch;
  float pvDY_value;
  TBranch *pvDZ_branch;
  float pvDZ_value;
  TBranch *pvIsFake_branch;
  int pvIsFake_value;
  TBranch *pvIsValid_branch;
  int pvIsValid_value;
  TBranch *pvNormChi2_branch;
  float pvNormChi2_value;
  TBranch *pvX_branch;
  float pvX_value;
  TBranch *pvY_branch;
  float pvY_value;
  TBranch *pvZ_branch;
  float pvZ_value;
  TBranch *pvndof_branch;
  float pvndof_value;
  TBranch *recoilDaught_branch;
  float recoilDaught_value;
  TBranch *recoilWithMet_branch;
  float recoilWithMet_value;
  TBranch *rho_branch;
  float rho_value;
  TBranch *run_branch;
  int run_value;
  TBranch *singleEGroup_branch;
  float singleEGroup_value;
  TBranch *singleEPFMTGroup_branch;
  float singleEPFMTGroup_value;
  TBranch *singleEPFMTPass_branch;
  float singleEPFMTPass_value;
  TBranch *singleEPFMTPrescale_branch;
  float singleEPFMTPrescale_value;
  TBranch *singleEPass_branch;
  float singleEPass_value;
  TBranch *singleEPrescale_branch;
  float singleEPrescale_value;
  TBranch *singleMuGroup_branch;
  float singleMuGroup_value;
  TBranch *singleMuPass_branch;
  float singleMuPass_value;
  TBranch *singleMuPrescale_branch;
  float singleMuPrescale_value;
  TBranch *singlePhoGroup_branch;
  float singlePhoGroup_value;
  TBranch *singlePhoPass_branch;
  float singlePhoPass_value;
  TBranch *singlePhoPrescale_branch;
  float singlePhoPrescale_value;
  TBranch *tAbsEta_branch;
  float tAbsEta_value;
  TBranch *tAntiElectronLoose_branch;
  float tAntiElectronLoose_value;
  TBranch *tAntiElectronMVA_branch;
  float tAntiElectronMVA_value;
  TBranch *tAntiElectronMVA2Loose_branch;
  float tAntiElectronMVA2Loose_value;
  TBranch *tAntiElectronMVA2Medium_branch;
  float tAntiElectronMVA2Medium_value;
  TBranch *tAntiElectronMVA2Tight_branch;
  float tAntiElectronMVA2Tight_value;
  TBranch *tAntiElectronMVA2Vloose_branch;
  float tAntiElectronMVA2Vloose_value;
  TBranch *tAntiElectronMVA3Loose_branch;
  float tAntiElectronMVA3Loose_value;
  TBranch *tAntiElectronMVA3Medium_branch;
  float tAntiElectronMVA3Medium_value;
  TBranch *tAntiElectronMVA3Tight_branch;
  float tAntiElectronMVA3Tight_value;
  TBranch *tAntiElectronMVA3VTight_branch;
  float tAntiElectronMVA3VTight_value;
  TBranch *tAntiElectronMedium_branch;
  float tAntiElectronMedium_value;
  TBranch *tAntiElectronTight_branch;
  float tAntiElectronTight_value;
  TBranch *tAntiMuonLoose_branch;
  float tAntiMuonLoose_value;
  TBranch *tAntiMuonLoose2_branch;
  float tAntiMuonLoose2_value;
  TBranch *tAntiMuonMedium_branch;
  float tAntiMuonMedium_value;
  TBranch *tAntiMuonMedium2_branch;
  float tAntiMuonMedium2_value;
  TBranch *tAntiMuonTight_branch;
  float tAntiMuonTight_value;
  TBranch *tAntiMuonTight2_branch;
  float tAntiMuonTight2_value;
  TBranch *tCharge_branch;
  float tCharge_value;
  TBranch *tCiCTightElecOverlap_branch;
  float tCiCTightElecOverlap_value;
  TBranch *tDZ_branch;
  float tDZ_value;
  TBranch *tDecayFinding_branch;
  float tDecayFinding_value;
  TBranch *tDecayMode_branch;
  float tDecayMode_value;
  TBranch *tElecOverlap_branch;
  float tElecOverlap_value;
  TBranch *tEta_branch;
  float tEta_value;
  TBranch *tGenDecayMode_branch;
  float tGenDecayMode_value;
  TBranch *tIP3DS_branch;
  float tIP3DS_value;
  TBranch *tJetArea_branch;
  float tJetArea_value;
  TBranch *tJetBtag_branch;
  float tJetBtag_value;
  TBranch *tJetCSVBtag_branch;
  float tJetCSVBtag_value;
  TBranch *tJetEtaEtaMoment_branch;
  float tJetEtaEtaMoment_value;
  TBranch *tJetEtaPhiMoment_branch;
  float tJetEtaPhiMoment_value;
  TBranch *tJetEtaPhiSpread_branch;
  float tJetEtaPhiSpread_value;
  TBranch *tJetPhiPhiMoment_branch;
  float tJetPhiPhiMoment_value;
  TBranch *tJetPt_branch;
  float tJetPt_value;
  TBranch *tLeadTrackPt_branch;
  float tLeadTrackPt_value;
  TBranch *tLooseIso_branch;
  float tLooseIso_value;
  TBranch *tLooseIso3Hits_branch;
  float tLooseIso3Hits_value;
  TBranch *tLooseMVA2Iso_branch;
  float tLooseMVA2Iso_value;
  TBranch *tLooseMVAIso_branch;
  float tLooseMVAIso_value;
  TBranch *tMass_branch;
  float tMass_value;
  TBranch *tMediumIso_branch;
  float tMediumIso_value;
  TBranch *tMediumIso3Hits_branch;
  float tMediumIso3Hits_value;
  TBranch *tMediumMVA2Iso_branch;
  float tMediumMVA2Iso_value;
  TBranch *tMediumMVAIso_branch;
  float tMediumMVAIso_value;
  TBranch *tMtToMET_branch;
  float tMtToMET_value;
  TBranch *tMtToMVAMET_branch;
  float tMtToMVAMET_value;
  TBranch *tMtToPFMET_branch;
  float tMtToPFMET_value;
  TBranch *tMtToPfMet_Ty1_branch;
  float tMtToPfMet_Ty1_value;
  TBranch *tMtToPfMet_jes_branch;
  float tMtToPfMet_jes_value;
  TBranch *tMtToPfMet_mes_branch;
  float tMtToPfMet_mes_value;
  TBranch *tMtToPfMet_tes_branch;
  float tMtToPfMet_tes_value;
  TBranch *tMtToPfMet_ues_branch;
  float tMtToPfMet_ues_value;
  TBranch *tMuOverlap_branch;
  float tMuOverlap_value;
  TBranch *tPhi_branch;
  float tPhi_value;
  TBranch *tPt_branch;
  float tPt_value;
  TBranch *tTNPId_branch;
  float tTNPId_value;
  TBranch *tTightIso_branch;
  float tTightIso_value;
  TBranch *tTightIso3Hits_branch;
  float tTightIso3Hits_value;
  TBranch *tTightMVA2Iso_branch;
  float tTightMVA2Iso_value;
  TBranch *tTightMVAIso_branch;
  float tTightMVAIso_value;
  TBranch *tToMETDPhi_branch;
  float tToMETDPhi_value;
  TBranch *tVLooseIso_branch;
  float tVLooseIso_value;
  TBranch *tVZ_branch;
  float tVZ_value;
  TBranch *tauHpsVetoPt20_branch;
  float tauHpsVetoPt20_value;
  TBranch *tauVetoPt20_branch;
  float tauVetoPt20_value;
  TBranch *tauVetoPt20Loose3HitsVtx_branch;
  float tauVetoPt20Loose3HitsVtx_value;
  TBranch *tauVetoPt20LooseMVA2Vtx_branch;
  float tauVetoPt20LooseMVA2Vtx_value;
  TBranch *tauVetoPt20LooseMVAVtx_branch;
  float tauVetoPt20LooseMVAVtx_value;
  TBranch *tauVetoPt20VLooseHPSVtx_branch;
  float tauVetoPt20VLooseHPSVtx_value;
  TBranch *type1_pfMetEt_branch;
  float type1_pfMetEt_value;
  TBranch *type1_pfMetPhi_branch;
  float type1_pfMetPhi_value;
  TBranch *vbfDeta_branch;
  float vbfDeta_value;
  TBranch *vbfDijetrap_branch;
  float vbfDijetrap_value;
  TBranch *vbfDphihj_branch;
  float vbfDphihj_value;
  TBranch *vbfDphihjnomet_branch;
  float vbfDphihjnomet_value;
  TBranch *vbfHrap_branch;
  float vbfHrap_value;
  TBranch *vbfJetVeto20_branch;
  float vbfJetVeto20_value;
  TBranch *vbfJetVeto30_branch;
  float vbfJetVeto30_value;
  TBranch *vbfMVA_branch;
  float vbfMVA_value;
  TBranch *vbfMass_branch;
  float vbfMass_value;
  TBranch *vbfNJets_branch;
  float vbfNJets_value;
  TBranch *vbfVispt_branch;
  float vbfVispt_value;
  TBranch *vbfj1eta_branch;
  float vbfj1eta_value;
  TBranch *vbfj2eta_branch;
  float vbfj2eta_value;
  TBranch *idx_branch;
  int idx_value;
};



struct __pyx_vtabstruct_9MuTauTree_MuTauTree {
  PyObject *(*load_entry)(struct __pyx_obj_9MuTauTree_MuTauTree *, long);
  PyObject *(*setup_branches)(struct __pyx_obj_9MuTauTree_MuTauTree *, TTree *);
};
static struct __pyx_vtabstruct_9MuTauTree_MuTauTree *__pyx_vtabptr_9MuTauTree_MuTauTree;
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname); /*proto*/
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil) \
          if (acquire_gil) { \
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure(); \
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__); \
              PyGILState_Release(__pyx_gilstate_save); \
          } else { \
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__); \
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil) \
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
#endif
  #define __Pyx_RefNannyFinishContext() \
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XINCREF(r)  do { if((r) != NULL) {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) != NULL) {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) != NULL) {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif /* CYTHON_REFNANNY */
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

static PyObject *__Pyx_GetBuiltinName(PyObject *name); /*proto*/

static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found); /*proto*/

static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name); /*proto*/

static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[], \
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args, \
    const char* function_name); /*proto*/

static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name); /*proto*/

#if PY_VERSION_HEX < 0x02050000
#ifndef PyAnySet_CheckExact
#define PyAnySet_CheckExact(ob) \
    ((ob)->ob_type == &PySet_Type || \
     (ob)->ob_type == &PyFrozenSet_Type)
#define PySet_New(iterable) \
    PyObject_CallFunctionObjArgs((PyObject *)&PySet_Type, (iterable), NULL)
#define Pyx_PyFrozenSet_New(iterable) \
    PyObject_CallFunctionObjArgs((PyObject *)&PyFrozenSet_Type, (iterable), NULL)
#define PySet_Size(anyset) \
    PyObject_Size((anyset))
#define PySet_Contains(anyset, key) \
    PySequence_Contains((anyset), (key))
#define PySet_Pop(set) \
    PyObject_CallMethod(set, (char *)"pop", NULL)
static CYTHON_INLINE int PySet_Clear(PyObject *set) {
    PyObject *ret = PyObject_CallMethod(set, (char *)"clear", NULL);
    if (!ret) return -1;
    Py_DECREF(ret); return 0;
}
static CYTHON_INLINE int PySet_Discard(PyObject *set, PyObject *key) {
    PyObject *ret = PyObject_CallMethod(set, (char *)"discard", (char *)"O", key);
    if (!ret) return -1;
    Py_DECREF(ret); return 0;
}
static CYTHON_INLINE int PySet_Add(PyObject *set, PyObject *key) {
    PyObject *ret = PyObject_CallMethod(set, (char *)"add", (char *)"O", key);
    if (!ret) return -1;
    Py_DECREF(ret); return 0;
}
#endif /* PyAnySet_CheckExact (<= Py2.4) */
#endif /* < Py2.5  */

static CYTHON_INLINE PyObject *__Pyx_GetModuleGlobalName(PyObject *name); /*proto*/

#include <string.h>

static int __Pyx_SetVtable(PyObject *dict, void *vtable); /*proto*/

#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_PyObject_DelAttrStr(o,n) __Pyx_PyObject_SetAttrStr(o,n,NULL)
static CYTHON_INLINE int __Pyx_PyObject_SetAttrStr(PyObject* obj, PyObject* attr_name, PyObject* value) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_setattro))
        return tp->tp_setattro(obj, attr_name, value);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_setattr))
        return tp->tp_setattr(obj, PyString_AS_STRING(attr_name), value);
#endif
    return PyObject_SetAttr(obj, attr_name, value);
}
#else
#define __Pyx_PyObject_DelAttrStr(o,n)   PyObject_DelAttr(o,n)
#define __Pyx_PyObject_SetAttrStr(o,n,v) PyObject_SetAttr(o,n,v)
#endif

static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level); /*proto*/

static int __Pyx_Print(PyObject*, PyObject *, int); /*proto*/
#if CYTHON_COMPILING_IN_PYPY || PY_MAJOR_VERSION >= 3
static PyObject* __pyx_print = 0;
static PyObject* __pyx_print_kwargs = 0;
#endif

static int __Pyx_PrintOne(PyObject* stream, PyObject *o); /*proto*/

static CYTHON_INLINE unsigned char __Pyx_PyInt_AsUnsignedChar(PyObject *);

static CYTHON_INLINE unsigned short __Pyx_PyInt_AsUnsignedShort(PyObject *);

static CYTHON_INLINE unsigned int __Pyx_PyInt_AsUnsignedInt(PyObject *);

static CYTHON_INLINE char __Pyx_PyInt_AsChar(PyObject *);

static CYTHON_INLINE short __Pyx_PyInt_AsShort(PyObject *);

static CYTHON_INLINE int __Pyx_PyInt_AsInt(PyObject *);

static CYTHON_INLINE signed char __Pyx_PyInt_AsSignedChar(PyObject *);

static CYTHON_INLINE signed short __Pyx_PyInt_AsSignedShort(PyObject *);

static CYTHON_INLINE signed int __Pyx_PyInt_AsSignedInt(PyObject *);

static CYTHON_INLINE int __Pyx_PyInt_AsLongDouble(PyObject *);

static CYTHON_INLINE unsigned long __Pyx_PyInt_AsUnsignedLong(PyObject *);

static CYTHON_INLINE unsigned PY_LONG_LONG __Pyx_PyInt_AsUnsignedLongLong(PyObject *);

static CYTHON_INLINE long __Pyx_PyInt_AsLong(PyObject *);

static CYTHON_INLINE PY_LONG_LONG __Pyx_PyInt_AsLongLong(PyObject *);

static CYTHON_INLINE signed long __Pyx_PyInt_AsSignedLong(PyObject *);

static CYTHON_INLINE signed PY_LONG_LONG __Pyx_PyInt_AsSignedLongLong(PyObject *);

static CYTHON_INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb); /*proto*/
static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb); /*proto*/

static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause); /*proto*/

static PyObject* __Pyx_PyObject_CallMethodTuple(PyObject* obj, PyObject* method_name, PyObject* args) {
    PyObject *method, *result = NULL;
    if (unlikely(!args)) return NULL;
    method = __Pyx_PyObject_GetAttrStr(obj, method_name);
    if (unlikely(!method)) goto bad;
    result = PyObject_Call(method, args, NULL);
    Py_DECREF(method);
bad:
    Py_DECREF(args);
    return result;
}
#define __Pyx_PyObject_CallMethod3(obj, name, arg1, arg2, arg3) \
    __Pyx_PyObject_CallMethodTuple(obj, name, PyTuple_Pack(3, arg1, arg2, arg3))
#define __Pyx_PyObject_CallMethod2(obj, name, arg1, arg2) \
    __Pyx_PyObject_CallMethodTuple(obj, name, PyTuple_Pack(2, arg1, arg2))
#define __Pyx_PyObject_CallMethod1(obj, name, arg1) \
    __Pyx_PyObject_CallMethodTuple(obj, name, PyTuple_Pack(1, arg1))
#define __Pyx_PyObject_CallMethod0(obj, name) \
    __Pyx_PyObject_CallMethodTuple(obj, name, (Py_INCREF(__pyx_empty_tuple), __pyx_empty_tuple))

static CYTHON_INLINE void __Pyx_ExceptionSwap(PyObject **type, PyObject **value, PyObject **tb); /*proto*/

#define __Pyx_Generator_USED
#include <structmember.h>
#include <frameobject.h>
typedef PyObject *(*__pyx_generator_body_t)(PyObject *, PyObject *);
typedef struct {
    PyObject_HEAD
    __pyx_generator_body_t body;
    PyObject *closure;
    PyObject *exc_type;
    PyObject *exc_value;
    PyObject *exc_traceback;
    PyObject *gi_weakreflist;
    PyObject *classobj;
    PyObject *yieldfrom;
    int resume_label;
    char is_running;  // using T_BOOL for property below requires char value
} __pyx_GeneratorObject;
static __pyx_GeneratorObject *__Pyx_Generator_New(__pyx_generator_body_t body,
                                                  PyObject *closure);
static int __pyx_Generator_init(void);
static int __Pyx_Generator_clear(PyObject* self);
#if 1 || PY_VERSION_HEX < 0x030300B0
static int __Pyx_PyGen_FetchStopIterationValue(PyObject **pvalue);
#else
#define __Pyx_PyGen_FetchStopIterationValue(pvalue) PyGen_FetchStopIterationValue(pvalue)
#endif

static int __Pyx_check_binary_version(void);

#if !defined(__Pyx_PyIdentifier_FromString)
#if PY_MAJOR_VERSION < 3
  #define __Pyx_PyIdentifier_FromString(s) PyString_FromString(s)
#else
  #define __Pyx_PyIdentifier_FromString(s) PyUnicode_FromString(s)
#endif
#endif

static PyObject *__Pyx_ImportModule(const char *name); /*proto*/

static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name, size_t size, int strict);  /*proto*/

typedef struct {
    int code_line;
    PyCodeObject* code_object;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);

static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename); /*proto*/

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t); /*proto*/


/* Module declarations from 'cpython.version' */

/* Module declarations from 'cpython.ref' */

/* Module declarations from 'cpython.exc' */

/* Module declarations from 'cpython.module' */

/* Module declarations from 'cpython.mem' */

/* Module declarations from 'cpython.tuple' */

/* Module declarations from 'cpython.list' */

/* Module declarations from 'libc.string' */

/* Module declarations from 'libc.stdio' */

/* Module declarations from 'cpython.object' */

/* Module declarations from 'cpython.sequence' */

/* Module declarations from 'cpython.mapping' */

/* Module declarations from 'cpython.iterator' */

/* Module declarations from '__builtin__' */

/* Module declarations from 'cpython.type' */
static PyTypeObject *__pyx_ptype_7cpython_4type_type = 0;

/* Module declarations from 'cpython.number' */

/* Module declarations from 'cpython.int' */

/* Module declarations from '__builtin__' */

/* Module declarations from 'cpython.bool' */
static PyTypeObject *__pyx_ptype_7cpython_4bool_bool = 0;

/* Module declarations from 'cpython.long' */

/* Module declarations from 'cpython.float' */

/* Module declarations from '__builtin__' */

/* Module declarations from 'cpython.complex' */
static PyTypeObject *__pyx_ptype_7cpython_7complex_complex = 0;

/* Module declarations from 'cpython.string' */

/* Module declarations from 'cpython.unicode' */

/* Module declarations from 'cpython.dict' */

/* Module declarations from 'cpython.instance' */

/* Module declarations from 'cpython.function' */

/* Module declarations from 'cpython.method' */

/* Module declarations from 'cpython.weakref' */

/* Module declarations from 'cpython.getargs' */

/* Module declarations from 'cpython.pythread' */

/* Module declarations from 'cpython.pystate' */

/* Module declarations from 'cpython.cobject' */

/* Module declarations from 'cpython.oldbuffer' */

/* Module declarations from 'cpython.set' */

/* Module declarations from 'cpython.buffer' */

/* Module declarations from 'cpython.bytes' */

/* Module declarations from 'cpython.pycapsule' */

/* Module declarations from 'cpython' */

/* Module declarations from 'MuTauTree' */
static PyTypeObject *__pyx_ptype_9MuTauTree___pyx_scope_struct____iter__ = 0;
static PyTypeObject *__pyx_ptype_9MuTauTree___pyx_scope_struct_1_where = 0;
static PyTypeObject *__pyx_ptype_9MuTauTree_MuTauTree = 0;
#define __Pyx_MODULE_NAME "MuTauTree"
int __pyx_module_is_main_MuTauTree = 0;

/* Implementation of 'MuTauTree' */
static PyObject *__pyx_builtin_Warning;
static PyObject *__pyx_pf_9MuTauTree_my_warning_format(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_message, PyObject *__pyx_v_category, CYTHON_UNUSED PyObject *__pyx_v_filename, CYTHON_UNUSED PyObject *__pyx_v_lineno, CYTHON_UNUSED PyObject *__pyx_v_line); /* proto */
static int __pyx_pf_9MuTauTree_9MuTauTree___cinit__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self, PyObject *__pyx_v_ttree); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_2__iter__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_5where(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self, PyObject *__pyx_v_filter); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_5entry___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static int __pyx_pf_9MuTauTree_9MuTauTree_5entry_2__set__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self, int __pyx_v_i); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_2LT___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_4Mass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9MassError___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11MassErrord1___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11MassErrord2___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11MassErrord3___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11MassErrord4___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_2Pt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11bjetCSVVeto___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13bjetCSVVeto30___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_17bjetCSVVetoZHLike___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_24bjetCSVVetoZHLikeNoJetId___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8bjetVeto___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6charge___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_17doubleEExtraGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16doubleEExtraPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_20doubleEExtraPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12doubleEGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11doubleEPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_15doubleEPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_17doubleETightGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16doubleETightPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_20doubleETightPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13doubleMuGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12doubleMuPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16doubleMuPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16doubleMuTrkGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_15doubleMuTrkPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_19doubleMuTrkPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14doublePhoGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13doublePhoPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_17doublePhoPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16eVetoCicTightIso___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11eVetoMVAIso___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14eVetoMVAIsoVtx___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3evt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9isGtautau___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_7isWmunu___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8isWtaunu___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9isZtautau___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6isdata___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_18isoMu24eta2p1Group___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_17isoMu24eta2p1Pass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_21isoMu24eta2p1Prescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10isoMuGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9isoMuPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13isoMuPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13isoMuTauGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12isoMuTauPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16isoMuTauPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9jetVeto20___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9jetVeto30___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9jetVeto40___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_4lumi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_7mAbsEta___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_7mCharge___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_15mComesFromHiggs___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3mD0___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3mDZ___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_21mDiMuonL3PreFiltered7___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_23mDiMuonL3p5PreFiltered8___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_27mDiMuonMu17Mu8DzFiltered0p2___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_17mEErrRochCor2011A___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_17mEErrRochCor2011B___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16mEErrRochCor2012___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14mERochCor2011A___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14mERochCor2011B___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13mERochCor2012___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_18mEffectiveArea2011___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_18mEffectiveArea2012___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_4mEta___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16mEtaRochCor2011A___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16mEtaRochCor2011B___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_15mEtaRochCor2012___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_15mGenMotherPdgId___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11mGlbTrkHits___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10mIDHZG2011___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10mIDHZG2012___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6mIP3DS___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9mIsGlobal___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10mIsTracker___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8mJetArea___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8mJetBtag___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11mJetCSVBtag___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16mJetEtaEtaMoment___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16mJetEtaPhiMoment___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16mJetEtaPhiSpread___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16mJetPhiPhiMoment___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6mJetPt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_21mL1Mu3EG5L3Filtered17___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_43mL3fL1DoubleMu10MuOpenL1f0L2f10L3Filtered17___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_5mMass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16mMatchedStations___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_25mMatchesDoubleMu2011Paths___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_21mMatchesIsoMu24eta2p1___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_18mMatchesIsoMuGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_20mMatchesMu17Ele8Path___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_19mMatchesMu17Mu8Path___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_22mMatchesMu17TrkMu8Path___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_20mMatchesMu8Ele17Path___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8mMtToMET___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11mMtToMVAMET___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10mMtToPFMET___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14mMtToPfMet_Ty1___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14mMtToPfMet_jes___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14mMtToPfMet_mes___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14mMtToPfMet_tes___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14mMtToPfMet_ues___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_17mMu17Ele8dZFilter___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9mMuonHits___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12mNormTrkChi2___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13mPFChargedIso___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10mPFIDTight___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13mPFNeutralIso___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_15mPFPUChargedIso___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12mPFPhotonIso___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6mPVDXY___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_5mPVDZ___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_4mPhi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16mPhiRochCor2011A___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16mPhiRochCor2011B___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_15mPhiRochCor2012___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8mPixHits___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3mPt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_15mPtRochCor2011A___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_15mPtRochCor2011B___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14mPtRochCor2012___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9mPtUncorr___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11mRelPFIsoDB___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11mRhoHZG2011___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11mRhoHZG2012___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_23mSingleMu13L3Filtered13___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_23mSingleMu13L3Filtered17___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_24mTkLayersWithMeasurement___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10mToMETDPhi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9mTypeCode___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_7mVBTFID___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3mVZ___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_5mWWID___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16m_t_CosThetaStar___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8m_t_DPhi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6m_t_DR___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8m_t_Mass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9m_t_PZeta___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12m_t_PZetaVis___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6m_t_Pt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6m_t_SS___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_17m_t_ToMETDPhi_Ty1___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11m_t_Zcompat___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13mu17ele8Group___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12mu17ele8Pass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16mu17ele8Prescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16mu17ele8isoGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_15mu17ele8isoPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_19mu17ele8isoPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12mu17mu8Group___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11mu17mu8Pass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_15mu17mu8Prescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13mu8ele17Group___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12mu8ele17Pass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16mu8ele17Prescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16mu8ele17isoGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_15mu8ele17isoPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_19mu8ele17isoPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16muGlbIsoVetoPt10___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10muTauGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9muTauPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13muTauPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14muTauTestGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13muTauTestPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_17muTauTestPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_18muVetoPt15IsoIdVtx___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9muVetoPt5___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_17muVetoPt5IsoIdVtx___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9mva_metEt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10mva_metPhi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_7nTruePU___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_4nvtx___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_7pfMetEt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8pfMetPhi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12pfMet_jes_Et___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13pfMet_jes_Phi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12pfMet_mes_Et___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13pfMet_mes_Phi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12pfMet_tes_Et___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13pfMet_tes_Phi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12pfMet_ues_Et___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13pfMet_ues_Phi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9processID___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6pvChi2___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_4pvDX___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_4pvDY___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_4pvDZ___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8pvIsFake___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9pvIsValid___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10pvNormChi2___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3pvX___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3pvY___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3pvZ___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6pvndof___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12recoilDaught___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13recoilWithMet___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3rho___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3run___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12singleEGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16singleEPFMTGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_15singleEPFMTPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_19singleEPFMTPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11singleEPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_15singleEPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13singleMuGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12singleMuPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16singleMuPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14singlePhoGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13singlePhoPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_17singlePhoPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_7tAbsEta___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_18tAntiElectronLoose___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16tAntiElectronMVA___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_22tAntiElectronMVA2Loose___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_23tAntiElectronMVA2Medium___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_22tAntiElectronMVA2Tight___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_23tAntiElectronMVA2Vloose___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_22tAntiElectronMVA3Loose___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_23tAntiElectronMVA3Medium___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_22tAntiElectronMVA3Tight___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_23tAntiElectronMVA3VTight___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_19tAntiElectronMedium___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_18tAntiElectronTight___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14tAntiMuonLoose___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_15tAntiMuonLoose2___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_15tAntiMuonMedium___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16tAntiMuonMedium2___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14tAntiMuonTight___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_15tAntiMuonTight2___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_7tCharge___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_20tCiCTightElecOverlap___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3tDZ___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13tDecayFinding___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10tDecayMode___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12tElecOverlap___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_4tEta___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13tGenDecayMode___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6tIP3DS___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8tJetArea___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8tJetBtag___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11tJetCSVBtag___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16tJetEtaEtaMoment___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16tJetEtaPhiMoment___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16tJetEtaPhiSpread___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16tJetPhiPhiMoment___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6tJetPt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12tLeadTrackPt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9tLooseIso___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14tLooseIso3Hits___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13tLooseMVA2Iso___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12tLooseMVAIso___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_5tMass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10tMediumIso___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_15tMediumIso3Hits___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14tMediumMVA2Iso___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13tMediumMVAIso___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8tMtToMET___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11tMtToMVAMET___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10tMtToPFMET___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14tMtToPfMet_Ty1___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14tMtToPfMet_jes___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14tMtToPfMet_mes___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14tMtToPfMet_tes___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14tMtToPfMet_ues___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10tMuOverlap___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_4tPhi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3tPt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6tTNPId___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9tTightIso___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14tTightIso3Hits___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13tTightMVA2Iso___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12tTightMVAIso___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10tToMETDPhi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10tVLooseIso___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3tVZ___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14tauHpsVetoPt20___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11tauVetoPt20___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_24tauVetoPt20Loose3HitsVtx___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_23tauVetoPt20LooseMVA2Vtx___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_22tauVetoPt20LooseMVAVtx___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_23tauVetoPt20VLooseHPSVtx___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13type1_pfMetEt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14type1_pfMetPhi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_7vbfDeta___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11vbfDijetrap___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9vbfDphihj___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14vbfDphihjnomet___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_7vbfHrap___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12vbfJetVeto20___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12vbfJetVeto30___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6vbfMVA___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_7vbfMass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8vbfNJets___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8vbfVispt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8vbfj1eta___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8vbfj2eta___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3idx___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10complained___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static int __pyx_pf_9MuTauTree_9MuTauTree_10complained_2__set__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_9MuTauTree_9MuTauTree_10complained_4__del__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self); /* proto */
static PyObject *__pyx_tp_new_9MuTauTree___pyx_scope_struct____iter__(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9MuTauTree___pyx_scope_struct_1_where(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_9MuTauTree_MuTauTree(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static char __pyx_k_1[] = "";
static char __pyx_k_2[] = "%s:%s\n";
static char __pyx_k_3[] = "MuTauTree: Expected branch LT does not exist! It will crash if you try and use it!";
static char __pyx_k_4[] = "MuTauTree: Expected branch Mass does not exist! It will crash if you try and use it!";
static char __pyx_k_5[] = "MuTauTree: Expected branch MassError does not exist! It will crash if you try and use it!";
static char __pyx_k_6[] = "MuTauTree: Expected branch MassErrord1 does not exist! It will crash if you try and use it!";
static char __pyx_k_7[] = "MuTauTree: Expected branch MassErrord2 does not exist! It will crash if you try and use it!";
static char __pyx_k_8[] = "MuTauTree: Expected branch MassErrord3 does not exist! It will crash if you try and use it!";
static char __pyx_k_9[] = "MuTauTree: Expected branch MassErrord4 does not exist! It will crash if you try and use it!";
static char __pyx_k_10[] = "MuTauTree: Expected branch Pt does not exist! It will crash if you try and use it!";
static char __pyx_k_11[] = "MuTauTree: Expected branch bjetCSVVeto does not exist! It will crash if you try and use it!";
static char __pyx_k_12[] = "MuTauTree: Expected branch bjetCSVVeto30 does not exist! It will crash if you try and use it!";
static char __pyx_k_13[] = "MuTauTree: Expected branch bjetCSVVetoZHLike does not exist! It will crash if you try and use it!";
static char __pyx_k_14[] = "bjetCSVVetoZHLikeNoJetId";
static char __pyx_k_15[] = "MuTauTree: Expected branch bjetCSVVetoZHLikeNoJetId does not exist! It will crash if you try and use it!";
static char __pyx_k_16[] = "MuTauTree: Expected branch bjetVeto does not exist! It will crash if you try and use it!";
static char __pyx_k_17[] = "MuTauTree: Expected branch charge does not exist! It will crash if you try and use it!";
static char __pyx_k_18[] = "MuTauTree: Expected branch doubleEExtraGroup does not exist! It will crash if you try and use it!";
static char __pyx_k_19[] = "MuTauTree: Expected branch doubleEExtraPass does not exist! It will crash if you try and use it!";
static char __pyx_k_20[] = "doubleEExtraPrescale";
static char __pyx_k_21[] = "MuTauTree: Expected branch doubleEExtraPrescale does not exist! It will crash if you try and use it!";
static char __pyx_k_22[] = "MuTauTree: Expected branch doubleEGroup does not exist! It will crash if you try and use it!";
static char __pyx_k_23[] = "MuTauTree: Expected branch doubleEPass does not exist! It will crash if you try and use it!";
static char __pyx_k_24[] = "MuTauTree: Expected branch doubleEPrescale does not exist! It will crash if you try and use it!";
static char __pyx_k_25[] = "MuTauTree: Expected branch doubleETightGroup does not exist! It will crash if you try and use it!";
static char __pyx_k_26[] = "MuTauTree: Expected branch doubleETightPass does not exist! It will crash if you try and use it!";
static char __pyx_k_27[] = "doubleETightPrescale";
static char __pyx_k_28[] = "MuTauTree: Expected branch doubleETightPrescale does not exist! It will crash if you try and use it!";
static char __pyx_k_29[] = "MuTauTree: Expected branch doubleMuGroup does not exist! It will crash if you try and use it!";
static char __pyx_k_30[] = "MuTauTree: Expected branch doubleMuPass does not exist! It will crash if you try and use it!";
static char __pyx_k_31[] = "MuTauTree: Expected branch doubleMuPrescale does not exist! It will crash if you try and use it!";
static char __pyx_k_32[] = "MuTauTree: Expected branch doubleMuTrkGroup does not exist! It will crash if you try and use it!";
static char __pyx_k_33[] = "MuTauTree: Expected branch doubleMuTrkPass does not exist! It will crash if you try and use it!";
static char __pyx_k_34[] = "MuTauTree: Expected branch doubleMuTrkPrescale does not exist! It will crash if you try and use it!";
static char __pyx_k_35[] = "MuTauTree: Expected branch doublePhoGroup does not exist! It will crash if you try and use it!";
static char __pyx_k_36[] = "MuTauTree: Expected branch doublePhoPass does not exist! It will crash if you try and use it!";
static char __pyx_k_37[] = "MuTauTree: Expected branch doublePhoPrescale does not exist! It will crash if you try and use it!";
static char __pyx_k_38[] = "MuTauTree: Expected branch eVetoCicTightIso does not exist! It will crash if you try and use it!";
static char __pyx_k_39[] = "MuTauTree: Expected branch eVetoMVAIso does not exist! It will crash if you try and use it!";
static char __pyx_k_40[] = "MuTauTree: Expected branch eVetoMVAIsoVtx does not exist! It will crash if you try and use it!";
static char __pyx_k_41[] = "MuTauTree: Expected branch evt does not exist! It will crash if you try and use it!";
static char __pyx_k_42[] = "MuTauTree: Expected branch isGtautau does not exist! It will crash if you try and use it!";
static char __pyx_k_43[] = "MuTauTree: Expected branch isWmunu does not exist! It will crash if you try and use it!";
static char __pyx_k_44[] = "MuTauTree: Expected branch isWtaunu does not exist! It will crash if you try and use it!";
static char __pyx_k_45[] = "MuTauTree: Expected branch isZtautau does not exist! It will crash if you try and use it!";
static char __pyx_k_46[] = "MuTauTree: Expected branch isdata does not exist! It will crash if you try and use it!";
static char __pyx_k_47[] = "MuTauTree: Expected branch isoMu24eta2p1Group does not exist! It will crash if you try and use it!";
static char __pyx_k_48[] = "MuTauTree: Expected branch isoMu24eta2p1Pass does not exist! It will crash if you try and use it!";
static char __pyx_k_49[] = "isoMu24eta2p1Prescale";
static char __pyx_k_50[] = "MuTauTree: Expected branch isoMu24eta2p1Prescale does not exist! It will crash if you try and use it!";
static char __pyx_k_51[] = "MuTauTree: Expected branch isoMuGroup does not exist! It will crash if you try and use it!";
static char __pyx_k_52[] = "MuTauTree: Expected branch isoMuPass does not exist! It will crash if you try and use it!";
static char __pyx_k_53[] = "MuTauTree: Expected branch isoMuPrescale does not exist! It will crash if you try and use it!";
static char __pyx_k_54[] = "MuTauTree: Expected branch isoMuTauGroup does not exist! It will crash if you try and use it!";
static char __pyx_k_55[] = "MuTauTree: Expected branch isoMuTauPass does not exist! It will crash if you try and use it!";
static char __pyx_k_56[] = "MuTauTree: Expected branch isoMuTauPrescale does not exist! It will crash if you try and use it!";
static char __pyx_k_57[] = "MuTauTree: Expected branch jetVeto20 does not exist! It will crash if you try and use it!";
static char __pyx_k_58[] = "MuTauTree: Expected branch jetVeto30 does not exist! It will crash if you try and use it!";
static char __pyx_k_59[] = "MuTauTree: Expected branch jetVeto40 does not exist! It will crash if you try and use it!";
static char __pyx_k_60[] = "MuTauTree: Expected branch lumi does not exist! It will crash if you try and use it!";
static char __pyx_k_61[] = "MuTauTree: Expected branch mAbsEta does not exist! It will crash if you try and use it!";
static char __pyx_k_62[] = "MuTauTree: Expected branch mCharge does not exist! It will crash if you try and use it!";
static char __pyx_k_63[] = "MuTauTree: Expected branch mComesFromHiggs does not exist! It will crash if you try and use it!";
static char __pyx_k_64[] = "MuTauTree: Expected branch mD0 does not exist! It will crash if you try and use it!";
static char __pyx_k_65[] = "MuTauTree: Expected branch mDZ does not exist! It will crash if you try and use it!";
static char __pyx_k_66[] = "mDiMuonL3PreFiltered7";
static char __pyx_k_67[] = "MuTauTree: Expected branch mDiMuonL3PreFiltered7 does not exist! It will crash if you try and use it!";
static char __pyx_k_68[] = "mDiMuonL3p5PreFiltered8";
static char __pyx_k_69[] = "MuTauTree: Expected branch mDiMuonL3p5PreFiltered8 does not exist! It will crash if you try and use it!";
static char __pyx_k_70[] = "mDiMuonMu17Mu8DzFiltered0p2";
static char __pyx_k_71[] = "MuTauTree: Expected branch mDiMuonMu17Mu8DzFiltered0p2 does not exist! It will crash if you try and use it!";
static char __pyx_k_72[] = "MuTauTree: Expected branch mEErrRochCor2011A does not exist! It will crash if you try and use it!";
static char __pyx_k_73[] = "MuTauTree: Expected branch mEErrRochCor2011B does not exist! It will crash if you try and use it!";
static char __pyx_k_74[] = "MuTauTree: Expected branch mEErrRochCor2012 does not exist! It will crash if you try and use it!";
static char __pyx_k_75[] = "MuTauTree: Expected branch mERochCor2011A does not exist! It will crash if you try and use it!";
static char __pyx_k_76[] = "MuTauTree: Expected branch mERochCor2011B does not exist! It will crash if you try and use it!";
static char __pyx_k_77[] = "MuTauTree: Expected branch mERochCor2012 does not exist! It will crash if you try and use it!";
static char __pyx_k_78[] = "MuTauTree: Expected branch mEffectiveArea2011 does not exist! It will crash if you try and use it!";
static char __pyx_k_79[] = "MuTauTree: Expected branch mEffectiveArea2012 does not exist! It will crash if you try and use it!";
static char __pyx_k_80[] = "MuTauTree: Expected branch mEta does not exist! It will crash if you try and use it!";
static char __pyx_k_81[] = "MuTauTree: Expected branch mEtaRochCor2011A does not exist! It will crash if you try and use it!";
static char __pyx_k_82[] = "MuTauTree: Expected branch mEtaRochCor2011B does not exist! It will crash if you try and use it!";
static char __pyx_k_83[] = "MuTauTree: Expected branch mEtaRochCor2012 does not exist! It will crash if you try and use it!";
static char __pyx_k_84[] = "MuTauTree: Expected branch mGenMotherPdgId does not exist! It will crash if you try and use it!";
static char __pyx_k_85[] = "MuTauTree: Expected branch mGlbTrkHits does not exist! It will crash if you try and use it!";
static char __pyx_k_86[] = "MuTauTree: Expected branch mIDHZG2011 does not exist! It will crash if you try and use it!";
static char __pyx_k_87[] = "MuTauTree: Expected branch mIDHZG2012 does not exist! It will crash if you try and use it!";
static char __pyx_k_88[] = "MuTauTree: Expected branch mIP3DS does not exist! It will crash if you try and use it!";
static char __pyx_k_89[] = "MuTauTree: Expected branch mIsGlobal does not exist! It will crash if you try and use it!";
static char __pyx_k_90[] = "MuTauTree: Expected branch mIsTracker does not exist! It will crash if you try and use it!";
static char __pyx_k_91[] = "MuTauTree: Expected branch mJetArea does not exist! It will crash if you try and use it!";
static char __pyx_k_92[] = "MuTauTree: Expected branch mJetBtag does not exist! It will crash if you try and use it!";
static char __pyx_k_93[] = "MuTauTree: Expected branch mJetCSVBtag does not exist! It will crash if you try and use it!";
static char __pyx_k_94[] = "MuTauTree: Expected branch mJetEtaEtaMoment does not exist! It will crash if you try and use it!";
static char __pyx_k_95[] = "MuTauTree: Expected branch mJetEtaPhiMoment does not exist! It will crash if you try and use it!";
static char __pyx_k_96[] = "MuTauTree: Expected branch mJetEtaPhiSpread does not exist! It will crash if you try and use it!";
static char __pyx_k_97[] = "MuTauTree: Expected branch mJetPhiPhiMoment does not exist! It will crash if you try and use it!";
static char __pyx_k_98[] = "MuTauTree: Expected branch mJetPt does not exist! It will crash if you try and use it!";
static char __pyx_k_99[] = "mL1Mu3EG5L3Filtered17";
static char __pyx_k_100[] = "MuTauTree: Expected branch mL1Mu3EG5L3Filtered17 does not exist! It will crash if you try and use it!";
static char __pyx_k_101[] = "mL3fL1DoubleMu10MuOpenL1f0L2f10L3Filtered17";
static char __pyx_k_102[] = "MuTauTree: Expected branch mL3fL1DoubleMu10MuOpenL1f0L2f10L3Filtered17 does not exist! It will crash if you try and use it!";
static char __pyx_k_103[] = "MuTauTree: Expected branch mMass does not exist! It will crash if you try and use it!";
static char __pyx_k_104[] = "MuTauTree: Expected branch mMatchedStations does not exist! It will crash if you try and use it!";
static char __pyx_k_105[] = "mMatchesDoubleMu2011Paths";
static char __pyx_k_106[] = "MuTauTree: Expected branch mMatchesDoubleMu2011Paths does not exist! It will crash if you try and use it!";
static char __pyx_k_107[] = "mMatchesIsoMu24eta2p1";
static char __pyx_k_108[] = "MuTauTree: Expected branch mMatchesIsoMu24eta2p1 does not exist! It will crash if you try and use it!";
static char __pyx_k_109[] = "MuTauTree: Expected branch mMatchesIsoMuGroup does not exist! It will crash if you try and use it!";
static char __pyx_k_110[] = "mMatchesMu17Ele8Path";
static char __pyx_k_111[] = "MuTauTree: Expected branch mMatchesMu17Ele8Path does not exist! It will crash if you try and use it!";
static char __pyx_k_112[] = "MuTauTree: Expected branch mMatchesMu17Mu8Path does not exist! It will crash if you try and use it!";
static char __pyx_k_113[] = "mMatchesMu17TrkMu8Path";
static char __pyx_k_114[] = "MuTauTree: Expected branch mMatchesMu17TrkMu8Path does not exist! It will crash if you try and use it!";
static char __pyx_k_115[] = "mMatchesMu8Ele17Path";
static char __pyx_k_116[] = "MuTauTree: Expected branch mMatchesMu8Ele17Path does not exist! It will crash if you try and use it!";
static char __pyx_k_117[] = "MuTauTree: Expected branch mMtToMET does not exist! It will crash if you try and use it!";
static char __pyx_k_118[] = "MuTauTree: Expected branch mMtToMVAMET does not exist! It will crash if you try and use it!";
static char __pyx_k_119[] = "MuTauTree: Expected branch mMtToPFMET does not exist! It will crash if you try and use it!";
static char __pyx_k_120[] = "MuTauTree: Expected branch mMtToPfMet_Ty1 does not exist! It will crash if you try and use it!";
static char __pyx_k_121[] = "MuTauTree: Expected branch mMtToPfMet_jes does not exist! It will crash if you try and use it!";
static char __pyx_k_122[] = "MuTauTree: Expected branch mMtToPfMet_mes does not exist! It will crash if you try and use it!";
static char __pyx_k_123[] = "MuTauTree: Expected branch mMtToPfMet_tes does not exist! It will crash if you try and use it!";
static char __pyx_k_124[] = "MuTauTree: Expected branch mMtToPfMet_ues does not exist! It will crash if you try and use it!";
static char __pyx_k_125[] = "MuTauTree: Expected branch mMu17Ele8dZFilter does not exist! It will crash if you try and use it!";
static char __pyx_k_126[] = "MuTauTree: Expected branch mMuonHits does not exist! It will crash if you try and use it!";
static char __pyx_k_127[] = "MuTauTree: Expected branch mNormTrkChi2 does not exist! It will crash if you try and use it!";
static char __pyx_k_128[] = "MuTauTree: Expected branch mPFChargedIso does not exist! It will crash if you try and use it!";
static char __pyx_k_129[] = "MuTauTree: Expected branch mPFIDTight does not exist! It will crash if you try and use it!";
static char __pyx_k_130[] = "MuTauTree: Expected branch mPFNeutralIso does not exist! It will crash if you try and use it!";
static char __pyx_k_131[] = "MuTauTree: Expected branch mPFPUChargedIso does not exist! It will crash if you try and use it!";
static char __pyx_k_132[] = "MuTauTree: Expected branch mPFPhotonIso does not exist! It will crash if you try and use it!";
static char __pyx_k_133[] = "MuTauTree: Expected branch mPVDXY does not exist! It will crash if you try and use it!";
static char __pyx_k_134[] = "MuTauTree: Expected branch mPVDZ does not exist! It will crash if you try and use it!";
static char __pyx_k_135[] = "MuTauTree: Expected branch mPhi does not exist! It will crash if you try and use it!";
static char __pyx_k_136[] = "MuTauTree: Expected branch mPhiRochCor2011A does not exist! It will crash if you try and use it!";
static char __pyx_k_137[] = "MuTauTree: Expected branch mPhiRochCor2011B does not exist! It will crash if you try and use it!";
static char __pyx_k_138[] = "MuTauTree: Expected branch mPhiRochCor2012 does not exist! It will crash if you try and use it!";
static char __pyx_k_139[] = "MuTauTree: Expected branch mPixHits does not exist! It will crash if you try and use it!";
static char __pyx_k_140[] = "MuTauTree: Expected branch mPt does not exist! It will crash if you try and use it!";
static char __pyx_k_141[] = "MuTauTree: Expected branch mPtRochCor2011A does not exist! It will crash if you try and use it!";
static char __pyx_k_142[] = "MuTauTree: Expected branch mPtRochCor2011B does not exist! It will crash if you try and use it!";
static char __pyx_k_143[] = "MuTauTree: Expected branch mPtRochCor2012 does not exist! It will crash if you try and use it!";
static char __pyx_k_144[] = "MuTauTree: Expected branch mPtUncorr does not exist! It will crash if you try and use it!";
static char __pyx_k_145[] = "MuTauTree: Expected branch mRelPFIsoDB does not exist! It will crash if you try and use it!";
static char __pyx_k_146[] = "MuTauTree: Expected branch mRhoHZG2011 does not exist! It will crash if you try and use it!";
static char __pyx_k_147[] = "MuTauTree: Expected branch mRhoHZG2012 does not exist! It will crash if you try and use it!";
static char __pyx_k_148[] = "mSingleMu13L3Filtered13";
static char __pyx_k_149[] = "MuTauTree: Expected branch mSingleMu13L3Filtered13 does not exist! It will crash if you try and use it!";
static char __pyx_k_150[] = "mSingleMu13L3Filtered17";
static char __pyx_k_151[] = "MuTauTree: Expected branch mSingleMu13L3Filtered17 does not exist! It will crash if you try and use it!";
static char __pyx_k_152[] = "mTkLayersWithMeasurement";
static char __pyx_k_153[] = "MuTauTree: Expected branch mTkLayersWithMeasurement does not exist! It will crash if you try and use it!";
static char __pyx_k_154[] = "MuTauTree: Expected branch mToMETDPhi does not exist! It will crash if you try and use it!";
static char __pyx_k_155[] = "MuTauTree: Expected branch mTypeCode does not exist! It will crash if you try and use it!";
static char __pyx_k_156[] = "MuTauTree: Expected branch mVBTFID does not exist! It will crash if you try and use it!";
static char __pyx_k_157[] = "MuTauTree: Expected branch mVZ does not exist! It will crash if you try and use it!";
static char __pyx_k_158[] = "MuTauTree: Expected branch mWWID does not exist! It will crash if you try and use it!";
static char __pyx_k_159[] = "MuTauTree: Expected branch m_t_CosThetaStar does not exist! It will crash if you try and use it!";
static char __pyx_k_160[] = "MuTauTree: Expected branch m_t_DPhi does not exist! It will crash if you try and use it!";
static char __pyx_k_161[] = "MuTauTree: Expected branch m_t_DR does not exist! It will crash if you try and use it!";
static char __pyx_k_162[] = "MuTauTree: Expected branch m_t_Mass does not exist! It will crash if you try and use it!";
static char __pyx_k_163[] = "MuTauTree: Expected branch m_t_PZeta does not exist! It will crash if you try and use it!";
static char __pyx_k_164[] = "MuTauTree: Expected branch m_t_PZetaVis does not exist! It will crash if you try and use it!";
static char __pyx_k_165[] = "MuTauTree: Expected branch m_t_Pt does not exist! It will crash if you try and use it!";
static char __pyx_k_166[] = "MuTauTree: Expected branch m_t_SS does not exist! It will crash if you try and use it!";
static char __pyx_k_167[] = "MuTauTree: Expected branch m_t_ToMETDPhi_Ty1 does not exist! It will crash if you try and use it!";
static char __pyx_k_168[] = "MuTauTree: Expected branch m_t_Zcompat does not exist! It will crash if you try and use it!";
static char __pyx_k_169[] = "MuTauTree: Expected branch mu17ele8Group does not exist! It will crash if you try and use it!";
static char __pyx_k_170[] = "MuTauTree: Expected branch mu17ele8Pass does not exist! It will crash if you try and use it!";
static char __pyx_k_171[] = "MuTauTree: Expected branch mu17ele8Prescale does not exist! It will crash if you try and use it!";
static char __pyx_k_172[] = "MuTauTree: Expected branch mu17ele8isoGroup does not exist! It will crash if you try and use it!";
static char __pyx_k_173[] = "MuTauTree: Expected branch mu17ele8isoPass does not exist! It will crash if you try and use it!";
static char __pyx_k_174[] = "MuTauTree: Expected branch mu17ele8isoPrescale does not exist! It will crash if you try and use it!";
static char __pyx_k_175[] = "MuTauTree: Expected branch mu17mu8Group does not exist! It will crash if you try and use it!";
static char __pyx_k_176[] = "MuTauTree: Expected branch mu17mu8Pass does not exist! It will crash if you try and use it!";
static char __pyx_k_177[] = "MuTauTree: Expected branch mu17mu8Prescale does not exist! It will crash if you try and use it!";
static char __pyx_k_178[] = "MuTauTree: Expected branch mu8ele17Group does not exist! It will crash if you try and use it!";
static char __pyx_k_179[] = "MuTauTree: Expected branch mu8ele17Pass does not exist! It will crash if you try and use it!";
static char __pyx_k_180[] = "MuTauTree: Expected branch mu8ele17Prescale does not exist! It will crash if you try and use it!";
static char __pyx_k_181[] = "MuTauTree: Expected branch mu8ele17isoGroup does not exist! It will crash if you try and use it!";
static char __pyx_k_182[] = "MuTauTree: Expected branch mu8ele17isoPass does not exist! It will crash if you try and use it!";
static char __pyx_k_183[] = "MuTauTree: Expected branch mu8ele17isoPrescale does not exist! It will crash if you try and use it!";
static char __pyx_k_184[] = "MuTauTree: Expected branch muGlbIsoVetoPt10 does not exist! It will crash if you try and use it!";
static char __pyx_k_185[] = "MuTauTree: Expected branch muTauGroup does not exist! It will crash if you try and use it!";
static char __pyx_k_186[] = "MuTauTree: Expected branch muTauPass does not exist! It will crash if you try and use it!";
static char __pyx_k_187[] = "MuTauTree: Expected branch muTauPrescale does not exist! It will crash if you try and use it!";
static char __pyx_k_188[] = "MuTauTree: Expected branch muTauTestGroup does not exist! It will crash if you try and use it!";
static char __pyx_k_189[] = "MuTauTree: Expected branch muTauTestPass does not exist! It will crash if you try and use it!";
static char __pyx_k_190[] = "MuTauTree: Expected branch muTauTestPrescale does not exist! It will crash if you try and use it!";
static char __pyx_k_191[] = "MuTauTree: Expected branch muVetoPt15IsoIdVtx does not exist! It will crash if you try and use it!";
static char __pyx_k_192[] = "MuTauTree: Expected branch muVetoPt5 does not exist! It will crash if you try and use it!";
static char __pyx_k_193[] = "MuTauTree: Expected branch muVetoPt5IsoIdVtx does not exist! It will crash if you try and use it!";
static char __pyx_k_194[] = "MuTauTree: Expected branch mva_metEt does not exist! It will crash if you try and use it!";
static char __pyx_k_195[] = "MuTauTree: Expected branch mva_metPhi does not exist! It will crash if you try and use it!";
static char __pyx_k_196[] = "MuTauTree: Expected branch nTruePU does not exist! It will crash if you try and use it!";
static char __pyx_k_197[] = "MuTauTree: Expected branch nvtx does not exist! It will crash if you try and use it!";
static char __pyx_k_198[] = "MuTauTree: Expected branch pfMetEt does not exist! It will crash if you try and use it!";
static char __pyx_k_199[] = "MuTauTree: Expected branch pfMetPhi does not exist! It will crash if you try and use it!";
static char __pyx_k_200[] = "MuTauTree: Expected branch pfMet_jes_Et does not exist! It will crash if you try and use it!";
static char __pyx_k_201[] = "MuTauTree: Expected branch pfMet_jes_Phi does not exist! It will crash if you try and use it!";
static char __pyx_k_202[] = "MuTauTree: Expected branch pfMet_mes_Et does not exist! It will crash if you try and use it!";
static char __pyx_k_203[] = "MuTauTree: Expected branch pfMet_mes_Phi does not exist! It will crash if you try and use it!";
static char __pyx_k_204[] = "MuTauTree: Expected branch pfMet_tes_Et does not exist! It will crash if you try and use it!";
static char __pyx_k_205[] = "MuTauTree: Expected branch pfMet_tes_Phi does not exist! It will crash if you try and use it!";
static char __pyx_k_206[] = "MuTauTree: Expected branch pfMet_ues_Et does not exist! It will crash if you try and use it!";
static char __pyx_k_207[] = "MuTauTree: Expected branch pfMet_ues_Phi does not exist! It will crash if you try and use it!";
static char __pyx_k_208[] = "MuTauTree: Expected branch processID does not exist! It will crash if you try and use it!";
static char __pyx_k_209[] = "MuTauTree: Expected branch pvChi2 does not exist! It will crash if you try and use it!";
static char __pyx_k_210[] = "MuTauTree: Expected branch pvDX does not exist! It will crash if you try and use it!";
static char __pyx_k_211[] = "MuTauTree: Expected branch pvDY does not exist! It will crash if you try and use it!";
static char __pyx_k_212[] = "MuTauTree: Expected branch pvDZ does not exist! It will crash if you try and use it!";
static char __pyx_k_213[] = "MuTauTree: Expected branch pvIsFake does not exist! It will crash if you try and use it!";
static char __pyx_k_214[] = "MuTauTree: Expected branch pvIsValid does not exist! It will crash if you try and use it!";
static char __pyx_k_215[] = "MuTauTree: Expected branch pvNormChi2 does not exist! It will crash if you try and use it!";
static char __pyx_k_216[] = "MuTauTree: Expected branch pvX does not exist! It will crash if you try and use it!";
static char __pyx_k_217[] = "MuTauTree: Expected branch pvY does not exist! It will crash if you try and use it!";
static char __pyx_k_218[] = "MuTauTree: Expected branch pvZ does not exist! It will crash if you try and use it!";
static char __pyx_k_219[] = "MuTauTree: Expected branch pvndof does not exist! It will crash if you try and use it!";
static char __pyx_k_220[] = "MuTauTree: Expected branch recoilDaught does not exist! It will crash if you try and use it!";
static char __pyx_k_221[] = "MuTauTree: Expected branch recoilWithMet does not exist! It will crash if you try and use it!";
static char __pyx_k_222[] = "MuTauTree: Expected branch rho does not exist! It will crash if you try and use it!";
static char __pyx_k_223[] = "MuTauTree: Expected branch run does not exist! It will crash if you try and use it!";
static char __pyx_k_224[] = "MuTauTree: Expected branch singleEGroup does not exist! It will crash if you try and use it!";
static char __pyx_k_225[] = "MuTauTree: Expected branch singleEPFMTGroup does not exist! It will crash if you try and use it!";
static char __pyx_k_226[] = "MuTauTree: Expected branch singleEPFMTPass does not exist! It will crash if you try and use it!";
static char __pyx_k_227[] = "MuTauTree: Expected branch singleEPFMTPrescale does not exist! It will crash if you try and use it!";
static char __pyx_k_228[] = "MuTauTree: Expected branch singleEPass does not exist! It will crash if you try and use it!";
static char __pyx_k_229[] = "MuTauTree: Expected branch singleEPrescale does not exist! It will crash if you try and use it!";
static char __pyx_k_230[] = "MuTauTree: Expected branch singleMuGroup does not exist! It will crash if you try and use it!";
static char __pyx_k_231[] = "MuTauTree: Expected branch singleMuPass does not exist! It will crash if you try and use it!";
static char __pyx_k_232[] = "MuTauTree: Expected branch singleMuPrescale does not exist! It will crash if you try and use it!";
static char __pyx_k_233[] = "MuTauTree: Expected branch singlePhoGroup does not exist! It will crash if you try and use it!";
static char __pyx_k_234[] = "MuTauTree: Expected branch singlePhoPass does not exist! It will crash if you try and use it!";
static char __pyx_k_235[] = "MuTauTree: Expected branch singlePhoPrescale does not exist! It will crash if you try and use it!";
static char __pyx_k_236[] = "MuTauTree: Expected branch tAbsEta does not exist! It will crash if you try and use it!";
static char __pyx_k_237[] = "MuTauTree: Expected branch tAntiElectronLoose does not exist! It will crash if you try and use it!";
static char __pyx_k_238[] = "MuTauTree: Expected branch tAntiElectronMVA does not exist! It will crash if you try and use it!";
static char __pyx_k_239[] = "tAntiElectronMVA2Loose";
static char __pyx_k_240[] = "MuTauTree: Expected branch tAntiElectronMVA2Loose does not exist! It will crash if you try and use it!";
static char __pyx_k_241[] = "tAntiElectronMVA2Medium";
static char __pyx_k_242[] = "MuTauTree: Expected branch tAntiElectronMVA2Medium does not exist! It will crash if you try and use it!";
static char __pyx_k_243[] = "tAntiElectronMVA2Tight";
static char __pyx_k_244[] = "MuTauTree: Expected branch tAntiElectronMVA2Tight does not exist! It will crash if you try and use it!";
static char __pyx_k_245[] = "tAntiElectronMVA2Vloose";
static char __pyx_k_246[] = "MuTauTree: Expected branch tAntiElectronMVA2Vloose does not exist! It will crash if you try and use it!";
static char __pyx_k_247[] = "tAntiElectronMVA3Loose";
static char __pyx_k_248[] = "MuTauTree: Expected branch tAntiElectronMVA3Loose does not exist! It will crash if you try and use it!";
static char __pyx_k_249[] = "tAntiElectronMVA3Medium";
static char __pyx_k_250[] = "MuTauTree: Expected branch tAntiElectronMVA3Medium does not exist! It will crash if you try and use it!";
static char __pyx_k_251[] = "tAntiElectronMVA3Tight";
static char __pyx_k_252[] = "MuTauTree: Expected branch tAntiElectronMVA3Tight does not exist! It will crash if you try and use it!";
static char __pyx_k_253[] = "tAntiElectronMVA3VTight";
static char __pyx_k_254[] = "MuTauTree: Expected branch tAntiElectronMVA3VTight does not exist! It will crash if you try and use it!";
static char __pyx_k_255[] = "MuTauTree: Expected branch tAntiElectronMedium does not exist! It will crash if you try and use it!";
static char __pyx_k_256[] = "MuTauTree: Expected branch tAntiElectronTight does not exist! It will crash if you try and use it!";
static char __pyx_k_257[] = "MuTauTree: Expected branch tAntiMuonLoose does not exist! It will crash if you try and use it!";
static char __pyx_k_258[] = "MuTauTree: Expected branch tAntiMuonLoose2 does not exist! It will crash if you try and use it!";
static char __pyx_k_259[] = "MuTauTree: Expected branch tAntiMuonMedium does not exist! It will crash if you try and use it!";
static char __pyx_k_260[] = "MuTauTree: Expected branch tAntiMuonMedium2 does not exist! It will crash if you try and use it!";
static char __pyx_k_261[] = "MuTauTree: Expected branch tAntiMuonTight does not exist! It will crash if you try and use it!";
static char __pyx_k_262[] = "MuTauTree: Expected branch tAntiMuonTight2 does not exist! It will crash if you try and use it!";
static char __pyx_k_263[] = "MuTauTree: Expected branch tCharge does not exist! It will crash if you try and use it!";
static char __pyx_k_264[] = "tCiCTightElecOverlap";
static char __pyx_k_265[] = "MuTauTree: Expected branch tCiCTightElecOverlap does not exist! It will crash if you try and use it!";
static char __pyx_k_266[] = "MuTauTree: Expected branch tDZ does not exist! It will crash if you try and use it!";
static char __pyx_k_267[] = "MuTauTree: Expected branch tDecayFinding does not exist! It will crash if you try and use it!";
static char __pyx_k_268[] = "MuTauTree: Expected branch tDecayMode does not exist! It will crash if you try and use it!";
static char __pyx_k_269[] = "MuTauTree: Expected branch tElecOverlap does not exist! It will crash if you try and use it!";
static char __pyx_k_270[] = "MuTauTree: Expected branch tEta does not exist! It will crash if you try and use it!";
static char __pyx_k_271[] = "MuTauTree: Expected branch tGenDecayMode does not exist! It will crash if you try and use it!";
static char __pyx_k_272[] = "MuTauTree: Expected branch tIP3DS does not exist! It will crash if you try and use it!";
static char __pyx_k_273[] = "MuTauTree: Expected branch tJetArea does not exist! It will crash if you try and use it!";
static char __pyx_k_274[] = "MuTauTree: Expected branch tJetBtag does not exist! It will crash if you try and use it!";
static char __pyx_k_275[] = "MuTauTree: Expected branch tJetCSVBtag does not exist! It will crash if you try and use it!";
static char __pyx_k_276[] = "MuTauTree: Expected branch tJetEtaEtaMoment does not exist! It will crash if you try and use it!";
static char __pyx_k_277[] = "MuTauTree: Expected branch tJetEtaPhiMoment does not exist! It will crash if you try and use it!";
static char __pyx_k_278[] = "MuTauTree: Expected branch tJetEtaPhiSpread does not exist! It will crash if you try and use it!";
static char __pyx_k_279[] = "MuTauTree: Expected branch tJetPhiPhiMoment does not exist! It will crash if you try and use it!";
static char __pyx_k_280[] = "MuTauTree: Expected branch tJetPt does not exist! It will crash if you try and use it!";
static char __pyx_k_281[] = "MuTauTree: Expected branch tLeadTrackPt does not exist! It will crash if you try and use it!";
static char __pyx_k_282[] = "MuTauTree: Expected branch tLooseIso does not exist! It will crash if you try and use it!";
static char __pyx_k_283[] = "MuTauTree: Expected branch tLooseIso3Hits does not exist! It will crash if you try and use it!";
static char __pyx_k_284[] = "MuTauTree: Expected branch tLooseMVA2Iso does not exist! It will crash if you try and use it!";
static char __pyx_k_285[] = "MuTauTree: Expected branch tLooseMVAIso does not exist! It will crash if you try and use it!";
static char __pyx_k_286[] = "MuTauTree: Expected branch tMass does not exist! It will crash if you try and use it!";
static char __pyx_k_287[] = "MuTauTree: Expected branch tMediumIso does not exist! It will crash if you try and use it!";
static char __pyx_k_288[] = "MuTauTree: Expected branch tMediumIso3Hits does not exist! It will crash if you try and use it!";
static char __pyx_k_289[] = "MuTauTree: Expected branch tMediumMVA2Iso does not exist! It will crash if you try and use it!";
static char __pyx_k_290[] = "MuTauTree: Expected branch tMediumMVAIso does not exist! It will crash if you try and use it!";
static char __pyx_k_291[] = "MuTauTree: Expected branch tMtToMET does not exist! It will crash if you try and use it!";
static char __pyx_k_292[] = "MuTauTree: Expected branch tMtToMVAMET does not exist! It will crash if you try and use it!";
static char __pyx_k_293[] = "MuTauTree: Expected branch tMtToPFMET does not exist! It will crash if you try and use it!";
static char __pyx_k_294[] = "MuTauTree: Expected branch tMtToPfMet_Ty1 does not exist! It will crash if you try and use it!";
static char __pyx_k_295[] = "MuTauTree: Expected branch tMtToPfMet_jes does not exist! It will crash if you try and use it!";
static char __pyx_k_296[] = "MuTauTree: Expected branch tMtToPfMet_mes does not exist! It will crash if you try and use it!";
static char __pyx_k_297[] = "MuTauTree: Expected branch tMtToPfMet_tes does not exist! It will crash if you try and use it!";
static char __pyx_k_298[] = "MuTauTree: Expected branch tMtToPfMet_ues does not exist! It will crash if you try and use it!";
static char __pyx_k_299[] = "MuTauTree: Expected branch tMuOverlap does not exist! It will crash if you try and use it!";
static char __pyx_k_300[] = "MuTauTree: Expected branch tPhi does not exist! It will crash if you try and use it!";
static char __pyx_k_301[] = "MuTauTree: Expected branch tPt does not exist! It will crash if you try and use it!";
static char __pyx_k_302[] = "MuTauTree: Expected branch tTNPId does not exist! It will crash if you try and use it!";
static char __pyx_k_303[] = "MuTauTree: Expected branch tTightIso does not exist! It will crash if you try and use it!";
static char __pyx_k_304[] = "MuTauTree: Expected branch tTightIso3Hits does not exist! It will crash if you try and use it!";
static char __pyx_k_305[] = "MuTauTree: Expected branch tTightMVA2Iso does not exist! It will crash if you try and use it!";
static char __pyx_k_306[] = "MuTauTree: Expected branch tTightMVAIso does not exist! It will crash if you try and use it!";
static char __pyx_k_307[] = "MuTauTree: Expected branch tToMETDPhi does not exist! It will crash if you try and use it!";
static char __pyx_k_308[] = "MuTauTree: Expected branch tVLooseIso does not exist! It will crash if you try and use it!";
static char __pyx_k_309[] = "MuTauTree: Expected branch tVZ does not exist! It will crash if you try and use it!";
static char __pyx_k_310[] = "MuTauTree: Expected branch tauHpsVetoPt20 does not exist! It will crash if you try and use it!";
static char __pyx_k_311[] = "MuTauTree: Expected branch tauVetoPt20 does not exist! It will crash if you try and use it!";
static char __pyx_k_312[] = "tauVetoPt20Loose3HitsVtx";
static char __pyx_k_313[] = "MuTauTree: Expected branch tauVetoPt20Loose3HitsVtx does not exist! It will crash if you try and use it!";
static char __pyx_k_314[] = "tauVetoPt20LooseMVA2Vtx";
static char __pyx_k_315[] = "MuTauTree: Expected branch tauVetoPt20LooseMVA2Vtx does not exist! It will crash if you try and use it!";
static char __pyx_k_316[] = "tauVetoPt20LooseMVAVtx";
static char __pyx_k_317[] = "MuTauTree: Expected branch tauVetoPt20LooseMVAVtx does not exist! It will crash if you try and use it!";
static char __pyx_k_318[] = "tauVetoPt20VLooseHPSVtx";
static char __pyx_k_319[] = "MuTauTree: Expected branch tauVetoPt20VLooseHPSVtx does not exist! It will crash if you try and use it!";
static char __pyx_k_320[] = "MuTauTree: Expected branch type1_pfMetEt does not exist! It will crash if you try and use it!";
static char __pyx_k_321[] = "MuTauTree: Expected branch type1_pfMetPhi does not exist! It will crash if you try and use it!";
static char __pyx_k_322[] = "MuTauTree: Expected branch vbfDeta does not exist! It will crash if you try and use it!";
static char __pyx_k_323[] = "MuTauTree: Expected branch vbfDijetrap does not exist! It will crash if you try and use it!";
static char __pyx_k_324[] = "MuTauTree: Expected branch vbfDphihj does not exist! It will crash if you try and use it!";
static char __pyx_k_325[] = "MuTauTree: Expected branch vbfDphihjnomet does not exist! It will crash if you try and use it!";
static char __pyx_k_326[] = "MuTauTree: Expected branch vbfHrap does not exist! It will crash if you try and use it!";
static char __pyx_k_327[] = "MuTauTree: Expected branch vbfJetVeto20 does not exist! It will crash if you try and use it!";
static char __pyx_k_328[] = "MuTauTree: Expected branch vbfJetVeto30 does not exist! It will crash if you try and use it!";
static char __pyx_k_329[] = "MuTauTree: Expected branch vbfMVA does not exist! It will crash if you try and use it!";
static char __pyx_k_330[] = "MuTauTree: Expected branch vbfMass does not exist! It will crash if you try and use it!";
static char __pyx_k_331[] = "MuTauTree: Expected branch vbfNJets does not exist! It will crash if you try and use it!";
static char __pyx_k_332[] = "MuTauTree: Expected branch vbfVispt does not exist! It will crash if you try and use it!";
static char __pyx_k_333[] = "MuTauTree: Expected branch vbfj1eta does not exist! It will crash if you try and use it!";
static char __pyx_k_334[] = "MuTauTree: Expected branch vbfj2eta does not exist! It will crash if you try and use it!";
static char __pyx_k_335[] = "MuTauTree: Expected branch idx does not exist! It will crash if you try and use it!";
static char __pyx_k_338[] = "/afs/hep.wisc.edu/cms/mcepeda/FSAWBB/src/UWHiggs/testLFVMuTau/MuTauTree.pyx";
static char __pyx_k__LT[] = "LT";
static char __pyx_k__Pt[] = "Pt";
static char __pyx_k__end[] = "end";
static char __pyx_k__evt[] = "evt";
static char __pyx_k__idx[] = "idx";
static char __pyx_k__mD0[] = "mD0";
static char __pyx_k__mDZ[] = "mDZ";
static char __pyx_k__mPt[] = "mPt";
static char __pyx_k__mVZ[] = "mVZ";
static char __pyx_k__pvX[] = "pvX";
static char __pyx_k__pvY[] = "pvY";
static char __pyx_k__pvZ[] = "pvZ";
static char __pyx_k__rho[] = "rho";
static char __pyx_k__run[] = "run";
static char __pyx_k__tDZ[] = "tDZ";
static char __pyx_k__tPt[] = "tPt";
static char __pyx_k__tVZ[] = "tVZ";
static char __pyx_k__Mass[] = "Mass";
static char __pyx_k__ROOT[] = "ROOT";
static char __pyx_k__args[] = "args";
static char __pyx_k__file[] = "file";
static char __pyx_k__line[] = "line";
static char __pyx_k__lumi[] = "lumi";
static char __pyx_k__mEta[] = "mEta";
static char __pyx_k__mPhi[] = "mPhi";
static char __pyx_k__nvtx[] = "nvtx";
static char __pyx_k__pvDX[] = "pvDX";
static char __pyx_k__pvDY[] = "pvDY";
static char __pyx_k__pvDZ[] = "pvDZ";
static char __pyx_k__send[] = "send";
static char __pyx_k__tEta[] = "tEta";
static char __pyx_k__tPhi[] = "tPhi";
static char __pyx_k__warn[] = "warn";
static char __pyx_k__close[] = "close";
static char __pyx_k__mMass[] = "mMass";
static char __pyx_k__mPVDZ[] = "mPVDZ";
static char __pyx_k__mWWID[] = "mWWID";
static char __pyx_k__print[] = "print";
static char __pyx_k__tMass[] = "tMass";
static char __pyx_k__throw[] = "throw";
static char __pyx_k__ttree[] = "ttree";
static char __pyx_k__where[] = "where";
static char __pyx_k__charge[] = "charge";
static char __pyx_k__cyiter[] = "cyiter";
static char __pyx_k__isdata[] = "isdata";
static char __pyx_k__lineno[] = "lineno";
static char __pyx_k__mIP3DS[] = "mIP3DS";
static char __pyx_k__mJetPt[] = "mJetPt";
static char __pyx_k__mPVDXY[] = "mPVDXY";
static char __pyx_k__m_t_DR[] = "m_t_DR";
static char __pyx_k__m_t_Pt[] = "m_t_Pt";
static char __pyx_k__m_t_SS[] = "m_t_SS";
static char __pyx_k__pvChi2[] = "pvChi2";
static char __pyx_k__pvndof[] = "pvndof";
static char __pyx_k__tIP3DS[] = "tIP3DS";
static char __pyx_k__tJetPt[] = "tJetPt";
static char __pyx_k__tTNPId[] = "tTNPId";
static char __pyx_k__vbfMVA[] = "vbfMVA";
static char __pyx_k__Warning[] = "Warning";
static char __pyx_k__isWmunu[] = "isWmunu";
static char __pyx_k__mAbsEta[] = "mAbsEta";
static char __pyx_k__mCharge[] = "mCharge";
static char __pyx_k__mVBTFID[] = "mVBTFID";
static char __pyx_k__message[] = "message";
static char __pyx_k__nTruePU[] = "nTruePU";
static char __pyx_k__pfMetEt[] = "pfMetEt";
static char __pyx_k__tAbsEta[] = "tAbsEta";
static char __pyx_k__tCharge[] = "tCharge";
static char __pyx_k__vbfDeta[] = "vbfDeta";
static char __pyx_k__vbfHrap[] = "vbfHrap";
static char __pyx_k__vbfMass[] = "vbfMass";
static char __pyx_k____main__[] = "__main__";
static char __pyx_k____name__[] = "__name__";
static char __pyx_k____test__[] = "__test__";
static char __pyx_k__bjetVeto[] = "bjetVeto";
static char __pyx_k__category[] = "category";
static char __pyx_k__filename[] = "filename";
static char __pyx_k__isWtaunu[] = "isWtaunu";
static char __pyx_k__mJetArea[] = "mJetArea";
static char __pyx_k__mJetBtag[] = "mJetBtag";
static char __pyx_k__mMtToMET[] = "mMtToMET";
static char __pyx_k__mPixHits[] = "mPixHits";
static char __pyx_k__m_t_DPhi[] = "m_t_DPhi";
static char __pyx_k__m_t_Mass[] = "m_t_Mass";
static char __pyx_k__pfMetPhi[] = "pfMetPhi";
static char __pyx_k__pvIsFake[] = "pvIsFake";
static char __pyx_k__tJetArea[] = "tJetArea";
static char __pyx_k__tJetBtag[] = "tJetBtag";
static char __pyx_k__tMtToMET[] = "tMtToMET";
static char __pyx_k__vbfNJets[] = "vbfNJets";
static char __pyx_k__vbfVispt[] = "vbfVispt";
static char __pyx_k__vbfj1eta[] = "vbfj1eta";
static char __pyx_k__vbfj2eta[] = "vbfj2eta";
static char __pyx_k__warnings[] = "warnings";
static char __pyx_k__AsCObject[] = "AsCObject";
static char __pyx_k__MassError[] = "MassError";
static char __pyx_k__MuTauTree[] = "MuTauTree";
static char __pyx_k__isGtautau[] = "isGtautau";
static char __pyx_k__isZtautau[] = "isZtautau";
static char __pyx_k__isoMuPass[] = "isoMuPass";
static char __pyx_k__jetVeto20[] = "jetVeto20";
static char __pyx_k__jetVeto30[] = "jetVeto30";
static char __pyx_k__jetVeto40[] = "jetVeto40";
static char __pyx_k__mIsGlobal[] = "mIsGlobal";
static char __pyx_k__mMuonHits[] = "mMuonHits";
static char __pyx_k__mPtUncorr[] = "mPtUncorr";
static char __pyx_k__mTypeCode[] = "mTypeCode";
static char __pyx_k__m_t_PZeta[] = "m_t_PZeta";
static char __pyx_k__muTauPass[] = "muTauPass";
static char __pyx_k__muVetoPt5[] = "muVetoPt5";
static char __pyx_k__mva_metEt[] = "mva_metEt";
static char __pyx_k__processID[] = "processID";
static char __pyx_k__pvIsValid[] = "pvIsValid";
static char __pyx_k__tLooseIso[] = "tLooseIso";
static char __pyx_k__tTightIso[] = "tTightIso";
static char __pyx_k__vbfDphihj[] = "vbfDphihj";
static char __pyx_k____import__[] = "__import__";
static char __pyx_k__isoMuGroup[] = "isoMuGroup";
static char __pyx_k__mIDHZG2011[] = "mIDHZG2011";
static char __pyx_k__mIDHZG2012[] = "mIDHZG2012";
static char __pyx_k__mIsTracker[] = "mIsTracker";
static char __pyx_k__mMtToPFMET[] = "mMtToPFMET";
static char __pyx_k__mPFIDTight[] = "mPFIDTight";
static char __pyx_k__mToMETDPhi[] = "mToMETDPhi";
static char __pyx_k__muTauGroup[] = "muTauGroup";
static char __pyx_k__mva_metPhi[] = "mva_metPhi";
static char __pyx_k__pvNormChi2[] = "pvNormChi2";
static char __pyx_k__tDecayMode[] = "tDecayMode";
static char __pyx_k__tMediumIso[] = "tMediumIso";
static char __pyx_k__tMtToPFMET[] = "tMtToPFMET";
static char __pyx_k__tMuOverlap[] = "tMuOverlap";
static char __pyx_k__tToMETDPhi[] = "tToMETDPhi";
static char __pyx_k__tVLooseIso[] = "tVLooseIso";
static char __pyx_k__MassErrord1[] = "MassErrord1";
static char __pyx_k__MassErrord2[] = "MassErrord2";
static char __pyx_k__MassErrord3[] = "MassErrord3";
static char __pyx_k__MassErrord4[] = "MassErrord4";
static char __pyx_k__bjetCSVVeto[] = "bjetCSVVeto";
static char __pyx_k__doubleEPass[] = "doubleEPass";
static char __pyx_k__eVetoMVAIso[] = "eVetoMVAIso";
static char __pyx_k__mGlbTrkHits[] = "mGlbTrkHits";
static char __pyx_k__mJetCSVBtag[] = "mJetCSVBtag";
static char __pyx_k__mMtToMVAMET[] = "mMtToMVAMET";
static char __pyx_k__mRelPFIsoDB[] = "mRelPFIsoDB";
static char __pyx_k__mRhoHZG2011[] = "mRhoHZG2011";
static char __pyx_k__mRhoHZG2012[] = "mRhoHZG2012";
static char __pyx_k__m_t_Zcompat[] = "m_t_Zcompat";
static char __pyx_k__mu17mu8Pass[] = "mu17mu8Pass";
static char __pyx_k__singleEPass[] = "singleEPass";
static char __pyx_k__tJetCSVBtag[] = "tJetCSVBtag";
static char __pyx_k__tMtToMVAMET[] = "tMtToMVAMET";
static char __pyx_k__tauVetoPt20[] = "tauVetoPt20";
static char __pyx_k__vbfDijetrap[] = "vbfDijetrap";
static char __pyx_k__doubleEGroup[] = "doubleEGroup";
static char __pyx_k__doubleMuPass[] = "doubleMuPass";
static char __pyx_k__isoMuTauPass[] = "isoMuTauPass";
static char __pyx_k__mNormTrkChi2[] = "mNormTrkChi2";
static char __pyx_k__mPFPhotonIso[] = "mPFPhotonIso";
static char __pyx_k__m_t_PZetaVis[] = "m_t_PZetaVis";
static char __pyx_k__mu17ele8Pass[] = "mu17ele8Pass";
static char __pyx_k__mu17mu8Group[] = "mu17mu8Group";
static char __pyx_k__mu8ele17Pass[] = "mu8ele17Pass";
static char __pyx_k__pfMet_jes_Et[] = "pfMet_jes_Et";
static char __pyx_k__pfMet_mes_Et[] = "pfMet_mes_Et";
static char __pyx_k__pfMet_tes_Et[] = "pfMet_tes_Et";
static char __pyx_k__pfMet_ues_Et[] = "pfMet_ues_Et";
static char __pyx_k__recoilDaught[] = "recoilDaught";
static char __pyx_k__singleEGroup[] = "singleEGroup";
static char __pyx_k__singleMuPass[] = "singleMuPass";
static char __pyx_k__tElecOverlap[] = "tElecOverlap";
static char __pyx_k__tLeadTrackPt[] = "tLeadTrackPt";
static char __pyx_k__tLooseMVAIso[] = "tLooseMVAIso";
static char __pyx_k__tTightMVAIso[] = "tTightMVAIso";
static char __pyx_k__vbfJetVeto20[] = "vbfJetVeto20";
static char __pyx_k__vbfJetVeto30[] = "vbfJetVeto30";
static char __pyx_k__bjetCSVVeto30[] = "bjetCSVVeto30";
static char __pyx_k__doubleMuGroup[] = "doubleMuGroup";
static char __pyx_k__doublePhoPass[] = "doublePhoPass";
static char __pyx_k__formatwarning[] = "formatwarning";
static char __pyx_k__isoMuPrescale[] = "isoMuPrescale";
static char __pyx_k__isoMuTauGroup[] = "isoMuTauGroup";
static char __pyx_k__mERochCor2012[] = "mERochCor2012";
static char __pyx_k__mPFChargedIso[] = "mPFChargedIso";
static char __pyx_k__mPFNeutralIso[] = "mPFNeutralIso";
static char __pyx_k__mu17ele8Group[] = "mu17ele8Group";
static char __pyx_k__mu8ele17Group[] = "mu8ele17Group";
static char __pyx_k__muTauPrescale[] = "muTauPrescale";
static char __pyx_k__muTauTestPass[] = "muTauTestPass";
static char __pyx_k__pfMet_jes_Phi[] = "pfMet_jes_Phi";
static char __pyx_k__pfMet_mes_Phi[] = "pfMet_mes_Phi";
static char __pyx_k__pfMet_tes_Phi[] = "pfMet_tes_Phi";
static char __pyx_k__pfMet_ues_Phi[] = "pfMet_ues_Phi";
static char __pyx_k__recoilWithMet[] = "recoilWithMet";
static char __pyx_k__singleMuGroup[] = "singleMuGroup";
static char __pyx_k__singlePhoPass[] = "singlePhoPass";
static char __pyx_k__tDecayFinding[] = "tDecayFinding";
static char __pyx_k__tGenDecayMode[] = "tGenDecayMode";
static char __pyx_k__tLooseMVA2Iso[] = "tLooseMVA2Iso";
static char __pyx_k__tMediumMVAIso[] = "tMediumMVAIso";
static char __pyx_k__tTightMVA2Iso[] = "tTightMVA2Iso";
static char __pyx_k__type1_pfMetEt[] = "type1_pfMetEt";
static char __pyx_k____pyx_vtable__[] = "__pyx_vtable__";
static char __pyx_k__doublePhoGroup[] = "doublePhoGroup";
static char __pyx_k__eVetoMVAIsoVtx[] = "eVetoMVAIsoVtx";
static char __pyx_k__mERochCor2011A[] = "mERochCor2011A";
static char __pyx_k__mERochCor2011B[] = "mERochCor2011B";
static char __pyx_k__mMtToPfMet_Ty1[] = "mMtToPfMet_Ty1";
static char __pyx_k__mMtToPfMet_jes[] = "mMtToPfMet_jes";
static char __pyx_k__mMtToPfMet_mes[] = "mMtToPfMet_mes";
static char __pyx_k__mMtToPfMet_tes[] = "mMtToPfMet_tes";
static char __pyx_k__mMtToPfMet_ues[] = "mMtToPfMet_ues";
static char __pyx_k__mPtRochCor2012[] = "mPtRochCor2012";
static char __pyx_k__muTauTestGroup[] = "muTauTestGroup";
static char __pyx_k__singlePhoGroup[] = "singlePhoGroup";
static char __pyx_k__tAntiMuonLoose[] = "tAntiMuonLoose";
static char __pyx_k__tAntiMuonTight[] = "tAntiMuonTight";
static char __pyx_k__tLooseIso3Hits[] = "tLooseIso3Hits";
static char __pyx_k__tMediumMVA2Iso[] = "tMediumMVA2Iso";
static char __pyx_k__tMtToPfMet_Ty1[] = "tMtToPfMet_Ty1";
static char __pyx_k__tMtToPfMet_jes[] = "tMtToPfMet_jes";
static char __pyx_k__tMtToPfMet_mes[] = "tMtToPfMet_mes";
static char __pyx_k__tMtToPfMet_tes[] = "tMtToPfMet_tes";
static char __pyx_k__tMtToPfMet_ues[] = "tMtToPfMet_ues";
static char __pyx_k__tTightIso3Hits[] = "tTightIso3Hits";
static char __pyx_k__tauHpsVetoPt20[] = "tauHpsVetoPt20";
static char __pyx_k__type1_pfMetPhi[] = "type1_pfMetPhi";
static char __pyx_k__vbfDphihjnomet[] = "vbfDphihjnomet";
static char __pyx_k__doubleEPrescale[] = "doubleEPrescale";
static char __pyx_k__doubleMuTrkPass[] = "doubleMuTrkPass";
static char __pyx_k__mComesFromHiggs[] = "mComesFromHiggs";
static char __pyx_k__mEtaRochCor2012[] = "mEtaRochCor2012";
static char __pyx_k__mGenMotherPdgId[] = "mGenMotherPdgId";
static char __pyx_k__mPFPUChargedIso[] = "mPFPUChargedIso";
static char __pyx_k__mPhiRochCor2012[] = "mPhiRochCor2012";
static char __pyx_k__mPtRochCor2011A[] = "mPtRochCor2011A";
static char __pyx_k__mPtRochCor2011B[] = "mPtRochCor2011B";
static char __pyx_k__mu17ele8isoPass[] = "mu17ele8isoPass";
static char __pyx_k__mu17mu8Prescale[] = "mu17mu8Prescale";
static char __pyx_k__mu8ele17isoPass[] = "mu8ele17isoPass";
static char __pyx_k__singleEPFMTPass[] = "singleEPFMTPass";
static char __pyx_k__singleEPrescale[] = "singleEPrescale";
static char __pyx_k__tAntiMuonLoose2[] = "tAntiMuonLoose2";
static char __pyx_k__tAntiMuonMedium[] = "tAntiMuonMedium";
static char __pyx_k__tAntiMuonTight2[] = "tAntiMuonTight2";
static char __pyx_k__tMediumIso3Hits[] = "tMediumIso3Hits";
static char __pyx_k__doubleEExtraPass[] = "doubleEExtraPass";
static char __pyx_k__doubleETightPass[] = "doubleETightPass";
static char __pyx_k__doubleMuPrescale[] = "doubleMuPrescale";
static char __pyx_k__doubleMuTrkGroup[] = "doubleMuTrkGroup";
static char __pyx_k__eVetoCicTightIso[] = "eVetoCicTightIso";
static char __pyx_k__isoMuTauPrescale[] = "isoMuTauPrescale";
static char __pyx_k__mEErrRochCor2012[] = "mEErrRochCor2012";
static char __pyx_k__mEtaRochCor2011A[] = "mEtaRochCor2011A";
static char __pyx_k__mEtaRochCor2011B[] = "mEtaRochCor2011B";
static char __pyx_k__mJetEtaEtaMoment[] = "mJetEtaEtaMoment";
static char __pyx_k__mJetEtaPhiMoment[] = "mJetEtaPhiMoment";
static char __pyx_k__mJetEtaPhiSpread[] = "mJetEtaPhiSpread";
static char __pyx_k__mJetPhiPhiMoment[] = "mJetPhiPhiMoment";
static char __pyx_k__mMatchedStations[] = "mMatchedStations";
static char __pyx_k__mPhiRochCor2011A[] = "mPhiRochCor2011A";
static char __pyx_k__mPhiRochCor2011B[] = "mPhiRochCor2011B";
static char __pyx_k__m_t_CosThetaStar[] = "m_t_CosThetaStar";
static char __pyx_k__mu17ele8Prescale[] = "mu17ele8Prescale";
static char __pyx_k__mu17ele8isoGroup[] = "mu17ele8isoGroup";
static char __pyx_k__mu8ele17Prescale[] = "mu8ele17Prescale";
static char __pyx_k__mu8ele17isoGroup[] = "mu8ele17isoGroup";
static char __pyx_k__muGlbIsoVetoPt10[] = "muGlbIsoVetoPt10";
static char __pyx_k__singleEPFMTGroup[] = "singleEPFMTGroup";
static char __pyx_k__singleMuPrescale[] = "singleMuPrescale";
static char __pyx_k__tAntiElectronMVA[] = "tAntiElectronMVA";
static char __pyx_k__tAntiMuonMedium2[] = "tAntiMuonMedium2";
static char __pyx_k__tJetEtaEtaMoment[] = "tJetEtaEtaMoment";
static char __pyx_k__tJetEtaPhiMoment[] = "tJetEtaPhiMoment";
static char __pyx_k__tJetEtaPhiSpread[] = "tJetEtaPhiSpread";
static char __pyx_k__tJetPhiPhiMoment[] = "tJetPhiPhiMoment";
static char __pyx_k__bjetCSVVetoZHLike[] = "bjetCSVVetoZHLike";
static char __pyx_k__doubleEExtraGroup[] = "doubleEExtraGroup";
static char __pyx_k__doubleETightGroup[] = "doubleETightGroup";
static char __pyx_k__doublePhoPrescale[] = "doublePhoPrescale";
static char __pyx_k__isoMu24eta2p1Pass[] = "isoMu24eta2p1Pass";
static char __pyx_k__mEErrRochCor2011A[] = "mEErrRochCor2011A";
static char __pyx_k__mEErrRochCor2011B[] = "mEErrRochCor2011B";
static char __pyx_k__mMu17Ele8dZFilter[] = "mMu17Ele8dZFilter";
static char __pyx_k__m_t_ToMETDPhi_Ty1[] = "m_t_ToMETDPhi_Ty1";
static char __pyx_k__muTauTestPrescale[] = "muTauTestPrescale";
static char __pyx_k__muVetoPt5IsoIdVtx[] = "muVetoPt5IsoIdVtx";
static char __pyx_k__my_warning_format[] = "my_warning_format";
static char __pyx_k__singlePhoPrescale[] = "singlePhoPrescale";
static char __pyx_k__isoMu24eta2p1Group[] = "isoMu24eta2p1Group";
static char __pyx_k__mEffectiveArea2011[] = "mEffectiveArea2011";
static char __pyx_k__mEffectiveArea2012[] = "mEffectiveArea2012";
static char __pyx_k__mMatchesIsoMuGroup[] = "mMatchesIsoMuGroup";
static char __pyx_k__muVetoPt15IsoIdVtx[] = "muVetoPt15IsoIdVtx";
static char __pyx_k__tAntiElectronLoose[] = "tAntiElectronLoose";
static char __pyx_k__tAntiElectronTight[] = "tAntiElectronTight";
static char __pyx_k__doubleMuTrkPrescale[] = "doubleMuTrkPrescale";
static char __pyx_k__mMatchesMu17Mu8Path[] = "mMatchesMu17Mu8Path";
static char __pyx_k__mu17ele8isoPrescale[] = "mu17ele8isoPrescale";
static char __pyx_k__mu8ele17isoPrescale[] = "mu8ele17isoPrescale";
static char __pyx_k__singleEPFMTPrescale[] = "singleEPFMTPrescale";
static char __pyx_k__tAntiElectronMedium[] = "tAntiElectronMedium";
static PyObject *__pyx_kp_s_1;
static PyObject *__pyx_kp_s_10;
static PyObject *__pyx_kp_s_100;
static PyObject *__pyx_kp_s_102;
static PyObject *__pyx_kp_s_103;
static PyObject *__pyx_kp_s_104;
static PyObject *__pyx_kp_s_106;
static PyObject *__pyx_kp_s_108;
static PyObject *__pyx_kp_s_109;
static PyObject *__pyx_kp_s_11;
static PyObject *__pyx_kp_s_111;
static PyObject *__pyx_kp_s_112;
static PyObject *__pyx_kp_s_114;
static PyObject *__pyx_kp_s_116;
static PyObject *__pyx_kp_s_117;
static PyObject *__pyx_kp_s_118;
static PyObject *__pyx_kp_s_119;
static PyObject *__pyx_kp_s_12;
static PyObject *__pyx_kp_s_120;
static PyObject *__pyx_kp_s_121;
static PyObject *__pyx_kp_s_122;
static PyObject *__pyx_kp_s_123;
static PyObject *__pyx_kp_s_124;
static PyObject *__pyx_kp_s_125;
static PyObject *__pyx_kp_s_126;
static PyObject *__pyx_kp_s_127;
static PyObject *__pyx_kp_s_128;
static PyObject *__pyx_kp_s_129;
static PyObject *__pyx_kp_s_13;
static PyObject *__pyx_kp_s_130;
static PyObject *__pyx_kp_s_131;
static PyObject *__pyx_kp_s_132;
static PyObject *__pyx_kp_s_133;
static PyObject *__pyx_kp_s_134;
static PyObject *__pyx_kp_s_135;
static PyObject *__pyx_kp_s_136;
static PyObject *__pyx_kp_s_137;
static PyObject *__pyx_kp_s_138;
static PyObject *__pyx_kp_s_139;
static PyObject *__pyx_kp_s_140;
static PyObject *__pyx_kp_s_141;
static PyObject *__pyx_kp_s_142;
static PyObject *__pyx_kp_s_143;
static PyObject *__pyx_kp_s_144;
static PyObject *__pyx_kp_s_145;
static PyObject *__pyx_kp_s_146;
static PyObject *__pyx_kp_s_147;
static PyObject *__pyx_kp_s_149;
static PyObject *__pyx_kp_s_15;
static PyObject *__pyx_kp_s_151;
static PyObject *__pyx_kp_s_153;
static PyObject *__pyx_kp_s_154;
static PyObject *__pyx_kp_s_155;
static PyObject *__pyx_kp_s_156;
static PyObject *__pyx_kp_s_157;
static PyObject *__pyx_kp_s_158;
static PyObject *__pyx_kp_s_159;
static PyObject *__pyx_kp_s_16;
static PyObject *__pyx_kp_s_160;
static PyObject *__pyx_kp_s_161;
static PyObject *__pyx_kp_s_162;
static PyObject *__pyx_kp_s_163;
static PyObject *__pyx_kp_s_164;
static PyObject *__pyx_kp_s_165;
static PyObject *__pyx_kp_s_166;
static PyObject *__pyx_kp_s_167;
static PyObject *__pyx_kp_s_168;
static PyObject *__pyx_kp_s_169;
static PyObject *__pyx_kp_s_17;
static PyObject *__pyx_kp_s_170;
static PyObject *__pyx_kp_s_171;
static PyObject *__pyx_kp_s_172;
static PyObject *__pyx_kp_s_173;
static PyObject *__pyx_kp_s_174;
static PyObject *__pyx_kp_s_175;
static PyObject *__pyx_kp_s_176;
static PyObject *__pyx_kp_s_177;
static PyObject *__pyx_kp_s_178;
static PyObject *__pyx_kp_s_179;
static PyObject *__pyx_kp_s_18;
static PyObject *__pyx_kp_s_180;
static PyObject *__pyx_kp_s_181;
static PyObject *__pyx_kp_s_182;
static PyObject *__pyx_kp_s_183;
static PyObject *__pyx_kp_s_184;
static PyObject *__pyx_kp_s_185;
static PyObject *__pyx_kp_s_186;
static PyObject *__pyx_kp_s_187;
static PyObject *__pyx_kp_s_188;
static PyObject *__pyx_kp_s_189;
static PyObject *__pyx_kp_s_19;
static PyObject *__pyx_kp_s_190;
static PyObject *__pyx_kp_s_191;
static PyObject *__pyx_kp_s_192;
static PyObject *__pyx_kp_s_193;
static PyObject *__pyx_kp_s_194;
static PyObject *__pyx_kp_s_195;
static PyObject *__pyx_kp_s_196;
static PyObject *__pyx_kp_s_197;
static PyObject *__pyx_kp_s_198;
static PyObject *__pyx_kp_s_199;
static PyObject *__pyx_kp_s_2;
static PyObject *__pyx_kp_s_200;
static PyObject *__pyx_kp_s_201;
static PyObject *__pyx_kp_s_202;
static PyObject *__pyx_kp_s_203;
static PyObject *__pyx_kp_s_204;
static PyObject *__pyx_kp_s_205;
static PyObject *__pyx_kp_s_206;
static PyObject *__pyx_kp_s_207;
static PyObject *__pyx_kp_s_208;
static PyObject *__pyx_kp_s_209;
static PyObject *__pyx_kp_s_21;
static PyObject *__pyx_kp_s_210;
static PyObject *__pyx_kp_s_211;
static PyObject *__pyx_kp_s_212;
static PyObject *__pyx_kp_s_213;
static PyObject *__pyx_kp_s_214;
static PyObject *__pyx_kp_s_215;
static PyObject *__pyx_kp_s_216;
static PyObject *__pyx_kp_s_217;
static PyObject *__pyx_kp_s_218;
static PyObject *__pyx_kp_s_219;
static PyObject *__pyx_kp_s_22;
static PyObject *__pyx_kp_s_220;
static PyObject *__pyx_kp_s_221;
static PyObject *__pyx_kp_s_222;
static PyObject *__pyx_kp_s_223;
static PyObject *__pyx_kp_s_224;
static PyObject *__pyx_kp_s_225;
static PyObject *__pyx_kp_s_226;
static PyObject *__pyx_kp_s_227;
static PyObject *__pyx_kp_s_228;
static PyObject *__pyx_kp_s_229;
static PyObject *__pyx_kp_s_23;
static PyObject *__pyx_kp_s_230;
static PyObject *__pyx_kp_s_231;
static PyObject *__pyx_kp_s_232;
static PyObject *__pyx_kp_s_233;
static PyObject *__pyx_kp_s_234;
static PyObject *__pyx_kp_s_235;
static PyObject *__pyx_kp_s_236;
static PyObject *__pyx_kp_s_237;
static PyObject *__pyx_kp_s_238;
static PyObject *__pyx_kp_s_24;
static PyObject *__pyx_kp_s_240;
static PyObject *__pyx_kp_s_242;
static PyObject *__pyx_kp_s_244;
static PyObject *__pyx_kp_s_246;
static PyObject *__pyx_kp_s_248;
static PyObject *__pyx_kp_s_25;
static PyObject *__pyx_kp_s_250;
static PyObject *__pyx_kp_s_252;
static PyObject *__pyx_kp_s_254;
static PyObject *__pyx_kp_s_255;
static PyObject *__pyx_kp_s_256;
static PyObject *__pyx_kp_s_257;
static PyObject *__pyx_kp_s_258;
static PyObject *__pyx_kp_s_259;
static PyObject *__pyx_kp_s_26;
static PyObject *__pyx_kp_s_260;
static PyObject *__pyx_kp_s_261;
static PyObject *__pyx_kp_s_262;
static PyObject *__pyx_kp_s_263;
static PyObject *__pyx_kp_s_265;
static PyObject *__pyx_kp_s_266;
static PyObject *__pyx_kp_s_267;
static PyObject *__pyx_kp_s_268;
static PyObject *__pyx_kp_s_269;
static PyObject *__pyx_kp_s_270;
static PyObject *__pyx_kp_s_271;
static PyObject *__pyx_kp_s_272;
static PyObject *__pyx_kp_s_273;
static PyObject *__pyx_kp_s_274;
static PyObject *__pyx_kp_s_275;
static PyObject *__pyx_kp_s_276;
static PyObject *__pyx_kp_s_277;
static PyObject *__pyx_kp_s_278;
static PyObject *__pyx_kp_s_279;
static PyObject *__pyx_kp_s_28;
static PyObject *__pyx_kp_s_280;
static PyObject *__pyx_kp_s_281;
static PyObject *__pyx_kp_s_282;
static PyObject *__pyx_kp_s_283;
static PyObject *__pyx_kp_s_284;
static PyObject *__pyx_kp_s_285;
static PyObject *__pyx_kp_s_286;
static PyObject *__pyx_kp_s_287;
static PyObject *__pyx_kp_s_288;
static PyObject *__pyx_kp_s_289;
static PyObject *__pyx_kp_s_29;
static PyObject *__pyx_kp_s_290;
static PyObject *__pyx_kp_s_291;
static PyObject *__pyx_kp_s_292;
static PyObject *__pyx_kp_s_293;
static PyObject *__pyx_kp_s_294;
static PyObject *__pyx_kp_s_295;
static PyObject *__pyx_kp_s_296;
static PyObject *__pyx_kp_s_297;
static PyObject *__pyx_kp_s_298;
static PyObject *__pyx_kp_s_299;
static PyObject *__pyx_kp_s_3;
static PyObject *__pyx_kp_s_30;
static PyObject *__pyx_kp_s_300;
static PyObject *__pyx_kp_s_301;
static PyObject *__pyx_kp_s_302;
static PyObject *__pyx_kp_s_303;
static PyObject *__pyx_kp_s_304;
static PyObject *__pyx_kp_s_305;
static PyObject *__pyx_kp_s_306;
static PyObject *__pyx_kp_s_307;
static PyObject *__pyx_kp_s_308;
static PyObject *__pyx_kp_s_309;
static PyObject *__pyx_kp_s_31;
static PyObject *__pyx_kp_s_310;
static PyObject *__pyx_kp_s_311;
static PyObject *__pyx_kp_s_313;
static PyObject *__pyx_kp_s_315;
static PyObject *__pyx_kp_s_317;
static PyObject *__pyx_kp_s_319;
static PyObject *__pyx_kp_s_32;
static PyObject *__pyx_kp_s_320;
static PyObject *__pyx_kp_s_321;
static PyObject *__pyx_kp_s_322;
static PyObject *__pyx_kp_s_323;
static PyObject *__pyx_kp_s_324;
static PyObject *__pyx_kp_s_325;
static PyObject *__pyx_kp_s_326;
static PyObject *__pyx_kp_s_327;
static PyObject *__pyx_kp_s_328;
static PyObject *__pyx_kp_s_329;
static PyObject *__pyx_kp_s_33;
static PyObject *__pyx_kp_s_330;
static PyObject *__pyx_kp_s_331;
static PyObject *__pyx_kp_s_332;
static PyObject *__pyx_kp_s_333;
static PyObject *__pyx_kp_s_334;
static PyObject *__pyx_kp_s_335;
static PyObject *__pyx_kp_s_338;
static PyObject *__pyx_kp_s_34;
static PyObject *__pyx_kp_s_35;
static PyObject *__pyx_kp_s_36;
static PyObject *__pyx_kp_s_37;
static PyObject *__pyx_kp_s_38;
static PyObject *__pyx_kp_s_39;
static PyObject *__pyx_kp_s_4;
static PyObject *__pyx_kp_s_40;
static PyObject *__pyx_kp_s_41;
static PyObject *__pyx_kp_s_42;
static PyObject *__pyx_kp_s_43;
static PyObject *__pyx_kp_s_44;
static PyObject *__pyx_kp_s_45;
static PyObject *__pyx_kp_s_46;
static PyObject *__pyx_kp_s_47;
static PyObject *__pyx_kp_s_48;
static PyObject *__pyx_kp_s_5;
static PyObject *__pyx_kp_s_50;
static PyObject *__pyx_kp_s_51;
static PyObject *__pyx_kp_s_52;
static PyObject *__pyx_kp_s_53;
static PyObject *__pyx_kp_s_54;
static PyObject *__pyx_kp_s_55;
static PyObject *__pyx_kp_s_56;
static PyObject *__pyx_kp_s_57;
static PyObject *__pyx_kp_s_58;
static PyObject *__pyx_kp_s_59;
static PyObject *__pyx_kp_s_6;
static PyObject *__pyx_kp_s_60;
static PyObject *__pyx_kp_s_61;
static PyObject *__pyx_kp_s_62;
static PyObject *__pyx_kp_s_63;
static PyObject *__pyx_kp_s_64;
static PyObject *__pyx_kp_s_65;
static PyObject *__pyx_kp_s_67;
static PyObject *__pyx_kp_s_69;
static PyObject *__pyx_kp_s_7;
static PyObject *__pyx_kp_s_71;
static PyObject *__pyx_kp_s_72;
static PyObject *__pyx_kp_s_73;
static PyObject *__pyx_kp_s_74;
static PyObject *__pyx_kp_s_75;
static PyObject *__pyx_kp_s_76;
static PyObject *__pyx_kp_s_77;
static PyObject *__pyx_kp_s_78;
static PyObject *__pyx_kp_s_79;
static PyObject *__pyx_kp_s_8;
static PyObject *__pyx_kp_s_80;
static PyObject *__pyx_kp_s_81;
static PyObject *__pyx_kp_s_82;
static PyObject *__pyx_kp_s_83;
static PyObject *__pyx_kp_s_84;
static PyObject *__pyx_kp_s_85;
static PyObject *__pyx_kp_s_86;
static PyObject *__pyx_kp_s_87;
static PyObject *__pyx_kp_s_88;
static PyObject *__pyx_kp_s_89;
static PyObject *__pyx_kp_s_9;
static PyObject *__pyx_kp_s_90;
static PyObject *__pyx_kp_s_91;
static PyObject *__pyx_kp_s_92;
static PyObject *__pyx_kp_s_93;
static PyObject *__pyx_kp_s_94;
static PyObject *__pyx_kp_s_95;
static PyObject *__pyx_kp_s_96;
static PyObject *__pyx_kp_s_97;
static PyObject *__pyx_kp_s_98;
static PyObject *__pyx_n_s__AsCObject;
static PyObject *__pyx_n_s__MuTauTree;
static PyObject *__pyx_n_s__ROOT;
static PyObject *__pyx_n_s__Warning;
static PyObject *__pyx_n_s____import__;
static PyObject *__pyx_n_s____main__;
static PyObject *__pyx_n_s____name__;
static PyObject *__pyx_n_s____pyx_vtable__;
static PyObject *__pyx_n_s____test__;
static PyObject *__pyx_n_s__args;
static PyObject *__pyx_n_s__category;
static PyObject *__pyx_n_s__close;
static PyObject *__pyx_n_s__end;
static PyObject *__pyx_n_s__file;
static PyObject *__pyx_n_s__filename;
static PyObject *__pyx_n_s__formatwarning;
static PyObject *__pyx_n_s__line;
static PyObject *__pyx_n_s__lineno;
static PyObject *__pyx_n_s__message;
static PyObject *__pyx_n_s__my_warning_format;
static PyObject *__pyx_n_s__print;
static PyObject *__pyx_n_s__send;
static PyObject *__pyx_n_s__throw;
static PyObject *__pyx_n_s__ttree;
static PyObject *__pyx_n_s__warn;
static PyObject *__pyx_n_s__warnings;
static PyObject *__pyx_n_s__where;
static PyObject *__pyx_k_tuple_336;
static PyObject *__pyx_k_codeobj_337;

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_1my_warning_format(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_9MuTauTree_1my_warning_format = {__Pyx_NAMESTR("my_warning_format"), (PyCFunction)__pyx_pw_9MuTauTree_1my_warning_format, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)};
static PyObject *__pyx_pw_9MuTauTree_1my_warning_format(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_message = 0;
  PyObject *__pyx_v_category = 0;
  CYTHON_UNUSED PyObject *__pyx_v_filename = 0;
  CYTHON_UNUSED PyObject *__pyx_v_lineno = 0;
  CYTHON_UNUSED PyObject *__pyx_v_line = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("my_warning_format (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__message,&__pyx_n_s__category,&__pyx_n_s__filename,&__pyx_n_s__lineno,&__pyx_n_s__line,0};
    PyObject* values[5] = {0,0,0,0,0};
    values[4] = ((PyObject *)__pyx_kp_s_1);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__message)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__category)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("my_warning_format", 0, 4, 5, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__filename)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("my_warning_format", 0, 4, 5, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__lineno)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("my_warning_format", 0, 4, 5, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  4:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__line);
          if (value) { values[4] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "my_warning_format") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_message = values[0];
    __pyx_v_category = values[1];
    __pyx_v_filename = values[2];
    __pyx_v_lineno = values[3];
    __pyx_v_line = values[4];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("my_warning_format", 0, 4, 5, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("MuTauTree.my_warning_format", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9MuTauTree_my_warning_format(__pyx_self, __pyx_v_message, __pyx_v_category, __pyx_v_filename, __pyx_v_lineno, __pyx_v_line);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":38
 * from cpython cimport PyCObject_AsVoidPtr
 * import warnings
 * def my_warning_format(message, category, filename, lineno, line=""):             # <<<<<<<<<<<<<<
 *     return "%s:%s\n" % (category.__name__, message)
 * warnings.formatwarning = my_warning_format
 */

static PyObject *__pyx_pf_9MuTauTree_my_warning_format(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_message, PyObject *__pyx_v_category, CYTHON_UNUSED PyObject *__pyx_v_filename, CYTHON_UNUSED PyObject *__pyx_v_lineno, CYTHON_UNUSED PyObject *__pyx_v_line) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("my_warning_format", 0);

  /* "MuTauTree.pyx":39
 * import warnings
 * def my_warning_format(message, category, filename, lineno, line=""):
 *     return "%s:%s\n" % (category.__name__, message)             # <<<<<<<<<<<<<<
 * warnings.formatwarning = my_warning_format
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_category, __pyx_n_s____name__); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 39; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 39; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_message);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_message);
  __Pyx_GIVEREF(__pyx_v_message);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyNumber_Remainder(((PyObject *)__pyx_kp_s_2), ((PyObject *)__pyx_t_2)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 39; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_r = ((PyObject *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("MuTauTree.my_warning_format", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9MuTauTree_9MuTauTree_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_9MuTauTree_9MuTauTree_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_ttree = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__ttree,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__ttree)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 965; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_ttree = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 965; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("MuTauTree.MuTauTree.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree___cinit__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self), __pyx_v_ttree);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":965
 * 
 * 
 *     def __cinit__(self, ttree):             # <<<<<<<<<<<<<<
 *         #print "cinit"
 *         # Constructor from a ROOT.TTree
 */

static int __pyx_pf_9MuTauTree_9MuTauTree___cinit__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self, PyObject *__pyx_v_ttree) {
  PyObject *__pyx_v_AsCObject = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  void *__pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "MuTauTree.pyx":968
 *         #print "cinit"
 *         # Constructor from a ROOT.TTree
 *         from ROOT import AsCObject             # <<<<<<<<<<<<<<
 *         self.tree = <TTree*>PyCObject_AsVoidPtr(AsCObject(ttree))
 *         self.ientry = 0
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 968; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_n_s__AsCObject));
  PyList_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_n_s__AsCObject));
  __Pyx_GIVEREF(((PyObject *)__pyx_n_s__AsCObject));
  __pyx_t_2 = __Pyx_Import(((PyObject *)__pyx_n_s__ROOT), ((PyObject *)__pyx_t_1), -1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 968; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s__AsCObject); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 968; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_t_1);
  __pyx_v_AsCObject = __pyx_t_1;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "MuTauTree.pyx":969
 *         # Constructor from a ROOT.TTree
 *         from ROOT import AsCObject
 *         self.tree = <TTree*>PyCObject_AsVoidPtr(AsCObject(ttree))             # <<<<<<<<<<<<<<
 *         self.ientry = 0
 *         self.currentTreeNumber = -1
 */
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 969; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_v_ttree);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_ttree);
  __Pyx_GIVEREF(__pyx_v_ttree);
  __pyx_t_1 = PyObject_Call(__pyx_v_AsCObject, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 969; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_t_3 = PyCObject_AsVoidPtr(__pyx_t_1); if (unlikely(__pyx_t_3 == NULL && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 969; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_self->tree = ((TTree *)__pyx_t_3);

  /* "MuTauTree.pyx":970
 *         from ROOT import AsCObject
 *         self.tree = <TTree*>PyCObject_AsVoidPtr(AsCObject(ttree))
 *         self.ientry = 0             # <<<<<<<<<<<<<<
 *         self.currentTreeNumber = -1
 *         #print self.tree.GetEntries()
 */
  __pyx_v_self->ientry = 0;

  /* "MuTauTree.pyx":971
 *         self.tree = <TTree*>PyCObject_AsVoidPtr(AsCObject(ttree))
 *         self.ientry = 0
 *         self.currentTreeNumber = -1             # <<<<<<<<<<<<<<
 *         #print self.tree.GetEntries()
 *         #self.load_entry(0)
 */
  __pyx_v_self->currentTreeNumber = -1;

  /* "MuTauTree.pyx":974
 *         #print self.tree.GetEntries()
 *         #self.load_entry(0)
 *         self.complained = set([])             # <<<<<<<<<<<<<<
 * 
 *     cdef load_entry(self, long i):
 */
  __pyx_t_1 = PySet_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 974; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __Pyx_GIVEREF(((PyObject *)__pyx_t_1));
  __Pyx_GOTREF(__pyx_v_self->complained);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->complained));
  __pyx_v_self->complained = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_AsCObject);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":976
 *         self.complained = set([])
 * 
 *     cdef load_entry(self, long i):             # <<<<<<<<<<<<<<
 *         #print "load", i
 *         # Load the correct tree and setup the branches
 */

static PyObject *__pyx_f_9MuTauTree_9MuTauTree_load_entry(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self, long __pyx_v_i) {
  TTree *__pyx_v_new_tree;
  int __pyx_v_treenum;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("load_entry", 0);

  /* "MuTauTree.pyx":979
 *         #print "load", i
 *         # Load the correct tree and setup the branches
 *         self.localentry = self.tree.LoadTree(i)             # <<<<<<<<<<<<<<
 *         #print "local", self.localentry
 *         new_tree = self.tree.GetTree()
 */
  __pyx_v_self->localentry = __pyx_v_self->tree->LoadTree(__pyx_v_i);

  /* "MuTauTree.pyx":981
 *         self.localentry = self.tree.LoadTree(i)
 *         #print "local", self.localentry
 *         new_tree = self.tree.GetTree()             # <<<<<<<<<<<<<<
 *         #print "tree", <long>(new_tree)
 *         treenum = self.tree.GetTreeNumber()
 */
  __pyx_v_new_tree = __pyx_v_self->tree->GetTree();

  /* "MuTauTree.pyx":983
 *         new_tree = self.tree.GetTree()
 *         #print "tree", <long>(new_tree)
 *         treenum = self.tree.GetTreeNumber()             # <<<<<<<<<<<<<<
 *         #print "num", treenum
 *         if treenum != self.currentTreeNumber or new_tree != self.currentTree:
 */
  __pyx_v_treenum = __pyx_v_self->tree->GetTreeNumber();

  /* "MuTauTree.pyx":985
 *         treenum = self.tree.GetTreeNumber()
 *         #print "num", treenum
 *         if treenum != self.currentTreeNumber or new_tree != self.currentTree:             # <<<<<<<<<<<<<<
 *             #print "New tree!"
 *             self.currentTree = new_tree
 */
  __pyx_t_1 = ((__pyx_v_treenum != __pyx_v_self->currentTreeNumber) != 0);
  if (!__pyx_t_1) {
    __pyx_t_2 = ((__pyx_v_new_tree != __pyx_v_self->currentTree) != 0);
    __pyx_t_3 = __pyx_t_2;
  } else {
    __pyx_t_3 = __pyx_t_1;
  }
  if (__pyx_t_3) {

    /* "MuTauTree.pyx":987
 *         if treenum != self.currentTreeNumber or new_tree != self.currentTree:
 *             #print "New tree!"
 *             self.currentTree = new_tree             # <<<<<<<<<<<<<<
 *             self.currentTreeNumber = treenum
 *             self.setup_branches(new_tree)
 */
    __pyx_v_self->currentTree = __pyx_v_new_tree;

    /* "MuTauTree.pyx":988
 *             #print "New tree!"
 *             self.currentTree = new_tree
 *             self.currentTreeNumber = treenum             # <<<<<<<<<<<<<<
 *             self.setup_branches(new_tree)
 * 
 */
    __pyx_v_self->currentTreeNumber = __pyx_v_treenum;

    /* "MuTauTree.pyx":989
 *             self.currentTree = new_tree
 *             self.currentTreeNumber = treenum
 *             self.setup_branches(new_tree)             # <<<<<<<<<<<<<<
 * 
 *     cdef setup_branches(self, TTree* the_tree):
 */
    __pyx_t_4 = ((struct __pyx_vtabstruct_9MuTauTree_MuTauTree *)__pyx_v_self->__pyx_vtab)->setup_branches(__pyx_v_self, __pyx_v_new_tree); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 989; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.load_entry", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":991
 *             self.setup_branches(new_tree)
 * 
 *     cdef setup_branches(self, TTree* the_tree):             # <<<<<<<<<<<<<<
 *         #print "setup"
 * 
 */

static PyObject *__pyx_f_9MuTauTree_9MuTauTree_setup_branches(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self, TTree *__pyx_v_the_tree) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setup_branches", 0);

  /* "MuTauTree.pyx":995
 * 
 *         #print "making LT"
 *         self.LT_branch = the_tree.GetBranch("LT")             # <<<<<<<<<<<<<<
 *         #if not self.LT_branch and "LT" not in self.complained:
 *         if not self.LT_branch and "LT":
 */
  __pyx_v_self->LT_branch = __pyx_v_the_tree->GetBranch(__pyx_k__LT);

  /* "MuTauTree.pyx":997
 *         self.LT_branch = the_tree.GetBranch("LT")
 *         #if not self.LT_branch and "LT" not in self.complained:
 *         if not self.LT_branch and "LT":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch LT does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("LT")
 */
  __pyx_t_1 = (!(__pyx_v_self->LT_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":998
 *         #if not self.LT_branch and "LT" not in self.complained:
 *         if not self.LT_branch and "LT":
 *             warnings.warn( "MuTauTree: Expected branch LT does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("LT")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 998; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 998; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 998; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_3));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_3));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_3));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 998; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1001
 *             #self.complained.add("LT")
 *         else:
 *             self.LT_branch.SetAddress(<void*>&self.LT_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making Mass"
 */
    __pyx_v_self->LT_branch->SetAddress(((void *)(&__pyx_v_self->LT_value)));
  }
  __pyx_L3:;

  /* "MuTauTree.pyx":1004
 * 
 *         #print "making Mass"
 *         self.Mass_branch = the_tree.GetBranch("Mass")             # <<<<<<<<<<<<<<
 *         #if not self.Mass_branch and "Mass" not in self.complained:
 *         if not self.Mass_branch and "Mass":
 */
  __pyx_v_self->Mass_branch = __pyx_v_the_tree->GetBranch(__pyx_k__Mass);

  /* "MuTauTree.pyx":1006
 *         self.Mass_branch = the_tree.GetBranch("Mass")
 *         #if not self.Mass_branch and "Mass" not in self.complained:
 *         if not self.Mass_branch and "Mass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch Mass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Mass")
 */
  __pyx_t_2 = (!(__pyx_v_self->Mass_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1007
 *         #if not self.Mass_branch and "Mass" not in self.complained:
 *         if not self.Mass_branch and "Mass":
 *             warnings.warn( "MuTauTree: Expected branch Mass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("Mass")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1007; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1007; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1007; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_4));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_4));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_4));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1007; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L4;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1010
 *             #self.complained.add("Mass")
 *         else:
 *             self.Mass_branch.SetAddress(<void*>&self.Mass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making MassError"
 */
    __pyx_v_self->Mass_branch->SetAddress(((void *)(&__pyx_v_self->Mass_value)));
  }
  __pyx_L4:;

  /* "MuTauTree.pyx":1013
 * 
 *         #print "making MassError"
 *         self.MassError_branch = the_tree.GetBranch("MassError")             # <<<<<<<<<<<<<<
 *         #if not self.MassError_branch and "MassError" not in self.complained:
 *         if not self.MassError_branch and "MassError":
 */
  __pyx_v_self->MassError_branch = __pyx_v_the_tree->GetBranch(__pyx_k__MassError);

  /* "MuTauTree.pyx":1015
 *         self.MassError_branch = the_tree.GetBranch("MassError")
 *         #if not self.MassError_branch and "MassError" not in self.complained:
 *         if not self.MassError_branch and "MassError":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch MassError does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("MassError")
 */
  __pyx_t_1 = (!(__pyx_v_self->MassError_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1016
 *         #if not self.MassError_branch and "MassError" not in self.complained:
 *         if not self.MassError_branch and "MassError":
 *             warnings.warn( "MuTauTree: Expected branch MassError does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("MassError")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1016; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1016; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1016; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_5));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_5));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_5));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1016; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L5;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1019
 *             #self.complained.add("MassError")
 *         else:
 *             self.MassError_branch.SetAddress(<void*>&self.MassError_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making MassErrord1"
 */
    __pyx_v_self->MassError_branch->SetAddress(((void *)(&__pyx_v_self->MassError_value)));
  }
  __pyx_L5:;

  /* "MuTauTree.pyx":1022
 * 
 *         #print "making MassErrord1"
 *         self.MassErrord1_branch = the_tree.GetBranch("MassErrord1")             # <<<<<<<<<<<<<<
 *         #if not self.MassErrord1_branch and "MassErrord1" not in self.complained:
 *         if not self.MassErrord1_branch and "MassErrord1":
 */
  __pyx_v_self->MassErrord1_branch = __pyx_v_the_tree->GetBranch(__pyx_k__MassErrord1);

  /* "MuTauTree.pyx":1024
 *         self.MassErrord1_branch = the_tree.GetBranch("MassErrord1")
 *         #if not self.MassErrord1_branch and "MassErrord1" not in self.complained:
 *         if not self.MassErrord1_branch and "MassErrord1":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch MassErrord1 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("MassErrord1")
 */
  __pyx_t_2 = (!(__pyx_v_self->MassErrord1_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1025
 *         #if not self.MassErrord1_branch and "MassErrord1" not in self.complained:
 *         if not self.MassErrord1_branch and "MassErrord1":
 *             warnings.warn( "MuTauTree: Expected branch MassErrord1 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("MassErrord1")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1025; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1025; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1025; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_6));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_6));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_6));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1025; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L6;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1028
 *             #self.complained.add("MassErrord1")
 *         else:
 *             self.MassErrord1_branch.SetAddress(<void*>&self.MassErrord1_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making MassErrord2"
 */
    __pyx_v_self->MassErrord1_branch->SetAddress(((void *)(&__pyx_v_self->MassErrord1_value)));
  }
  __pyx_L6:;

  /* "MuTauTree.pyx":1031
 * 
 *         #print "making MassErrord2"
 *         self.MassErrord2_branch = the_tree.GetBranch("MassErrord2")             # <<<<<<<<<<<<<<
 *         #if not self.MassErrord2_branch and "MassErrord2" not in self.complained:
 *         if not self.MassErrord2_branch and "MassErrord2":
 */
  __pyx_v_self->MassErrord2_branch = __pyx_v_the_tree->GetBranch(__pyx_k__MassErrord2);

  /* "MuTauTree.pyx":1033
 *         self.MassErrord2_branch = the_tree.GetBranch("MassErrord2")
 *         #if not self.MassErrord2_branch and "MassErrord2" not in self.complained:
 *         if not self.MassErrord2_branch and "MassErrord2":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch MassErrord2 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("MassErrord2")
 */
  __pyx_t_1 = (!(__pyx_v_self->MassErrord2_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1034
 *         #if not self.MassErrord2_branch and "MassErrord2" not in self.complained:
 *         if not self.MassErrord2_branch and "MassErrord2":
 *             warnings.warn( "MuTauTree: Expected branch MassErrord2 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("MassErrord2")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1034; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1034; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1034; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_7));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_7));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_7));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1034; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L7;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1037
 *             #self.complained.add("MassErrord2")
 *         else:
 *             self.MassErrord2_branch.SetAddress(<void*>&self.MassErrord2_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making MassErrord3"
 */
    __pyx_v_self->MassErrord2_branch->SetAddress(((void *)(&__pyx_v_self->MassErrord2_value)));
  }
  __pyx_L7:;

  /* "MuTauTree.pyx":1040
 * 
 *         #print "making MassErrord3"
 *         self.MassErrord3_branch = the_tree.GetBranch("MassErrord3")             # <<<<<<<<<<<<<<
 *         #if not self.MassErrord3_branch and "MassErrord3" not in self.complained:
 *         if not self.MassErrord3_branch and "MassErrord3":
 */
  __pyx_v_self->MassErrord3_branch = __pyx_v_the_tree->GetBranch(__pyx_k__MassErrord3);

  /* "MuTauTree.pyx":1042
 *         self.MassErrord3_branch = the_tree.GetBranch("MassErrord3")
 *         #if not self.MassErrord3_branch and "MassErrord3" not in self.complained:
 *         if not self.MassErrord3_branch and "MassErrord3":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch MassErrord3 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("MassErrord3")
 */
  __pyx_t_2 = (!(__pyx_v_self->MassErrord3_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1043
 *         #if not self.MassErrord3_branch and "MassErrord3" not in self.complained:
 *         if not self.MassErrord3_branch and "MassErrord3":
 *             warnings.warn( "MuTauTree: Expected branch MassErrord3 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("MassErrord3")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1043; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1043; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1043; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_8));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_8));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_8));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1043; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L8;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1046
 *             #self.complained.add("MassErrord3")
 *         else:
 *             self.MassErrord3_branch.SetAddress(<void*>&self.MassErrord3_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making MassErrord4"
 */
    __pyx_v_self->MassErrord3_branch->SetAddress(((void *)(&__pyx_v_self->MassErrord3_value)));
  }
  __pyx_L8:;

  /* "MuTauTree.pyx":1049
 * 
 *         #print "making MassErrord4"
 *         self.MassErrord4_branch = the_tree.GetBranch("MassErrord4")             # <<<<<<<<<<<<<<
 *         #if not self.MassErrord4_branch and "MassErrord4" not in self.complained:
 *         if not self.MassErrord4_branch and "MassErrord4":
 */
  __pyx_v_self->MassErrord4_branch = __pyx_v_the_tree->GetBranch(__pyx_k__MassErrord4);

  /* "MuTauTree.pyx":1051
 *         self.MassErrord4_branch = the_tree.GetBranch("MassErrord4")
 *         #if not self.MassErrord4_branch and "MassErrord4" not in self.complained:
 *         if not self.MassErrord4_branch and "MassErrord4":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch MassErrord4 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("MassErrord4")
 */
  __pyx_t_1 = (!(__pyx_v_self->MassErrord4_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1052
 *         #if not self.MassErrord4_branch and "MassErrord4" not in self.complained:
 *         if not self.MassErrord4_branch and "MassErrord4":
 *             warnings.warn( "MuTauTree: Expected branch MassErrord4 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("MassErrord4")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1052; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1052; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1052; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_9));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_9));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_9));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1052; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L9;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1055
 *             #self.complained.add("MassErrord4")
 *         else:
 *             self.MassErrord4_branch.SetAddress(<void*>&self.MassErrord4_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making Pt"
 */
    __pyx_v_self->MassErrord4_branch->SetAddress(((void *)(&__pyx_v_self->MassErrord4_value)));
  }
  __pyx_L9:;

  /* "MuTauTree.pyx":1058
 * 
 *         #print "making Pt"
 *         self.Pt_branch = the_tree.GetBranch("Pt")             # <<<<<<<<<<<<<<
 *         #if not self.Pt_branch and "Pt" not in self.complained:
 *         if not self.Pt_branch and "Pt":
 */
  __pyx_v_self->Pt_branch = __pyx_v_the_tree->GetBranch(__pyx_k__Pt);

  /* "MuTauTree.pyx":1060
 *         self.Pt_branch = the_tree.GetBranch("Pt")
 *         #if not self.Pt_branch and "Pt" not in self.complained:
 *         if not self.Pt_branch and "Pt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch Pt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("Pt")
 */
  __pyx_t_2 = (!(__pyx_v_self->Pt_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1061
 *         #if not self.Pt_branch and "Pt" not in self.complained:
 *         if not self.Pt_branch and "Pt":
 *             warnings.warn( "MuTauTree: Expected branch Pt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("Pt")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1061; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1061; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1061; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_10));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_10));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_10));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1061; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L10;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1064
 *             #self.complained.add("Pt")
 *         else:
 *             self.Pt_branch.SetAddress(<void*>&self.Pt_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making bjetCSVVeto"
 */
    __pyx_v_self->Pt_branch->SetAddress(((void *)(&__pyx_v_self->Pt_value)));
  }
  __pyx_L10:;

  /* "MuTauTree.pyx":1067
 * 
 *         #print "making bjetCSVVeto"
 *         self.bjetCSVVeto_branch = the_tree.GetBranch("bjetCSVVeto")             # <<<<<<<<<<<<<<
 *         #if not self.bjetCSVVeto_branch and "bjetCSVVeto" not in self.complained:
 *         if not self.bjetCSVVeto_branch and "bjetCSVVeto":
 */
  __pyx_v_self->bjetCSVVeto_branch = __pyx_v_the_tree->GetBranch(__pyx_k__bjetCSVVeto);

  /* "MuTauTree.pyx":1069
 *         self.bjetCSVVeto_branch = the_tree.GetBranch("bjetCSVVeto")
 *         #if not self.bjetCSVVeto_branch and "bjetCSVVeto" not in self.complained:
 *         if not self.bjetCSVVeto_branch and "bjetCSVVeto":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch bjetCSVVeto does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("bjetCSVVeto")
 */
  __pyx_t_1 = (!(__pyx_v_self->bjetCSVVeto_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1070
 *         #if not self.bjetCSVVeto_branch and "bjetCSVVeto" not in self.complained:
 *         if not self.bjetCSVVeto_branch and "bjetCSVVeto":
 *             warnings.warn( "MuTauTree: Expected branch bjetCSVVeto does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("bjetCSVVeto")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1070; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1070; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1070; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_11));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_11));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_11));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1070; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L11;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1073
 *             #self.complained.add("bjetCSVVeto")
 *         else:
 *             self.bjetCSVVeto_branch.SetAddress(<void*>&self.bjetCSVVeto_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making bjetCSVVeto30"
 */
    __pyx_v_self->bjetCSVVeto_branch->SetAddress(((void *)(&__pyx_v_self->bjetCSVVeto_value)));
  }
  __pyx_L11:;

  /* "MuTauTree.pyx":1076
 * 
 *         #print "making bjetCSVVeto30"
 *         self.bjetCSVVeto30_branch = the_tree.GetBranch("bjetCSVVeto30")             # <<<<<<<<<<<<<<
 *         #if not self.bjetCSVVeto30_branch and "bjetCSVVeto30" not in self.complained:
 *         if not self.bjetCSVVeto30_branch and "bjetCSVVeto30":
 */
  __pyx_v_self->bjetCSVVeto30_branch = __pyx_v_the_tree->GetBranch(__pyx_k__bjetCSVVeto30);

  /* "MuTauTree.pyx":1078
 *         self.bjetCSVVeto30_branch = the_tree.GetBranch("bjetCSVVeto30")
 *         #if not self.bjetCSVVeto30_branch and "bjetCSVVeto30" not in self.complained:
 *         if not self.bjetCSVVeto30_branch and "bjetCSVVeto30":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch bjetCSVVeto30 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("bjetCSVVeto30")
 */
  __pyx_t_2 = (!(__pyx_v_self->bjetCSVVeto30_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1079
 *         #if not self.bjetCSVVeto30_branch and "bjetCSVVeto30" not in self.complained:
 *         if not self.bjetCSVVeto30_branch and "bjetCSVVeto30":
 *             warnings.warn( "MuTauTree: Expected branch bjetCSVVeto30 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("bjetCSVVeto30")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1079; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1079; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1079; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_12));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_12));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_12));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1079; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L12;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1082
 *             #self.complained.add("bjetCSVVeto30")
 *         else:
 *             self.bjetCSVVeto30_branch.SetAddress(<void*>&self.bjetCSVVeto30_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making bjetCSVVetoZHLike"
 */
    __pyx_v_self->bjetCSVVeto30_branch->SetAddress(((void *)(&__pyx_v_self->bjetCSVVeto30_value)));
  }
  __pyx_L12:;

  /* "MuTauTree.pyx":1085
 * 
 *         #print "making bjetCSVVetoZHLike"
 *         self.bjetCSVVetoZHLike_branch = the_tree.GetBranch("bjetCSVVetoZHLike")             # <<<<<<<<<<<<<<
 *         #if not self.bjetCSVVetoZHLike_branch and "bjetCSVVetoZHLike" not in self.complained:
 *         if not self.bjetCSVVetoZHLike_branch and "bjetCSVVetoZHLike":
 */
  __pyx_v_self->bjetCSVVetoZHLike_branch = __pyx_v_the_tree->GetBranch(__pyx_k__bjetCSVVetoZHLike);

  /* "MuTauTree.pyx":1087
 *         self.bjetCSVVetoZHLike_branch = the_tree.GetBranch("bjetCSVVetoZHLike")
 *         #if not self.bjetCSVVetoZHLike_branch and "bjetCSVVetoZHLike" not in self.complained:
 *         if not self.bjetCSVVetoZHLike_branch and "bjetCSVVetoZHLike":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch bjetCSVVetoZHLike does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("bjetCSVVetoZHLike")
 */
  __pyx_t_1 = (!(__pyx_v_self->bjetCSVVetoZHLike_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1088
 *         #if not self.bjetCSVVetoZHLike_branch and "bjetCSVVetoZHLike" not in self.complained:
 *         if not self.bjetCSVVetoZHLike_branch and "bjetCSVVetoZHLike":
 *             warnings.warn( "MuTauTree: Expected branch bjetCSVVetoZHLike does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("bjetCSVVetoZHLike")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1088; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1088; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1088; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_13));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_13));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_13));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1088; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L13;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1091
 *             #self.complained.add("bjetCSVVetoZHLike")
 *         else:
 *             self.bjetCSVVetoZHLike_branch.SetAddress(<void*>&self.bjetCSVVetoZHLike_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making bjetCSVVetoZHLikeNoJetId"
 */
    __pyx_v_self->bjetCSVVetoZHLike_branch->SetAddress(((void *)(&__pyx_v_self->bjetCSVVetoZHLike_value)));
  }
  __pyx_L13:;

  /* "MuTauTree.pyx":1094
 * 
 *         #print "making bjetCSVVetoZHLikeNoJetId"
 *         self.bjetCSVVetoZHLikeNoJetId_branch = the_tree.GetBranch("bjetCSVVetoZHLikeNoJetId")             # <<<<<<<<<<<<<<
 *         #if not self.bjetCSVVetoZHLikeNoJetId_branch and "bjetCSVVetoZHLikeNoJetId" not in self.complained:
 *         if not self.bjetCSVVetoZHLikeNoJetId_branch and "bjetCSVVetoZHLikeNoJetId":
 */
  __pyx_v_self->bjetCSVVetoZHLikeNoJetId_branch = __pyx_v_the_tree->GetBranch(__pyx_k_14);

  /* "MuTauTree.pyx":1096
 *         self.bjetCSVVetoZHLikeNoJetId_branch = the_tree.GetBranch("bjetCSVVetoZHLikeNoJetId")
 *         #if not self.bjetCSVVetoZHLikeNoJetId_branch and "bjetCSVVetoZHLikeNoJetId" not in self.complained:
 *         if not self.bjetCSVVetoZHLikeNoJetId_branch and "bjetCSVVetoZHLikeNoJetId":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch bjetCSVVetoZHLikeNoJetId does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("bjetCSVVetoZHLikeNoJetId")
 */
  __pyx_t_2 = (!(__pyx_v_self->bjetCSVVetoZHLikeNoJetId_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1097
 *         #if not self.bjetCSVVetoZHLikeNoJetId_branch and "bjetCSVVetoZHLikeNoJetId" not in self.complained:
 *         if not self.bjetCSVVetoZHLikeNoJetId_branch and "bjetCSVVetoZHLikeNoJetId":
 *             warnings.warn( "MuTauTree: Expected branch bjetCSVVetoZHLikeNoJetId does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("bjetCSVVetoZHLikeNoJetId")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1097; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1097; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1097; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_15));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_15));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_15));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1097; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L14;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1100
 *             #self.complained.add("bjetCSVVetoZHLikeNoJetId")
 *         else:
 *             self.bjetCSVVetoZHLikeNoJetId_branch.SetAddress(<void*>&self.bjetCSVVetoZHLikeNoJetId_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making bjetVeto"
 */
    __pyx_v_self->bjetCSVVetoZHLikeNoJetId_branch->SetAddress(((void *)(&__pyx_v_self->bjetCSVVetoZHLikeNoJetId_value)));
  }
  __pyx_L14:;

  /* "MuTauTree.pyx":1103
 * 
 *         #print "making bjetVeto"
 *         self.bjetVeto_branch = the_tree.GetBranch("bjetVeto")             # <<<<<<<<<<<<<<
 *         #if not self.bjetVeto_branch and "bjetVeto" not in self.complained:
 *         if not self.bjetVeto_branch and "bjetVeto":
 */
  __pyx_v_self->bjetVeto_branch = __pyx_v_the_tree->GetBranch(__pyx_k__bjetVeto);

  /* "MuTauTree.pyx":1105
 *         self.bjetVeto_branch = the_tree.GetBranch("bjetVeto")
 *         #if not self.bjetVeto_branch and "bjetVeto" not in self.complained:
 *         if not self.bjetVeto_branch and "bjetVeto":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch bjetVeto does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("bjetVeto")
 */
  __pyx_t_1 = (!(__pyx_v_self->bjetVeto_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1106
 *         #if not self.bjetVeto_branch and "bjetVeto" not in self.complained:
 *         if not self.bjetVeto_branch and "bjetVeto":
 *             warnings.warn( "MuTauTree: Expected branch bjetVeto does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("bjetVeto")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1106; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1106; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1106; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_16));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_16));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_16));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1106; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L15;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1109
 *             #self.complained.add("bjetVeto")
 *         else:
 *             self.bjetVeto_branch.SetAddress(<void*>&self.bjetVeto_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making charge"
 */
    __pyx_v_self->bjetVeto_branch->SetAddress(((void *)(&__pyx_v_self->bjetVeto_value)));
  }
  __pyx_L15:;

  /* "MuTauTree.pyx":1112
 * 
 *         #print "making charge"
 *         self.charge_branch = the_tree.GetBranch("charge")             # <<<<<<<<<<<<<<
 *         #if not self.charge_branch and "charge" not in self.complained:
 *         if not self.charge_branch and "charge":
 */
  __pyx_v_self->charge_branch = __pyx_v_the_tree->GetBranch(__pyx_k__charge);

  /* "MuTauTree.pyx":1114
 *         self.charge_branch = the_tree.GetBranch("charge")
 *         #if not self.charge_branch and "charge" not in self.complained:
 *         if not self.charge_branch and "charge":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch charge does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("charge")
 */
  __pyx_t_2 = (!(__pyx_v_self->charge_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1115
 *         #if not self.charge_branch and "charge" not in self.complained:
 *         if not self.charge_branch and "charge":
 *             warnings.warn( "MuTauTree: Expected branch charge does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("charge")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1115; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1115; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1115; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_17));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_17));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_17));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1115; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L16;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1118
 *             #self.complained.add("charge")
 *         else:
 *             self.charge_branch.SetAddress(<void*>&self.charge_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making doubleEExtraGroup"
 */
    __pyx_v_self->charge_branch->SetAddress(((void *)(&__pyx_v_self->charge_value)));
  }
  __pyx_L16:;

  /* "MuTauTree.pyx":1121
 * 
 *         #print "making doubleEExtraGroup"
 *         self.doubleEExtraGroup_branch = the_tree.GetBranch("doubleEExtraGroup")             # <<<<<<<<<<<<<<
 *         #if not self.doubleEExtraGroup_branch and "doubleEExtraGroup" not in self.complained:
 *         if not self.doubleEExtraGroup_branch and "doubleEExtraGroup":
 */
  __pyx_v_self->doubleEExtraGroup_branch = __pyx_v_the_tree->GetBranch(__pyx_k__doubleEExtraGroup);

  /* "MuTauTree.pyx":1123
 *         self.doubleEExtraGroup_branch = the_tree.GetBranch("doubleEExtraGroup")
 *         #if not self.doubleEExtraGroup_branch and "doubleEExtraGroup" not in self.complained:
 *         if not self.doubleEExtraGroup_branch and "doubleEExtraGroup":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch doubleEExtraGroup does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("doubleEExtraGroup")
 */
  __pyx_t_1 = (!(__pyx_v_self->doubleEExtraGroup_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1124
 *         #if not self.doubleEExtraGroup_branch and "doubleEExtraGroup" not in self.complained:
 *         if not self.doubleEExtraGroup_branch and "doubleEExtraGroup":
 *             warnings.warn( "MuTauTree: Expected branch doubleEExtraGroup does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("doubleEExtraGroup")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1124; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1124; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1124; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_18));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_18));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_18));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1124; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L17;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1127
 *             #self.complained.add("doubleEExtraGroup")
 *         else:
 *             self.doubleEExtraGroup_branch.SetAddress(<void*>&self.doubleEExtraGroup_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making doubleEExtraPass"
 */
    __pyx_v_self->doubleEExtraGroup_branch->SetAddress(((void *)(&__pyx_v_self->doubleEExtraGroup_value)));
  }
  __pyx_L17:;

  /* "MuTauTree.pyx":1130
 * 
 *         #print "making doubleEExtraPass"
 *         self.doubleEExtraPass_branch = the_tree.GetBranch("doubleEExtraPass")             # <<<<<<<<<<<<<<
 *         #if not self.doubleEExtraPass_branch and "doubleEExtraPass" not in self.complained:
 *         if not self.doubleEExtraPass_branch and "doubleEExtraPass":
 */
  __pyx_v_self->doubleEExtraPass_branch = __pyx_v_the_tree->GetBranch(__pyx_k__doubleEExtraPass);

  /* "MuTauTree.pyx":1132
 *         self.doubleEExtraPass_branch = the_tree.GetBranch("doubleEExtraPass")
 *         #if not self.doubleEExtraPass_branch and "doubleEExtraPass" not in self.complained:
 *         if not self.doubleEExtraPass_branch and "doubleEExtraPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch doubleEExtraPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("doubleEExtraPass")
 */
  __pyx_t_2 = (!(__pyx_v_self->doubleEExtraPass_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1133
 *         #if not self.doubleEExtraPass_branch and "doubleEExtraPass" not in self.complained:
 *         if not self.doubleEExtraPass_branch and "doubleEExtraPass":
 *             warnings.warn( "MuTauTree: Expected branch doubleEExtraPass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("doubleEExtraPass")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1133; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1133; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1133; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_19));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_19));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_19));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1133; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L18;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1136
 *             #self.complained.add("doubleEExtraPass")
 *         else:
 *             self.doubleEExtraPass_branch.SetAddress(<void*>&self.doubleEExtraPass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making doubleEExtraPrescale"
 */
    __pyx_v_self->doubleEExtraPass_branch->SetAddress(((void *)(&__pyx_v_self->doubleEExtraPass_value)));
  }
  __pyx_L18:;

  /* "MuTauTree.pyx":1139
 * 
 *         #print "making doubleEExtraPrescale"
 *         self.doubleEExtraPrescale_branch = the_tree.GetBranch("doubleEExtraPrescale")             # <<<<<<<<<<<<<<
 *         #if not self.doubleEExtraPrescale_branch and "doubleEExtraPrescale" not in self.complained:
 *         if not self.doubleEExtraPrescale_branch and "doubleEExtraPrescale":
 */
  __pyx_v_self->doubleEExtraPrescale_branch = __pyx_v_the_tree->GetBranch(__pyx_k_20);

  /* "MuTauTree.pyx":1141
 *         self.doubleEExtraPrescale_branch = the_tree.GetBranch("doubleEExtraPrescale")
 *         #if not self.doubleEExtraPrescale_branch and "doubleEExtraPrescale" not in self.complained:
 *         if not self.doubleEExtraPrescale_branch and "doubleEExtraPrescale":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch doubleEExtraPrescale does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("doubleEExtraPrescale")
 */
  __pyx_t_1 = (!(__pyx_v_self->doubleEExtraPrescale_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1142
 *         #if not self.doubleEExtraPrescale_branch and "doubleEExtraPrescale" not in self.complained:
 *         if not self.doubleEExtraPrescale_branch and "doubleEExtraPrescale":
 *             warnings.warn( "MuTauTree: Expected branch doubleEExtraPrescale does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("doubleEExtraPrescale")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1142; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1142; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1142; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_21));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_21));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_21));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1142; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L19;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1145
 *             #self.complained.add("doubleEExtraPrescale")
 *         else:
 *             self.doubleEExtraPrescale_branch.SetAddress(<void*>&self.doubleEExtraPrescale_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making doubleEGroup"
 */
    __pyx_v_self->doubleEExtraPrescale_branch->SetAddress(((void *)(&__pyx_v_self->doubleEExtraPrescale_value)));
  }
  __pyx_L19:;

  /* "MuTauTree.pyx":1148
 * 
 *         #print "making doubleEGroup"
 *         self.doubleEGroup_branch = the_tree.GetBranch("doubleEGroup")             # <<<<<<<<<<<<<<
 *         #if not self.doubleEGroup_branch and "doubleEGroup" not in self.complained:
 *         if not self.doubleEGroup_branch and "doubleEGroup":
 */
  __pyx_v_self->doubleEGroup_branch = __pyx_v_the_tree->GetBranch(__pyx_k__doubleEGroup);

  /* "MuTauTree.pyx":1150
 *         self.doubleEGroup_branch = the_tree.GetBranch("doubleEGroup")
 *         #if not self.doubleEGroup_branch and "doubleEGroup" not in self.complained:
 *         if not self.doubleEGroup_branch and "doubleEGroup":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch doubleEGroup does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("doubleEGroup")
 */
  __pyx_t_2 = (!(__pyx_v_self->doubleEGroup_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1151
 *         #if not self.doubleEGroup_branch and "doubleEGroup" not in self.complained:
 *         if not self.doubleEGroup_branch and "doubleEGroup":
 *             warnings.warn( "MuTauTree: Expected branch doubleEGroup does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("doubleEGroup")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1151; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1151; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1151; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_22));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_22));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_22));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1151; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L20;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1154
 *             #self.complained.add("doubleEGroup")
 *         else:
 *             self.doubleEGroup_branch.SetAddress(<void*>&self.doubleEGroup_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making doubleEPass"
 */
    __pyx_v_self->doubleEGroup_branch->SetAddress(((void *)(&__pyx_v_self->doubleEGroup_value)));
  }
  __pyx_L20:;

  /* "MuTauTree.pyx":1157
 * 
 *         #print "making doubleEPass"
 *         self.doubleEPass_branch = the_tree.GetBranch("doubleEPass")             # <<<<<<<<<<<<<<
 *         #if not self.doubleEPass_branch and "doubleEPass" not in self.complained:
 *         if not self.doubleEPass_branch and "doubleEPass":
 */
  __pyx_v_self->doubleEPass_branch = __pyx_v_the_tree->GetBranch(__pyx_k__doubleEPass);

  /* "MuTauTree.pyx":1159
 *         self.doubleEPass_branch = the_tree.GetBranch("doubleEPass")
 *         #if not self.doubleEPass_branch and "doubleEPass" not in self.complained:
 *         if not self.doubleEPass_branch and "doubleEPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch doubleEPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("doubleEPass")
 */
  __pyx_t_1 = (!(__pyx_v_self->doubleEPass_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1160
 *         #if not self.doubleEPass_branch and "doubleEPass" not in self.complained:
 *         if not self.doubleEPass_branch and "doubleEPass":
 *             warnings.warn( "MuTauTree: Expected branch doubleEPass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("doubleEPass")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1160; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1160; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1160; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_23));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_23));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_23));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1160; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L21;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1163
 *             #self.complained.add("doubleEPass")
 *         else:
 *             self.doubleEPass_branch.SetAddress(<void*>&self.doubleEPass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making doubleEPrescale"
 */
    __pyx_v_self->doubleEPass_branch->SetAddress(((void *)(&__pyx_v_self->doubleEPass_value)));
  }
  __pyx_L21:;

  /* "MuTauTree.pyx":1166
 * 
 *         #print "making doubleEPrescale"
 *         self.doubleEPrescale_branch = the_tree.GetBranch("doubleEPrescale")             # <<<<<<<<<<<<<<
 *         #if not self.doubleEPrescale_branch and "doubleEPrescale" not in self.complained:
 *         if not self.doubleEPrescale_branch and "doubleEPrescale":
 */
  __pyx_v_self->doubleEPrescale_branch = __pyx_v_the_tree->GetBranch(__pyx_k__doubleEPrescale);

  /* "MuTauTree.pyx":1168
 *         self.doubleEPrescale_branch = the_tree.GetBranch("doubleEPrescale")
 *         #if not self.doubleEPrescale_branch and "doubleEPrescale" not in self.complained:
 *         if not self.doubleEPrescale_branch and "doubleEPrescale":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch doubleEPrescale does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("doubleEPrescale")
 */
  __pyx_t_2 = (!(__pyx_v_self->doubleEPrescale_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1169
 *         #if not self.doubleEPrescale_branch and "doubleEPrescale" not in self.complained:
 *         if not self.doubleEPrescale_branch and "doubleEPrescale":
 *             warnings.warn( "MuTauTree: Expected branch doubleEPrescale does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("doubleEPrescale")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1169; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1169; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1169; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_24));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_24));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_24));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1169; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L22;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1172
 *             #self.complained.add("doubleEPrescale")
 *         else:
 *             self.doubleEPrescale_branch.SetAddress(<void*>&self.doubleEPrescale_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making doubleETightGroup"
 */
    __pyx_v_self->doubleEPrescale_branch->SetAddress(((void *)(&__pyx_v_self->doubleEPrescale_value)));
  }
  __pyx_L22:;

  /* "MuTauTree.pyx":1175
 * 
 *         #print "making doubleETightGroup"
 *         self.doubleETightGroup_branch = the_tree.GetBranch("doubleETightGroup")             # <<<<<<<<<<<<<<
 *         #if not self.doubleETightGroup_branch and "doubleETightGroup" not in self.complained:
 *         if not self.doubleETightGroup_branch and "doubleETightGroup":
 */
  __pyx_v_self->doubleETightGroup_branch = __pyx_v_the_tree->GetBranch(__pyx_k__doubleETightGroup);

  /* "MuTauTree.pyx":1177
 *         self.doubleETightGroup_branch = the_tree.GetBranch("doubleETightGroup")
 *         #if not self.doubleETightGroup_branch and "doubleETightGroup" not in self.complained:
 *         if not self.doubleETightGroup_branch and "doubleETightGroup":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch doubleETightGroup does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("doubleETightGroup")
 */
  __pyx_t_1 = (!(__pyx_v_self->doubleETightGroup_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1178
 *         #if not self.doubleETightGroup_branch and "doubleETightGroup" not in self.complained:
 *         if not self.doubleETightGroup_branch and "doubleETightGroup":
 *             warnings.warn( "MuTauTree: Expected branch doubleETightGroup does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("doubleETightGroup")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1178; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1178; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1178; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_25));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_25));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_25));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1178; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L23;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1181
 *             #self.complained.add("doubleETightGroup")
 *         else:
 *             self.doubleETightGroup_branch.SetAddress(<void*>&self.doubleETightGroup_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making doubleETightPass"
 */
    __pyx_v_self->doubleETightGroup_branch->SetAddress(((void *)(&__pyx_v_self->doubleETightGroup_value)));
  }
  __pyx_L23:;

  /* "MuTauTree.pyx":1184
 * 
 *         #print "making doubleETightPass"
 *         self.doubleETightPass_branch = the_tree.GetBranch("doubleETightPass")             # <<<<<<<<<<<<<<
 *         #if not self.doubleETightPass_branch and "doubleETightPass" not in self.complained:
 *         if not self.doubleETightPass_branch and "doubleETightPass":
 */
  __pyx_v_self->doubleETightPass_branch = __pyx_v_the_tree->GetBranch(__pyx_k__doubleETightPass);

  /* "MuTauTree.pyx":1186
 *         self.doubleETightPass_branch = the_tree.GetBranch("doubleETightPass")
 *         #if not self.doubleETightPass_branch and "doubleETightPass" not in self.complained:
 *         if not self.doubleETightPass_branch and "doubleETightPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch doubleETightPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("doubleETightPass")
 */
  __pyx_t_2 = (!(__pyx_v_self->doubleETightPass_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1187
 *         #if not self.doubleETightPass_branch and "doubleETightPass" not in self.complained:
 *         if not self.doubleETightPass_branch and "doubleETightPass":
 *             warnings.warn( "MuTauTree: Expected branch doubleETightPass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("doubleETightPass")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1187; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1187; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1187; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_26));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_26));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_26));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1187; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L24;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1190
 *             #self.complained.add("doubleETightPass")
 *         else:
 *             self.doubleETightPass_branch.SetAddress(<void*>&self.doubleETightPass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making doubleETightPrescale"
 */
    __pyx_v_self->doubleETightPass_branch->SetAddress(((void *)(&__pyx_v_self->doubleETightPass_value)));
  }
  __pyx_L24:;

  /* "MuTauTree.pyx":1193
 * 
 *         #print "making doubleETightPrescale"
 *         self.doubleETightPrescale_branch = the_tree.GetBranch("doubleETightPrescale")             # <<<<<<<<<<<<<<
 *         #if not self.doubleETightPrescale_branch and "doubleETightPrescale" not in self.complained:
 *         if not self.doubleETightPrescale_branch and "doubleETightPrescale":
 */
  __pyx_v_self->doubleETightPrescale_branch = __pyx_v_the_tree->GetBranch(__pyx_k_27);

  /* "MuTauTree.pyx":1195
 *         self.doubleETightPrescale_branch = the_tree.GetBranch("doubleETightPrescale")
 *         #if not self.doubleETightPrescale_branch and "doubleETightPrescale" not in self.complained:
 *         if not self.doubleETightPrescale_branch and "doubleETightPrescale":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch doubleETightPrescale does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("doubleETightPrescale")
 */
  __pyx_t_1 = (!(__pyx_v_self->doubleETightPrescale_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1196
 *         #if not self.doubleETightPrescale_branch and "doubleETightPrescale" not in self.complained:
 *         if not self.doubleETightPrescale_branch and "doubleETightPrescale":
 *             warnings.warn( "MuTauTree: Expected branch doubleETightPrescale does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("doubleETightPrescale")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1196; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1196; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1196; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_28));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_28));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_28));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1196; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L25;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1199
 *             #self.complained.add("doubleETightPrescale")
 *         else:
 *             self.doubleETightPrescale_branch.SetAddress(<void*>&self.doubleETightPrescale_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making doubleMuGroup"
 */
    __pyx_v_self->doubleETightPrescale_branch->SetAddress(((void *)(&__pyx_v_self->doubleETightPrescale_value)));
  }
  __pyx_L25:;

  /* "MuTauTree.pyx":1202
 * 
 *         #print "making doubleMuGroup"
 *         self.doubleMuGroup_branch = the_tree.GetBranch("doubleMuGroup")             # <<<<<<<<<<<<<<
 *         #if not self.doubleMuGroup_branch and "doubleMuGroup" not in self.complained:
 *         if not self.doubleMuGroup_branch and "doubleMuGroup":
 */
  __pyx_v_self->doubleMuGroup_branch = __pyx_v_the_tree->GetBranch(__pyx_k__doubleMuGroup);

  /* "MuTauTree.pyx":1204
 *         self.doubleMuGroup_branch = the_tree.GetBranch("doubleMuGroup")
 *         #if not self.doubleMuGroup_branch and "doubleMuGroup" not in self.complained:
 *         if not self.doubleMuGroup_branch and "doubleMuGroup":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch doubleMuGroup does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("doubleMuGroup")
 */
  __pyx_t_2 = (!(__pyx_v_self->doubleMuGroup_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1205
 *         #if not self.doubleMuGroup_branch and "doubleMuGroup" not in self.complained:
 *         if not self.doubleMuGroup_branch and "doubleMuGroup":
 *             warnings.warn( "MuTauTree: Expected branch doubleMuGroup does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("doubleMuGroup")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1205; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1205; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1205; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_29));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_29));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_29));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1205; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L26;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1208
 *             #self.complained.add("doubleMuGroup")
 *         else:
 *             self.doubleMuGroup_branch.SetAddress(<void*>&self.doubleMuGroup_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making doubleMuPass"
 */
    __pyx_v_self->doubleMuGroup_branch->SetAddress(((void *)(&__pyx_v_self->doubleMuGroup_value)));
  }
  __pyx_L26:;

  /* "MuTauTree.pyx":1211
 * 
 *         #print "making doubleMuPass"
 *         self.doubleMuPass_branch = the_tree.GetBranch("doubleMuPass")             # <<<<<<<<<<<<<<
 *         #if not self.doubleMuPass_branch and "doubleMuPass" not in self.complained:
 *         if not self.doubleMuPass_branch and "doubleMuPass":
 */
  __pyx_v_self->doubleMuPass_branch = __pyx_v_the_tree->GetBranch(__pyx_k__doubleMuPass);

  /* "MuTauTree.pyx":1213
 *         self.doubleMuPass_branch = the_tree.GetBranch("doubleMuPass")
 *         #if not self.doubleMuPass_branch and "doubleMuPass" not in self.complained:
 *         if not self.doubleMuPass_branch and "doubleMuPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch doubleMuPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("doubleMuPass")
 */
  __pyx_t_1 = (!(__pyx_v_self->doubleMuPass_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1214
 *         #if not self.doubleMuPass_branch and "doubleMuPass" not in self.complained:
 *         if not self.doubleMuPass_branch and "doubleMuPass":
 *             warnings.warn( "MuTauTree: Expected branch doubleMuPass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("doubleMuPass")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1214; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1214; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1214; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_30));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_30));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_30));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1214; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L27;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1217
 *             #self.complained.add("doubleMuPass")
 *         else:
 *             self.doubleMuPass_branch.SetAddress(<void*>&self.doubleMuPass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making doubleMuPrescale"
 */
    __pyx_v_self->doubleMuPass_branch->SetAddress(((void *)(&__pyx_v_self->doubleMuPass_value)));
  }
  __pyx_L27:;

  /* "MuTauTree.pyx":1220
 * 
 *         #print "making doubleMuPrescale"
 *         self.doubleMuPrescale_branch = the_tree.GetBranch("doubleMuPrescale")             # <<<<<<<<<<<<<<
 *         #if not self.doubleMuPrescale_branch and "doubleMuPrescale" not in self.complained:
 *         if not self.doubleMuPrescale_branch and "doubleMuPrescale":
 */
  __pyx_v_self->doubleMuPrescale_branch = __pyx_v_the_tree->GetBranch(__pyx_k__doubleMuPrescale);

  /* "MuTauTree.pyx":1222
 *         self.doubleMuPrescale_branch = the_tree.GetBranch("doubleMuPrescale")
 *         #if not self.doubleMuPrescale_branch and "doubleMuPrescale" not in self.complained:
 *         if not self.doubleMuPrescale_branch and "doubleMuPrescale":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch doubleMuPrescale does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("doubleMuPrescale")
 */
  __pyx_t_2 = (!(__pyx_v_self->doubleMuPrescale_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1223
 *         #if not self.doubleMuPrescale_branch and "doubleMuPrescale" not in self.complained:
 *         if not self.doubleMuPrescale_branch and "doubleMuPrescale":
 *             warnings.warn( "MuTauTree: Expected branch doubleMuPrescale does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("doubleMuPrescale")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1223; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1223; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1223; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_31));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_31));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_31));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1223; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L28;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1226
 *             #self.complained.add("doubleMuPrescale")
 *         else:
 *             self.doubleMuPrescale_branch.SetAddress(<void*>&self.doubleMuPrescale_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making doubleMuTrkGroup"
 */
    __pyx_v_self->doubleMuPrescale_branch->SetAddress(((void *)(&__pyx_v_self->doubleMuPrescale_value)));
  }
  __pyx_L28:;

  /* "MuTauTree.pyx":1229
 * 
 *         #print "making doubleMuTrkGroup"
 *         self.doubleMuTrkGroup_branch = the_tree.GetBranch("doubleMuTrkGroup")             # <<<<<<<<<<<<<<
 *         #if not self.doubleMuTrkGroup_branch and "doubleMuTrkGroup" not in self.complained:
 *         if not self.doubleMuTrkGroup_branch and "doubleMuTrkGroup":
 */
  __pyx_v_self->doubleMuTrkGroup_branch = __pyx_v_the_tree->GetBranch(__pyx_k__doubleMuTrkGroup);

  /* "MuTauTree.pyx":1231
 *         self.doubleMuTrkGroup_branch = the_tree.GetBranch("doubleMuTrkGroup")
 *         #if not self.doubleMuTrkGroup_branch and "doubleMuTrkGroup" not in self.complained:
 *         if not self.doubleMuTrkGroup_branch and "doubleMuTrkGroup":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch doubleMuTrkGroup does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("doubleMuTrkGroup")
 */
  __pyx_t_1 = (!(__pyx_v_self->doubleMuTrkGroup_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1232
 *         #if not self.doubleMuTrkGroup_branch and "doubleMuTrkGroup" not in self.complained:
 *         if not self.doubleMuTrkGroup_branch and "doubleMuTrkGroup":
 *             warnings.warn( "MuTauTree: Expected branch doubleMuTrkGroup does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("doubleMuTrkGroup")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1232; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1232; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1232; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_32));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_32));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_32));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1232; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L29;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1235
 *             #self.complained.add("doubleMuTrkGroup")
 *         else:
 *             self.doubleMuTrkGroup_branch.SetAddress(<void*>&self.doubleMuTrkGroup_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making doubleMuTrkPass"
 */
    __pyx_v_self->doubleMuTrkGroup_branch->SetAddress(((void *)(&__pyx_v_self->doubleMuTrkGroup_value)));
  }
  __pyx_L29:;

  /* "MuTauTree.pyx":1238
 * 
 *         #print "making doubleMuTrkPass"
 *         self.doubleMuTrkPass_branch = the_tree.GetBranch("doubleMuTrkPass")             # <<<<<<<<<<<<<<
 *         #if not self.doubleMuTrkPass_branch and "doubleMuTrkPass" not in self.complained:
 *         if not self.doubleMuTrkPass_branch and "doubleMuTrkPass":
 */
  __pyx_v_self->doubleMuTrkPass_branch = __pyx_v_the_tree->GetBranch(__pyx_k__doubleMuTrkPass);

  /* "MuTauTree.pyx":1240
 *         self.doubleMuTrkPass_branch = the_tree.GetBranch("doubleMuTrkPass")
 *         #if not self.doubleMuTrkPass_branch and "doubleMuTrkPass" not in self.complained:
 *         if not self.doubleMuTrkPass_branch and "doubleMuTrkPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch doubleMuTrkPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("doubleMuTrkPass")
 */
  __pyx_t_2 = (!(__pyx_v_self->doubleMuTrkPass_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1241
 *         #if not self.doubleMuTrkPass_branch and "doubleMuTrkPass" not in self.complained:
 *         if not self.doubleMuTrkPass_branch and "doubleMuTrkPass":
 *             warnings.warn( "MuTauTree: Expected branch doubleMuTrkPass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("doubleMuTrkPass")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1241; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1241; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1241; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_33));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_33));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_33));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1241; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L30;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1244
 *             #self.complained.add("doubleMuTrkPass")
 *         else:
 *             self.doubleMuTrkPass_branch.SetAddress(<void*>&self.doubleMuTrkPass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making doubleMuTrkPrescale"
 */
    __pyx_v_self->doubleMuTrkPass_branch->SetAddress(((void *)(&__pyx_v_self->doubleMuTrkPass_value)));
  }
  __pyx_L30:;

  /* "MuTauTree.pyx":1247
 * 
 *         #print "making doubleMuTrkPrescale"
 *         self.doubleMuTrkPrescale_branch = the_tree.GetBranch("doubleMuTrkPrescale")             # <<<<<<<<<<<<<<
 *         #if not self.doubleMuTrkPrescale_branch and "doubleMuTrkPrescale" not in self.complained:
 *         if not self.doubleMuTrkPrescale_branch and "doubleMuTrkPrescale":
 */
  __pyx_v_self->doubleMuTrkPrescale_branch = __pyx_v_the_tree->GetBranch(__pyx_k__doubleMuTrkPrescale);

  /* "MuTauTree.pyx":1249
 *         self.doubleMuTrkPrescale_branch = the_tree.GetBranch("doubleMuTrkPrescale")
 *         #if not self.doubleMuTrkPrescale_branch and "doubleMuTrkPrescale" not in self.complained:
 *         if not self.doubleMuTrkPrescale_branch and "doubleMuTrkPrescale":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch doubleMuTrkPrescale does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("doubleMuTrkPrescale")
 */
  __pyx_t_1 = (!(__pyx_v_self->doubleMuTrkPrescale_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1250
 *         #if not self.doubleMuTrkPrescale_branch and "doubleMuTrkPrescale" not in self.complained:
 *         if not self.doubleMuTrkPrescale_branch and "doubleMuTrkPrescale":
 *             warnings.warn( "MuTauTree: Expected branch doubleMuTrkPrescale does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("doubleMuTrkPrescale")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1250; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1250; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1250; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_34));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_34));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_34));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1250; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L31;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1253
 *             #self.complained.add("doubleMuTrkPrescale")
 *         else:
 *             self.doubleMuTrkPrescale_branch.SetAddress(<void*>&self.doubleMuTrkPrescale_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making doublePhoGroup"
 */
    __pyx_v_self->doubleMuTrkPrescale_branch->SetAddress(((void *)(&__pyx_v_self->doubleMuTrkPrescale_value)));
  }
  __pyx_L31:;

  /* "MuTauTree.pyx":1256
 * 
 *         #print "making doublePhoGroup"
 *         self.doublePhoGroup_branch = the_tree.GetBranch("doublePhoGroup")             # <<<<<<<<<<<<<<
 *         #if not self.doublePhoGroup_branch and "doublePhoGroup" not in self.complained:
 *         if not self.doublePhoGroup_branch and "doublePhoGroup":
 */
  __pyx_v_self->doublePhoGroup_branch = __pyx_v_the_tree->GetBranch(__pyx_k__doublePhoGroup);

  /* "MuTauTree.pyx":1258
 *         self.doublePhoGroup_branch = the_tree.GetBranch("doublePhoGroup")
 *         #if not self.doublePhoGroup_branch and "doublePhoGroup" not in self.complained:
 *         if not self.doublePhoGroup_branch and "doublePhoGroup":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch doublePhoGroup does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("doublePhoGroup")
 */
  __pyx_t_2 = (!(__pyx_v_self->doublePhoGroup_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1259
 *         #if not self.doublePhoGroup_branch and "doublePhoGroup" not in self.complained:
 *         if not self.doublePhoGroup_branch and "doublePhoGroup":
 *             warnings.warn( "MuTauTree: Expected branch doublePhoGroup does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("doublePhoGroup")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1259; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1259; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1259; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_35));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_35));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_35));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1259; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L32;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1262
 *             #self.complained.add("doublePhoGroup")
 *         else:
 *             self.doublePhoGroup_branch.SetAddress(<void*>&self.doublePhoGroup_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making doublePhoPass"
 */
    __pyx_v_self->doublePhoGroup_branch->SetAddress(((void *)(&__pyx_v_self->doublePhoGroup_value)));
  }
  __pyx_L32:;

  /* "MuTauTree.pyx":1265
 * 
 *         #print "making doublePhoPass"
 *         self.doublePhoPass_branch = the_tree.GetBranch("doublePhoPass")             # <<<<<<<<<<<<<<
 *         #if not self.doublePhoPass_branch and "doublePhoPass" not in self.complained:
 *         if not self.doublePhoPass_branch and "doublePhoPass":
 */
  __pyx_v_self->doublePhoPass_branch = __pyx_v_the_tree->GetBranch(__pyx_k__doublePhoPass);

  /* "MuTauTree.pyx":1267
 *         self.doublePhoPass_branch = the_tree.GetBranch("doublePhoPass")
 *         #if not self.doublePhoPass_branch and "doublePhoPass" not in self.complained:
 *         if not self.doublePhoPass_branch and "doublePhoPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch doublePhoPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("doublePhoPass")
 */
  __pyx_t_1 = (!(__pyx_v_self->doublePhoPass_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1268
 *         #if not self.doublePhoPass_branch and "doublePhoPass" not in self.complained:
 *         if not self.doublePhoPass_branch and "doublePhoPass":
 *             warnings.warn( "MuTauTree: Expected branch doublePhoPass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("doublePhoPass")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1268; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1268; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1268; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_36));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_36));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_36));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1268; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L33;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1271
 *             #self.complained.add("doublePhoPass")
 *         else:
 *             self.doublePhoPass_branch.SetAddress(<void*>&self.doublePhoPass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making doublePhoPrescale"
 */
    __pyx_v_self->doublePhoPass_branch->SetAddress(((void *)(&__pyx_v_self->doublePhoPass_value)));
  }
  __pyx_L33:;

  /* "MuTauTree.pyx":1274
 * 
 *         #print "making doublePhoPrescale"
 *         self.doublePhoPrescale_branch = the_tree.GetBranch("doublePhoPrescale")             # <<<<<<<<<<<<<<
 *         #if not self.doublePhoPrescale_branch and "doublePhoPrescale" not in self.complained:
 *         if not self.doublePhoPrescale_branch and "doublePhoPrescale":
 */
  __pyx_v_self->doublePhoPrescale_branch = __pyx_v_the_tree->GetBranch(__pyx_k__doublePhoPrescale);

  /* "MuTauTree.pyx":1276
 *         self.doublePhoPrescale_branch = the_tree.GetBranch("doublePhoPrescale")
 *         #if not self.doublePhoPrescale_branch and "doublePhoPrescale" not in self.complained:
 *         if not self.doublePhoPrescale_branch and "doublePhoPrescale":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch doublePhoPrescale does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("doublePhoPrescale")
 */
  __pyx_t_2 = (!(__pyx_v_self->doublePhoPrescale_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1277
 *         #if not self.doublePhoPrescale_branch and "doublePhoPrescale" not in self.complained:
 *         if not self.doublePhoPrescale_branch and "doublePhoPrescale":
 *             warnings.warn( "MuTauTree: Expected branch doublePhoPrescale does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("doublePhoPrescale")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1277; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1277; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1277; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_37));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_37));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_37));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1277; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L34;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1280
 *             #self.complained.add("doublePhoPrescale")
 *         else:
 *             self.doublePhoPrescale_branch.SetAddress(<void*>&self.doublePhoPrescale_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eVetoCicTightIso"
 */
    __pyx_v_self->doublePhoPrescale_branch->SetAddress(((void *)(&__pyx_v_self->doublePhoPrescale_value)));
  }
  __pyx_L34:;

  /* "MuTauTree.pyx":1283
 * 
 *         #print "making eVetoCicTightIso"
 *         self.eVetoCicTightIso_branch = the_tree.GetBranch("eVetoCicTightIso")             # <<<<<<<<<<<<<<
 *         #if not self.eVetoCicTightIso_branch and "eVetoCicTightIso" not in self.complained:
 *         if not self.eVetoCicTightIso_branch and "eVetoCicTightIso":
 */
  __pyx_v_self->eVetoCicTightIso_branch = __pyx_v_the_tree->GetBranch(__pyx_k__eVetoCicTightIso);

  /* "MuTauTree.pyx":1285
 *         self.eVetoCicTightIso_branch = the_tree.GetBranch("eVetoCicTightIso")
 *         #if not self.eVetoCicTightIso_branch and "eVetoCicTightIso" not in self.complained:
 *         if not self.eVetoCicTightIso_branch and "eVetoCicTightIso":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch eVetoCicTightIso does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eVetoCicTightIso")
 */
  __pyx_t_1 = (!(__pyx_v_self->eVetoCicTightIso_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1286
 *         #if not self.eVetoCicTightIso_branch and "eVetoCicTightIso" not in self.complained:
 *         if not self.eVetoCicTightIso_branch and "eVetoCicTightIso":
 *             warnings.warn( "MuTauTree: Expected branch eVetoCicTightIso does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eVetoCicTightIso")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1286; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1286; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1286; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_38));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_38));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_38));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1286; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L35;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1289
 *             #self.complained.add("eVetoCicTightIso")
 *         else:
 *             self.eVetoCicTightIso_branch.SetAddress(<void*>&self.eVetoCicTightIso_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eVetoMVAIso"
 */
    __pyx_v_self->eVetoCicTightIso_branch->SetAddress(((void *)(&__pyx_v_self->eVetoCicTightIso_value)));
  }
  __pyx_L35:;

  /* "MuTauTree.pyx":1292
 * 
 *         #print "making eVetoMVAIso"
 *         self.eVetoMVAIso_branch = the_tree.GetBranch("eVetoMVAIso")             # <<<<<<<<<<<<<<
 *         #if not self.eVetoMVAIso_branch and "eVetoMVAIso" not in self.complained:
 *         if not self.eVetoMVAIso_branch and "eVetoMVAIso":
 */
  __pyx_v_self->eVetoMVAIso_branch = __pyx_v_the_tree->GetBranch(__pyx_k__eVetoMVAIso);

  /* "MuTauTree.pyx":1294
 *         self.eVetoMVAIso_branch = the_tree.GetBranch("eVetoMVAIso")
 *         #if not self.eVetoMVAIso_branch and "eVetoMVAIso" not in self.complained:
 *         if not self.eVetoMVAIso_branch and "eVetoMVAIso":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch eVetoMVAIso does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eVetoMVAIso")
 */
  __pyx_t_2 = (!(__pyx_v_self->eVetoMVAIso_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1295
 *         #if not self.eVetoMVAIso_branch and "eVetoMVAIso" not in self.complained:
 *         if not self.eVetoMVAIso_branch and "eVetoMVAIso":
 *             warnings.warn( "MuTauTree: Expected branch eVetoMVAIso does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eVetoMVAIso")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1295; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1295; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1295; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_39));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_39));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_39));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1295; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L36;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1298
 *             #self.complained.add("eVetoMVAIso")
 *         else:
 *             self.eVetoMVAIso_branch.SetAddress(<void*>&self.eVetoMVAIso_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making eVetoMVAIsoVtx"
 */
    __pyx_v_self->eVetoMVAIso_branch->SetAddress(((void *)(&__pyx_v_self->eVetoMVAIso_value)));
  }
  __pyx_L36:;

  /* "MuTauTree.pyx":1301
 * 
 *         #print "making eVetoMVAIsoVtx"
 *         self.eVetoMVAIsoVtx_branch = the_tree.GetBranch("eVetoMVAIsoVtx")             # <<<<<<<<<<<<<<
 *         #if not self.eVetoMVAIsoVtx_branch and "eVetoMVAIsoVtx" not in self.complained:
 *         if not self.eVetoMVAIsoVtx_branch and "eVetoMVAIsoVtx":
 */
  __pyx_v_self->eVetoMVAIsoVtx_branch = __pyx_v_the_tree->GetBranch(__pyx_k__eVetoMVAIsoVtx);

  /* "MuTauTree.pyx":1303
 *         self.eVetoMVAIsoVtx_branch = the_tree.GetBranch("eVetoMVAIsoVtx")
 *         #if not self.eVetoMVAIsoVtx_branch and "eVetoMVAIsoVtx" not in self.complained:
 *         if not self.eVetoMVAIsoVtx_branch and "eVetoMVAIsoVtx":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch eVetoMVAIsoVtx does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("eVetoMVAIsoVtx")
 */
  __pyx_t_1 = (!(__pyx_v_self->eVetoMVAIsoVtx_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1304
 *         #if not self.eVetoMVAIsoVtx_branch and "eVetoMVAIsoVtx" not in self.complained:
 *         if not self.eVetoMVAIsoVtx_branch and "eVetoMVAIsoVtx":
 *             warnings.warn( "MuTauTree: Expected branch eVetoMVAIsoVtx does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("eVetoMVAIsoVtx")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1304; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1304; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1304; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_40));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_40));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_40));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1304; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L37;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1307
 *             #self.complained.add("eVetoMVAIsoVtx")
 *         else:
 *             self.eVetoMVAIsoVtx_branch.SetAddress(<void*>&self.eVetoMVAIsoVtx_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making evt"
 */
    __pyx_v_self->eVetoMVAIsoVtx_branch->SetAddress(((void *)(&__pyx_v_self->eVetoMVAIsoVtx_value)));
  }
  __pyx_L37:;

  /* "MuTauTree.pyx":1310
 * 
 *         #print "making evt"
 *         self.evt_branch = the_tree.GetBranch("evt")             # <<<<<<<<<<<<<<
 *         #if not self.evt_branch and "evt" not in self.complained:
 *         if not self.evt_branch and "evt":
 */
  __pyx_v_self->evt_branch = __pyx_v_the_tree->GetBranch(__pyx_k__evt);

  /* "MuTauTree.pyx":1312
 *         self.evt_branch = the_tree.GetBranch("evt")
 *         #if not self.evt_branch and "evt" not in self.complained:
 *         if not self.evt_branch and "evt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch evt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("evt")
 */
  __pyx_t_2 = (!(__pyx_v_self->evt_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1313
 *         #if not self.evt_branch and "evt" not in self.complained:
 *         if not self.evt_branch and "evt":
 *             warnings.warn( "MuTauTree: Expected branch evt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("evt")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1313; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1313; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1313; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_41));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_41));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_41));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1313; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L38;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1316
 *             #self.complained.add("evt")
 *         else:
 *             self.evt_branch.SetAddress(<void*>&self.evt_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making isGtautau"
 */
    __pyx_v_self->evt_branch->SetAddress(((void *)(&__pyx_v_self->evt_value)));
  }
  __pyx_L38:;

  /* "MuTauTree.pyx":1319
 * 
 *         #print "making isGtautau"
 *         self.isGtautau_branch = the_tree.GetBranch("isGtautau")             # <<<<<<<<<<<<<<
 *         #if not self.isGtautau_branch and "isGtautau" not in self.complained:
 *         if not self.isGtautau_branch and "isGtautau":
 */
  __pyx_v_self->isGtautau_branch = __pyx_v_the_tree->GetBranch(__pyx_k__isGtautau);

  /* "MuTauTree.pyx":1321
 *         self.isGtautau_branch = the_tree.GetBranch("isGtautau")
 *         #if not self.isGtautau_branch and "isGtautau" not in self.complained:
 *         if not self.isGtautau_branch and "isGtautau":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch isGtautau does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("isGtautau")
 */
  __pyx_t_1 = (!(__pyx_v_self->isGtautau_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1322
 *         #if not self.isGtautau_branch and "isGtautau" not in self.complained:
 *         if not self.isGtautau_branch and "isGtautau":
 *             warnings.warn( "MuTauTree: Expected branch isGtautau does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("isGtautau")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1322; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1322; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1322; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_42));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_42));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_42));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1322; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L39;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1325
 *             #self.complained.add("isGtautau")
 *         else:
 *             self.isGtautau_branch.SetAddress(<void*>&self.isGtautau_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making isWmunu"
 */
    __pyx_v_self->isGtautau_branch->SetAddress(((void *)(&__pyx_v_self->isGtautau_value)));
  }
  __pyx_L39:;

  /* "MuTauTree.pyx":1328
 * 
 *         #print "making isWmunu"
 *         self.isWmunu_branch = the_tree.GetBranch("isWmunu")             # <<<<<<<<<<<<<<
 *         #if not self.isWmunu_branch and "isWmunu" not in self.complained:
 *         if not self.isWmunu_branch and "isWmunu":
 */
  __pyx_v_self->isWmunu_branch = __pyx_v_the_tree->GetBranch(__pyx_k__isWmunu);

  /* "MuTauTree.pyx":1330
 *         self.isWmunu_branch = the_tree.GetBranch("isWmunu")
 *         #if not self.isWmunu_branch and "isWmunu" not in self.complained:
 *         if not self.isWmunu_branch and "isWmunu":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch isWmunu does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("isWmunu")
 */
  __pyx_t_2 = (!(__pyx_v_self->isWmunu_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1331
 *         #if not self.isWmunu_branch and "isWmunu" not in self.complained:
 *         if not self.isWmunu_branch and "isWmunu":
 *             warnings.warn( "MuTauTree: Expected branch isWmunu does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("isWmunu")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1331; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1331; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1331; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_43));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_43));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_43));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1331; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L40;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1334
 *             #self.complained.add("isWmunu")
 *         else:
 *             self.isWmunu_branch.SetAddress(<void*>&self.isWmunu_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making isWtaunu"
 */
    __pyx_v_self->isWmunu_branch->SetAddress(((void *)(&__pyx_v_self->isWmunu_value)));
  }
  __pyx_L40:;

  /* "MuTauTree.pyx":1337
 * 
 *         #print "making isWtaunu"
 *         self.isWtaunu_branch = the_tree.GetBranch("isWtaunu")             # <<<<<<<<<<<<<<
 *         #if not self.isWtaunu_branch and "isWtaunu" not in self.complained:
 *         if not self.isWtaunu_branch and "isWtaunu":
 */
  __pyx_v_self->isWtaunu_branch = __pyx_v_the_tree->GetBranch(__pyx_k__isWtaunu);

  /* "MuTauTree.pyx":1339
 *         self.isWtaunu_branch = the_tree.GetBranch("isWtaunu")
 *         #if not self.isWtaunu_branch and "isWtaunu" not in self.complained:
 *         if not self.isWtaunu_branch and "isWtaunu":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch isWtaunu does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("isWtaunu")
 */
  __pyx_t_1 = (!(__pyx_v_self->isWtaunu_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1340
 *         #if not self.isWtaunu_branch and "isWtaunu" not in self.complained:
 *         if not self.isWtaunu_branch and "isWtaunu":
 *             warnings.warn( "MuTauTree: Expected branch isWtaunu does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("isWtaunu")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1340; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1340; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1340; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_44));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_44));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_44));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1340; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L41;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1343
 *             #self.complained.add("isWtaunu")
 *         else:
 *             self.isWtaunu_branch.SetAddress(<void*>&self.isWtaunu_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making isZtautau"
 */
    __pyx_v_self->isWtaunu_branch->SetAddress(((void *)(&__pyx_v_self->isWtaunu_value)));
  }
  __pyx_L41:;

  /* "MuTauTree.pyx":1346
 * 
 *         #print "making isZtautau"
 *         self.isZtautau_branch = the_tree.GetBranch("isZtautau")             # <<<<<<<<<<<<<<
 *         #if not self.isZtautau_branch and "isZtautau" not in self.complained:
 *         if not self.isZtautau_branch and "isZtautau":
 */
  __pyx_v_self->isZtautau_branch = __pyx_v_the_tree->GetBranch(__pyx_k__isZtautau);

  /* "MuTauTree.pyx":1348
 *         self.isZtautau_branch = the_tree.GetBranch("isZtautau")
 *         #if not self.isZtautau_branch and "isZtautau" not in self.complained:
 *         if not self.isZtautau_branch and "isZtautau":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch isZtautau does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("isZtautau")
 */
  __pyx_t_2 = (!(__pyx_v_self->isZtautau_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1349
 *         #if not self.isZtautau_branch and "isZtautau" not in self.complained:
 *         if not self.isZtautau_branch and "isZtautau":
 *             warnings.warn( "MuTauTree: Expected branch isZtautau does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("isZtautau")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1349; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1349; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1349; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_45));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_45));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_45));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1349; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L42;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1352
 *             #self.complained.add("isZtautau")
 *         else:
 *             self.isZtautau_branch.SetAddress(<void*>&self.isZtautau_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making isdata"
 */
    __pyx_v_self->isZtautau_branch->SetAddress(((void *)(&__pyx_v_self->isZtautau_value)));
  }
  __pyx_L42:;

  /* "MuTauTree.pyx":1355
 * 
 *         #print "making isdata"
 *         self.isdata_branch = the_tree.GetBranch("isdata")             # <<<<<<<<<<<<<<
 *         #if not self.isdata_branch and "isdata" not in self.complained:
 *         if not self.isdata_branch and "isdata":
 */
  __pyx_v_self->isdata_branch = __pyx_v_the_tree->GetBranch(__pyx_k__isdata);

  /* "MuTauTree.pyx":1357
 *         self.isdata_branch = the_tree.GetBranch("isdata")
 *         #if not self.isdata_branch and "isdata" not in self.complained:
 *         if not self.isdata_branch and "isdata":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch isdata does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("isdata")
 */
  __pyx_t_1 = (!(__pyx_v_self->isdata_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1358
 *         #if not self.isdata_branch and "isdata" not in self.complained:
 *         if not self.isdata_branch and "isdata":
 *             warnings.warn( "MuTauTree: Expected branch isdata does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("isdata")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1358; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1358; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1358; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_46));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_46));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_46));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1358; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L43;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1361
 *             #self.complained.add("isdata")
 *         else:
 *             self.isdata_branch.SetAddress(<void*>&self.isdata_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making isoMu24eta2p1Group"
 */
    __pyx_v_self->isdata_branch->SetAddress(((void *)(&__pyx_v_self->isdata_value)));
  }
  __pyx_L43:;

  /* "MuTauTree.pyx":1364
 * 
 *         #print "making isoMu24eta2p1Group"
 *         self.isoMu24eta2p1Group_branch = the_tree.GetBranch("isoMu24eta2p1Group")             # <<<<<<<<<<<<<<
 *         #if not self.isoMu24eta2p1Group_branch and "isoMu24eta2p1Group" not in self.complained:
 *         if not self.isoMu24eta2p1Group_branch and "isoMu24eta2p1Group":
 */
  __pyx_v_self->isoMu24eta2p1Group_branch = __pyx_v_the_tree->GetBranch(__pyx_k__isoMu24eta2p1Group);

  /* "MuTauTree.pyx":1366
 *         self.isoMu24eta2p1Group_branch = the_tree.GetBranch("isoMu24eta2p1Group")
 *         #if not self.isoMu24eta2p1Group_branch and "isoMu24eta2p1Group" not in self.complained:
 *         if not self.isoMu24eta2p1Group_branch and "isoMu24eta2p1Group":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch isoMu24eta2p1Group does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("isoMu24eta2p1Group")
 */
  __pyx_t_2 = (!(__pyx_v_self->isoMu24eta2p1Group_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1367
 *         #if not self.isoMu24eta2p1Group_branch and "isoMu24eta2p1Group" not in self.complained:
 *         if not self.isoMu24eta2p1Group_branch and "isoMu24eta2p1Group":
 *             warnings.warn( "MuTauTree: Expected branch isoMu24eta2p1Group does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("isoMu24eta2p1Group")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1367; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1367; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1367; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_47));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_47));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_47));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1367; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L44;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1370
 *             #self.complained.add("isoMu24eta2p1Group")
 *         else:
 *             self.isoMu24eta2p1Group_branch.SetAddress(<void*>&self.isoMu24eta2p1Group_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making isoMu24eta2p1Pass"
 */
    __pyx_v_self->isoMu24eta2p1Group_branch->SetAddress(((void *)(&__pyx_v_self->isoMu24eta2p1Group_value)));
  }
  __pyx_L44:;

  /* "MuTauTree.pyx":1373
 * 
 *         #print "making isoMu24eta2p1Pass"
 *         self.isoMu24eta2p1Pass_branch = the_tree.GetBranch("isoMu24eta2p1Pass")             # <<<<<<<<<<<<<<
 *         #if not self.isoMu24eta2p1Pass_branch and "isoMu24eta2p1Pass" not in self.complained:
 *         if not self.isoMu24eta2p1Pass_branch and "isoMu24eta2p1Pass":
 */
  __pyx_v_self->isoMu24eta2p1Pass_branch = __pyx_v_the_tree->GetBranch(__pyx_k__isoMu24eta2p1Pass);

  /* "MuTauTree.pyx":1375
 *         self.isoMu24eta2p1Pass_branch = the_tree.GetBranch("isoMu24eta2p1Pass")
 *         #if not self.isoMu24eta2p1Pass_branch and "isoMu24eta2p1Pass" not in self.complained:
 *         if not self.isoMu24eta2p1Pass_branch and "isoMu24eta2p1Pass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch isoMu24eta2p1Pass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("isoMu24eta2p1Pass")
 */
  __pyx_t_1 = (!(__pyx_v_self->isoMu24eta2p1Pass_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1376
 *         #if not self.isoMu24eta2p1Pass_branch and "isoMu24eta2p1Pass" not in self.complained:
 *         if not self.isoMu24eta2p1Pass_branch and "isoMu24eta2p1Pass":
 *             warnings.warn( "MuTauTree: Expected branch isoMu24eta2p1Pass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("isoMu24eta2p1Pass")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1376; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1376; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1376; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_48));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_48));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_48));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1376; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L45;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1379
 *             #self.complained.add("isoMu24eta2p1Pass")
 *         else:
 *             self.isoMu24eta2p1Pass_branch.SetAddress(<void*>&self.isoMu24eta2p1Pass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making isoMu24eta2p1Prescale"
 */
    __pyx_v_self->isoMu24eta2p1Pass_branch->SetAddress(((void *)(&__pyx_v_self->isoMu24eta2p1Pass_value)));
  }
  __pyx_L45:;

  /* "MuTauTree.pyx":1382
 * 
 *         #print "making isoMu24eta2p1Prescale"
 *         self.isoMu24eta2p1Prescale_branch = the_tree.GetBranch("isoMu24eta2p1Prescale")             # <<<<<<<<<<<<<<
 *         #if not self.isoMu24eta2p1Prescale_branch and "isoMu24eta2p1Prescale" not in self.complained:
 *         if not self.isoMu24eta2p1Prescale_branch and "isoMu24eta2p1Prescale":
 */
  __pyx_v_self->isoMu24eta2p1Prescale_branch = __pyx_v_the_tree->GetBranch(__pyx_k_49);

  /* "MuTauTree.pyx":1384
 *         self.isoMu24eta2p1Prescale_branch = the_tree.GetBranch("isoMu24eta2p1Prescale")
 *         #if not self.isoMu24eta2p1Prescale_branch and "isoMu24eta2p1Prescale" not in self.complained:
 *         if not self.isoMu24eta2p1Prescale_branch and "isoMu24eta2p1Prescale":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch isoMu24eta2p1Prescale does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("isoMu24eta2p1Prescale")
 */
  __pyx_t_2 = (!(__pyx_v_self->isoMu24eta2p1Prescale_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1385
 *         #if not self.isoMu24eta2p1Prescale_branch and "isoMu24eta2p1Prescale" not in self.complained:
 *         if not self.isoMu24eta2p1Prescale_branch and "isoMu24eta2p1Prescale":
 *             warnings.warn( "MuTauTree: Expected branch isoMu24eta2p1Prescale does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("isoMu24eta2p1Prescale")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1385; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1385; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1385; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_50));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_50));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_50));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1385; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L46;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1388
 *             #self.complained.add("isoMu24eta2p1Prescale")
 *         else:
 *             self.isoMu24eta2p1Prescale_branch.SetAddress(<void*>&self.isoMu24eta2p1Prescale_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making isoMuGroup"
 */
    __pyx_v_self->isoMu24eta2p1Prescale_branch->SetAddress(((void *)(&__pyx_v_self->isoMu24eta2p1Prescale_value)));
  }
  __pyx_L46:;

  /* "MuTauTree.pyx":1391
 * 
 *         #print "making isoMuGroup"
 *         self.isoMuGroup_branch = the_tree.GetBranch("isoMuGroup")             # <<<<<<<<<<<<<<
 *         #if not self.isoMuGroup_branch and "isoMuGroup" not in self.complained:
 *         if not self.isoMuGroup_branch and "isoMuGroup":
 */
  __pyx_v_self->isoMuGroup_branch = __pyx_v_the_tree->GetBranch(__pyx_k__isoMuGroup);

  /* "MuTauTree.pyx":1393
 *         self.isoMuGroup_branch = the_tree.GetBranch("isoMuGroup")
 *         #if not self.isoMuGroup_branch and "isoMuGroup" not in self.complained:
 *         if not self.isoMuGroup_branch and "isoMuGroup":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch isoMuGroup does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("isoMuGroup")
 */
  __pyx_t_1 = (!(__pyx_v_self->isoMuGroup_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1394
 *         #if not self.isoMuGroup_branch and "isoMuGroup" not in self.complained:
 *         if not self.isoMuGroup_branch and "isoMuGroup":
 *             warnings.warn( "MuTauTree: Expected branch isoMuGroup does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("isoMuGroup")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1394; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1394; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1394; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_51));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_51));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_51));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1394; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L47;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1397
 *             #self.complained.add("isoMuGroup")
 *         else:
 *             self.isoMuGroup_branch.SetAddress(<void*>&self.isoMuGroup_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making isoMuPass"
 */
    __pyx_v_self->isoMuGroup_branch->SetAddress(((void *)(&__pyx_v_self->isoMuGroup_value)));
  }
  __pyx_L47:;

  /* "MuTauTree.pyx":1400
 * 
 *         #print "making isoMuPass"
 *         self.isoMuPass_branch = the_tree.GetBranch("isoMuPass")             # <<<<<<<<<<<<<<
 *         #if not self.isoMuPass_branch and "isoMuPass" not in self.complained:
 *         if not self.isoMuPass_branch and "isoMuPass":
 */
  __pyx_v_self->isoMuPass_branch = __pyx_v_the_tree->GetBranch(__pyx_k__isoMuPass);

  /* "MuTauTree.pyx":1402
 *         self.isoMuPass_branch = the_tree.GetBranch("isoMuPass")
 *         #if not self.isoMuPass_branch and "isoMuPass" not in self.complained:
 *         if not self.isoMuPass_branch and "isoMuPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch isoMuPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("isoMuPass")
 */
  __pyx_t_2 = (!(__pyx_v_self->isoMuPass_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1403
 *         #if not self.isoMuPass_branch and "isoMuPass" not in self.complained:
 *         if not self.isoMuPass_branch and "isoMuPass":
 *             warnings.warn( "MuTauTree: Expected branch isoMuPass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("isoMuPass")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1403; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1403; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1403; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_52));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_52));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_52));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1403; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L48;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1406
 *             #self.complained.add("isoMuPass")
 *         else:
 *             self.isoMuPass_branch.SetAddress(<void*>&self.isoMuPass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making isoMuPrescale"
 */
    __pyx_v_self->isoMuPass_branch->SetAddress(((void *)(&__pyx_v_self->isoMuPass_value)));
  }
  __pyx_L48:;

  /* "MuTauTree.pyx":1409
 * 
 *         #print "making isoMuPrescale"
 *         self.isoMuPrescale_branch = the_tree.GetBranch("isoMuPrescale")             # <<<<<<<<<<<<<<
 *         #if not self.isoMuPrescale_branch and "isoMuPrescale" not in self.complained:
 *         if not self.isoMuPrescale_branch and "isoMuPrescale":
 */
  __pyx_v_self->isoMuPrescale_branch = __pyx_v_the_tree->GetBranch(__pyx_k__isoMuPrescale);

  /* "MuTauTree.pyx":1411
 *         self.isoMuPrescale_branch = the_tree.GetBranch("isoMuPrescale")
 *         #if not self.isoMuPrescale_branch and "isoMuPrescale" not in self.complained:
 *         if not self.isoMuPrescale_branch and "isoMuPrescale":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch isoMuPrescale does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("isoMuPrescale")
 */
  __pyx_t_1 = (!(__pyx_v_self->isoMuPrescale_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1412
 *         #if not self.isoMuPrescale_branch and "isoMuPrescale" not in self.complained:
 *         if not self.isoMuPrescale_branch and "isoMuPrescale":
 *             warnings.warn( "MuTauTree: Expected branch isoMuPrescale does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("isoMuPrescale")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1412; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1412; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1412; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_53));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_53));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_53));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1412; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L49;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1415
 *             #self.complained.add("isoMuPrescale")
 *         else:
 *             self.isoMuPrescale_branch.SetAddress(<void*>&self.isoMuPrescale_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making isoMuTauGroup"
 */
    __pyx_v_self->isoMuPrescale_branch->SetAddress(((void *)(&__pyx_v_self->isoMuPrescale_value)));
  }
  __pyx_L49:;

  /* "MuTauTree.pyx":1418
 * 
 *         #print "making isoMuTauGroup"
 *         self.isoMuTauGroup_branch = the_tree.GetBranch("isoMuTauGroup")             # <<<<<<<<<<<<<<
 *         #if not self.isoMuTauGroup_branch and "isoMuTauGroup" not in self.complained:
 *         if not self.isoMuTauGroup_branch and "isoMuTauGroup":
 */
  __pyx_v_self->isoMuTauGroup_branch = __pyx_v_the_tree->GetBranch(__pyx_k__isoMuTauGroup);

  /* "MuTauTree.pyx":1420
 *         self.isoMuTauGroup_branch = the_tree.GetBranch("isoMuTauGroup")
 *         #if not self.isoMuTauGroup_branch and "isoMuTauGroup" not in self.complained:
 *         if not self.isoMuTauGroup_branch and "isoMuTauGroup":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch isoMuTauGroup does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("isoMuTauGroup")
 */
  __pyx_t_2 = (!(__pyx_v_self->isoMuTauGroup_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1421
 *         #if not self.isoMuTauGroup_branch and "isoMuTauGroup" not in self.complained:
 *         if not self.isoMuTauGroup_branch and "isoMuTauGroup":
 *             warnings.warn( "MuTauTree: Expected branch isoMuTauGroup does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("isoMuTauGroup")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1421; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1421; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1421; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_54));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_54));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_54));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1421; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L50;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1424
 *             #self.complained.add("isoMuTauGroup")
 *         else:
 *             self.isoMuTauGroup_branch.SetAddress(<void*>&self.isoMuTauGroup_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making isoMuTauPass"
 */
    __pyx_v_self->isoMuTauGroup_branch->SetAddress(((void *)(&__pyx_v_self->isoMuTauGroup_value)));
  }
  __pyx_L50:;

  /* "MuTauTree.pyx":1427
 * 
 *         #print "making isoMuTauPass"
 *         self.isoMuTauPass_branch = the_tree.GetBranch("isoMuTauPass")             # <<<<<<<<<<<<<<
 *         #if not self.isoMuTauPass_branch and "isoMuTauPass" not in self.complained:
 *         if not self.isoMuTauPass_branch and "isoMuTauPass":
 */
  __pyx_v_self->isoMuTauPass_branch = __pyx_v_the_tree->GetBranch(__pyx_k__isoMuTauPass);

  /* "MuTauTree.pyx":1429
 *         self.isoMuTauPass_branch = the_tree.GetBranch("isoMuTauPass")
 *         #if not self.isoMuTauPass_branch and "isoMuTauPass" not in self.complained:
 *         if not self.isoMuTauPass_branch and "isoMuTauPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch isoMuTauPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("isoMuTauPass")
 */
  __pyx_t_1 = (!(__pyx_v_self->isoMuTauPass_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1430
 *         #if not self.isoMuTauPass_branch and "isoMuTauPass" not in self.complained:
 *         if not self.isoMuTauPass_branch and "isoMuTauPass":
 *             warnings.warn( "MuTauTree: Expected branch isoMuTauPass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("isoMuTauPass")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1430; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1430; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1430; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_55));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_55));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_55));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1430; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L51;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1433
 *             #self.complained.add("isoMuTauPass")
 *         else:
 *             self.isoMuTauPass_branch.SetAddress(<void*>&self.isoMuTauPass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making isoMuTauPrescale"
 */
    __pyx_v_self->isoMuTauPass_branch->SetAddress(((void *)(&__pyx_v_self->isoMuTauPass_value)));
  }
  __pyx_L51:;

  /* "MuTauTree.pyx":1436
 * 
 *         #print "making isoMuTauPrescale"
 *         self.isoMuTauPrescale_branch = the_tree.GetBranch("isoMuTauPrescale")             # <<<<<<<<<<<<<<
 *         #if not self.isoMuTauPrescale_branch and "isoMuTauPrescale" not in self.complained:
 *         if not self.isoMuTauPrescale_branch and "isoMuTauPrescale":
 */
  __pyx_v_self->isoMuTauPrescale_branch = __pyx_v_the_tree->GetBranch(__pyx_k__isoMuTauPrescale);

  /* "MuTauTree.pyx":1438
 *         self.isoMuTauPrescale_branch = the_tree.GetBranch("isoMuTauPrescale")
 *         #if not self.isoMuTauPrescale_branch and "isoMuTauPrescale" not in self.complained:
 *         if not self.isoMuTauPrescale_branch and "isoMuTauPrescale":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch isoMuTauPrescale does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("isoMuTauPrescale")
 */
  __pyx_t_2 = (!(__pyx_v_self->isoMuTauPrescale_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1439
 *         #if not self.isoMuTauPrescale_branch and "isoMuTauPrescale" not in self.complained:
 *         if not self.isoMuTauPrescale_branch and "isoMuTauPrescale":
 *             warnings.warn( "MuTauTree: Expected branch isoMuTauPrescale does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("isoMuTauPrescale")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1439; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1439; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1439; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_56));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_56));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_56));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1439; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L52;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1442
 *             #self.complained.add("isoMuTauPrescale")
 *         else:
 *             self.isoMuTauPrescale_branch.SetAddress(<void*>&self.isoMuTauPrescale_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jetVeto20"
 */
    __pyx_v_self->isoMuTauPrescale_branch->SetAddress(((void *)(&__pyx_v_self->isoMuTauPrescale_value)));
  }
  __pyx_L52:;

  /* "MuTauTree.pyx":1445
 * 
 *         #print "making jetVeto20"
 *         self.jetVeto20_branch = the_tree.GetBranch("jetVeto20")             # <<<<<<<<<<<<<<
 *         #if not self.jetVeto20_branch and "jetVeto20" not in self.complained:
 *         if not self.jetVeto20_branch and "jetVeto20":
 */
  __pyx_v_self->jetVeto20_branch = __pyx_v_the_tree->GetBranch(__pyx_k__jetVeto20);

  /* "MuTauTree.pyx":1447
 *         self.jetVeto20_branch = the_tree.GetBranch("jetVeto20")
 *         #if not self.jetVeto20_branch and "jetVeto20" not in self.complained:
 *         if not self.jetVeto20_branch and "jetVeto20":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch jetVeto20 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto20")
 */
  __pyx_t_1 = (!(__pyx_v_self->jetVeto20_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1448
 *         #if not self.jetVeto20_branch and "jetVeto20" not in self.complained:
 *         if not self.jetVeto20_branch and "jetVeto20":
 *             warnings.warn( "MuTauTree: Expected branch jetVeto20 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto20")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1448; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1448; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1448; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_57));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_57));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_57));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1448; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L53;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1451
 *             #self.complained.add("jetVeto20")
 *         else:
 *             self.jetVeto20_branch.SetAddress(<void*>&self.jetVeto20_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jetVeto30"
 */
    __pyx_v_self->jetVeto20_branch->SetAddress(((void *)(&__pyx_v_self->jetVeto20_value)));
  }
  __pyx_L53:;

  /* "MuTauTree.pyx":1454
 * 
 *         #print "making jetVeto30"
 *         self.jetVeto30_branch = the_tree.GetBranch("jetVeto30")             # <<<<<<<<<<<<<<
 *         #if not self.jetVeto30_branch and "jetVeto30" not in self.complained:
 *         if not self.jetVeto30_branch and "jetVeto30":
 */
  __pyx_v_self->jetVeto30_branch = __pyx_v_the_tree->GetBranch(__pyx_k__jetVeto30);

  /* "MuTauTree.pyx":1456
 *         self.jetVeto30_branch = the_tree.GetBranch("jetVeto30")
 *         #if not self.jetVeto30_branch and "jetVeto30" not in self.complained:
 *         if not self.jetVeto30_branch and "jetVeto30":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch jetVeto30 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto30")
 */
  __pyx_t_2 = (!(__pyx_v_self->jetVeto30_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1457
 *         #if not self.jetVeto30_branch and "jetVeto30" not in self.complained:
 *         if not self.jetVeto30_branch and "jetVeto30":
 *             warnings.warn( "MuTauTree: Expected branch jetVeto30 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto30")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1457; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1457; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1457; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_58));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_58));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_58));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1457; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L54;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1460
 *             #self.complained.add("jetVeto30")
 *         else:
 *             self.jetVeto30_branch.SetAddress(<void*>&self.jetVeto30_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making jetVeto40"
 */
    __pyx_v_self->jetVeto30_branch->SetAddress(((void *)(&__pyx_v_self->jetVeto30_value)));
  }
  __pyx_L54:;

  /* "MuTauTree.pyx":1463
 * 
 *         #print "making jetVeto40"
 *         self.jetVeto40_branch = the_tree.GetBranch("jetVeto40")             # <<<<<<<<<<<<<<
 *         #if not self.jetVeto40_branch and "jetVeto40" not in self.complained:
 *         if not self.jetVeto40_branch and "jetVeto40":
 */
  __pyx_v_self->jetVeto40_branch = __pyx_v_the_tree->GetBranch(__pyx_k__jetVeto40);

  /* "MuTauTree.pyx":1465
 *         self.jetVeto40_branch = the_tree.GetBranch("jetVeto40")
 *         #if not self.jetVeto40_branch and "jetVeto40" not in self.complained:
 *         if not self.jetVeto40_branch and "jetVeto40":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch jetVeto40 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("jetVeto40")
 */
  __pyx_t_1 = (!(__pyx_v_self->jetVeto40_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1466
 *         #if not self.jetVeto40_branch and "jetVeto40" not in self.complained:
 *         if not self.jetVeto40_branch and "jetVeto40":
 *             warnings.warn( "MuTauTree: Expected branch jetVeto40 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("jetVeto40")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1466; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1466; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1466; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_59));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_59));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_59));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1466; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L55;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1469
 *             #self.complained.add("jetVeto40")
 *         else:
 *             self.jetVeto40_branch.SetAddress(<void*>&self.jetVeto40_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making lumi"
 */
    __pyx_v_self->jetVeto40_branch->SetAddress(((void *)(&__pyx_v_self->jetVeto40_value)));
  }
  __pyx_L55:;

  /* "MuTauTree.pyx":1472
 * 
 *         #print "making lumi"
 *         self.lumi_branch = the_tree.GetBranch("lumi")             # <<<<<<<<<<<<<<
 *         #if not self.lumi_branch and "lumi" not in self.complained:
 *         if not self.lumi_branch and "lumi":
 */
  __pyx_v_self->lumi_branch = __pyx_v_the_tree->GetBranch(__pyx_k__lumi);

  /* "MuTauTree.pyx":1474
 *         self.lumi_branch = the_tree.GetBranch("lumi")
 *         #if not self.lumi_branch and "lumi" not in self.complained:
 *         if not self.lumi_branch and "lumi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch lumi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("lumi")
 */
  __pyx_t_2 = (!(__pyx_v_self->lumi_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1475
 *         #if not self.lumi_branch and "lumi" not in self.complained:
 *         if not self.lumi_branch and "lumi":
 *             warnings.warn( "MuTauTree: Expected branch lumi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("lumi")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1475; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1475; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1475; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_60));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_60));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_60));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1475; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L56;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1478
 *             #self.complained.add("lumi")
 *         else:
 *             self.lumi_branch.SetAddress(<void*>&self.lumi_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mAbsEta"
 */
    __pyx_v_self->lumi_branch->SetAddress(((void *)(&__pyx_v_self->lumi_value)));
  }
  __pyx_L56:;

  /* "MuTauTree.pyx":1481
 * 
 *         #print "making mAbsEta"
 *         self.mAbsEta_branch = the_tree.GetBranch("mAbsEta")             # <<<<<<<<<<<<<<
 *         #if not self.mAbsEta_branch and "mAbsEta" not in self.complained:
 *         if not self.mAbsEta_branch and "mAbsEta":
 */
  __pyx_v_self->mAbsEta_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mAbsEta);

  /* "MuTauTree.pyx":1483
 *         self.mAbsEta_branch = the_tree.GetBranch("mAbsEta")
 *         #if not self.mAbsEta_branch and "mAbsEta" not in self.complained:
 *         if not self.mAbsEta_branch and "mAbsEta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mAbsEta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mAbsEta")
 */
  __pyx_t_1 = (!(__pyx_v_self->mAbsEta_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1484
 *         #if not self.mAbsEta_branch and "mAbsEta" not in self.complained:
 *         if not self.mAbsEta_branch and "mAbsEta":
 *             warnings.warn( "MuTauTree: Expected branch mAbsEta does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mAbsEta")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1484; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1484; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1484; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_61));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_61));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_61));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1484; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L57;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1487
 *             #self.complained.add("mAbsEta")
 *         else:
 *             self.mAbsEta_branch.SetAddress(<void*>&self.mAbsEta_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mCharge"
 */
    __pyx_v_self->mAbsEta_branch->SetAddress(((void *)(&__pyx_v_self->mAbsEta_value)));
  }
  __pyx_L57:;

  /* "MuTauTree.pyx":1490
 * 
 *         #print "making mCharge"
 *         self.mCharge_branch = the_tree.GetBranch("mCharge")             # <<<<<<<<<<<<<<
 *         #if not self.mCharge_branch and "mCharge" not in self.complained:
 *         if not self.mCharge_branch and "mCharge":
 */
  __pyx_v_self->mCharge_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mCharge);

  /* "MuTauTree.pyx":1492
 *         self.mCharge_branch = the_tree.GetBranch("mCharge")
 *         #if not self.mCharge_branch and "mCharge" not in self.complained:
 *         if not self.mCharge_branch and "mCharge":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mCharge does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mCharge")
 */
  __pyx_t_2 = (!(__pyx_v_self->mCharge_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1493
 *         #if not self.mCharge_branch and "mCharge" not in self.complained:
 *         if not self.mCharge_branch and "mCharge":
 *             warnings.warn( "MuTauTree: Expected branch mCharge does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mCharge")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1493; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1493; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1493; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_62));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_62));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_62));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1493; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L58;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1496
 *             #self.complained.add("mCharge")
 *         else:
 *             self.mCharge_branch.SetAddress(<void*>&self.mCharge_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mComesFromHiggs"
 */
    __pyx_v_self->mCharge_branch->SetAddress(((void *)(&__pyx_v_self->mCharge_value)));
  }
  __pyx_L58:;

  /* "MuTauTree.pyx":1499
 * 
 *         #print "making mComesFromHiggs"
 *         self.mComesFromHiggs_branch = the_tree.GetBranch("mComesFromHiggs")             # <<<<<<<<<<<<<<
 *         #if not self.mComesFromHiggs_branch and "mComesFromHiggs" not in self.complained:
 *         if not self.mComesFromHiggs_branch and "mComesFromHiggs":
 */
  __pyx_v_self->mComesFromHiggs_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mComesFromHiggs);

  /* "MuTauTree.pyx":1501
 *         self.mComesFromHiggs_branch = the_tree.GetBranch("mComesFromHiggs")
 *         #if not self.mComesFromHiggs_branch and "mComesFromHiggs" not in self.complained:
 *         if not self.mComesFromHiggs_branch and "mComesFromHiggs":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mComesFromHiggs does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mComesFromHiggs")
 */
  __pyx_t_1 = (!(__pyx_v_self->mComesFromHiggs_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1502
 *         #if not self.mComesFromHiggs_branch and "mComesFromHiggs" not in self.complained:
 *         if not self.mComesFromHiggs_branch and "mComesFromHiggs":
 *             warnings.warn( "MuTauTree: Expected branch mComesFromHiggs does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mComesFromHiggs")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1502; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1502; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1502; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_63));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_63));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_63));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1502; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L59;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1505
 *             #self.complained.add("mComesFromHiggs")
 *         else:
 *             self.mComesFromHiggs_branch.SetAddress(<void*>&self.mComesFromHiggs_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mD0"
 */
    __pyx_v_self->mComesFromHiggs_branch->SetAddress(((void *)(&__pyx_v_self->mComesFromHiggs_value)));
  }
  __pyx_L59:;

  /* "MuTauTree.pyx":1508
 * 
 *         #print "making mD0"
 *         self.mD0_branch = the_tree.GetBranch("mD0")             # <<<<<<<<<<<<<<
 *         #if not self.mD0_branch and "mD0" not in self.complained:
 *         if not self.mD0_branch and "mD0":
 */
  __pyx_v_self->mD0_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mD0);

  /* "MuTauTree.pyx":1510
 *         self.mD0_branch = the_tree.GetBranch("mD0")
 *         #if not self.mD0_branch and "mD0" not in self.complained:
 *         if not self.mD0_branch and "mD0":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mD0 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mD0")
 */
  __pyx_t_2 = (!(__pyx_v_self->mD0_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1511
 *         #if not self.mD0_branch and "mD0" not in self.complained:
 *         if not self.mD0_branch and "mD0":
 *             warnings.warn( "MuTauTree: Expected branch mD0 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mD0")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1511; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1511; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1511; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_64));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_64));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_64));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1511; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L60;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1514
 *             #self.complained.add("mD0")
 *         else:
 *             self.mD0_branch.SetAddress(<void*>&self.mD0_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mDZ"
 */
    __pyx_v_self->mD0_branch->SetAddress(((void *)(&__pyx_v_self->mD0_value)));
  }
  __pyx_L60:;

  /* "MuTauTree.pyx":1517
 * 
 *         #print "making mDZ"
 *         self.mDZ_branch = the_tree.GetBranch("mDZ")             # <<<<<<<<<<<<<<
 *         #if not self.mDZ_branch and "mDZ" not in self.complained:
 *         if not self.mDZ_branch and "mDZ":
 */
  __pyx_v_self->mDZ_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mDZ);

  /* "MuTauTree.pyx":1519
 *         self.mDZ_branch = the_tree.GetBranch("mDZ")
 *         #if not self.mDZ_branch and "mDZ" not in self.complained:
 *         if not self.mDZ_branch and "mDZ":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mDZ does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mDZ")
 */
  __pyx_t_1 = (!(__pyx_v_self->mDZ_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1520
 *         #if not self.mDZ_branch and "mDZ" not in self.complained:
 *         if not self.mDZ_branch and "mDZ":
 *             warnings.warn( "MuTauTree: Expected branch mDZ does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mDZ")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1520; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1520; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1520; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_65));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_65));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_65));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1520; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L61;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1523
 *             #self.complained.add("mDZ")
 *         else:
 *             self.mDZ_branch.SetAddress(<void*>&self.mDZ_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mDiMuonL3PreFiltered7"
 */
    __pyx_v_self->mDZ_branch->SetAddress(((void *)(&__pyx_v_self->mDZ_value)));
  }
  __pyx_L61:;

  /* "MuTauTree.pyx":1526
 * 
 *         #print "making mDiMuonL3PreFiltered7"
 *         self.mDiMuonL3PreFiltered7_branch = the_tree.GetBranch("mDiMuonL3PreFiltered7")             # <<<<<<<<<<<<<<
 *         #if not self.mDiMuonL3PreFiltered7_branch and "mDiMuonL3PreFiltered7" not in self.complained:
 *         if not self.mDiMuonL3PreFiltered7_branch and "mDiMuonL3PreFiltered7":
 */
  __pyx_v_self->mDiMuonL3PreFiltered7_branch = __pyx_v_the_tree->GetBranch(__pyx_k_66);

  /* "MuTauTree.pyx":1528
 *         self.mDiMuonL3PreFiltered7_branch = the_tree.GetBranch("mDiMuonL3PreFiltered7")
 *         #if not self.mDiMuonL3PreFiltered7_branch and "mDiMuonL3PreFiltered7" not in self.complained:
 *         if not self.mDiMuonL3PreFiltered7_branch and "mDiMuonL3PreFiltered7":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mDiMuonL3PreFiltered7 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mDiMuonL3PreFiltered7")
 */
  __pyx_t_2 = (!(__pyx_v_self->mDiMuonL3PreFiltered7_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1529
 *         #if not self.mDiMuonL3PreFiltered7_branch and "mDiMuonL3PreFiltered7" not in self.complained:
 *         if not self.mDiMuonL3PreFiltered7_branch and "mDiMuonL3PreFiltered7":
 *             warnings.warn( "MuTauTree: Expected branch mDiMuonL3PreFiltered7 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mDiMuonL3PreFiltered7")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1529; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1529; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1529; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_67));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_67));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_67));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1529; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L62;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1532
 *             #self.complained.add("mDiMuonL3PreFiltered7")
 *         else:
 *             self.mDiMuonL3PreFiltered7_branch.SetAddress(<void*>&self.mDiMuonL3PreFiltered7_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mDiMuonL3p5PreFiltered8"
 */
    __pyx_v_self->mDiMuonL3PreFiltered7_branch->SetAddress(((void *)(&__pyx_v_self->mDiMuonL3PreFiltered7_value)));
  }
  __pyx_L62:;

  /* "MuTauTree.pyx":1535
 * 
 *         #print "making mDiMuonL3p5PreFiltered8"
 *         self.mDiMuonL3p5PreFiltered8_branch = the_tree.GetBranch("mDiMuonL3p5PreFiltered8")             # <<<<<<<<<<<<<<
 *         #if not self.mDiMuonL3p5PreFiltered8_branch and "mDiMuonL3p5PreFiltered8" not in self.complained:
 *         if not self.mDiMuonL3p5PreFiltered8_branch and "mDiMuonL3p5PreFiltered8":
 */
  __pyx_v_self->mDiMuonL3p5PreFiltered8_branch = __pyx_v_the_tree->GetBranch(__pyx_k_68);

  /* "MuTauTree.pyx":1537
 *         self.mDiMuonL3p5PreFiltered8_branch = the_tree.GetBranch("mDiMuonL3p5PreFiltered8")
 *         #if not self.mDiMuonL3p5PreFiltered8_branch and "mDiMuonL3p5PreFiltered8" not in self.complained:
 *         if not self.mDiMuonL3p5PreFiltered8_branch and "mDiMuonL3p5PreFiltered8":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mDiMuonL3p5PreFiltered8 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mDiMuonL3p5PreFiltered8")
 */
  __pyx_t_1 = (!(__pyx_v_self->mDiMuonL3p5PreFiltered8_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1538
 *         #if not self.mDiMuonL3p5PreFiltered8_branch and "mDiMuonL3p5PreFiltered8" not in self.complained:
 *         if not self.mDiMuonL3p5PreFiltered8_branch and "mDiMuonL3p5PreFiltered8":
 *             warnings.warn( "MuTauTree: Expected branch mDiMuonL3p5PreFiltered8 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mDiMuonL3p5PreFiltered8")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1538; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1538; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1538; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_69));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_69));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_69));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1538; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L63;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1541
 *             #self.complained.add("mDiMuonL3p5PreFiltered8")
 *         else:
 *             self.mDiMuonL3p5PreFiltered8_branch.SetAddress(<void*>&self.mDiMuonL3p5PreFiltered8_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mDiMuonMu17Mu8DzFiltered0p2"
 */
    __pyx_v_self->mDiMuonL3p5PreFiltered8_branch->SetAddress(((void *)(&__pyx_v_self->mDiMuonL3p5PreFiltered8_value)));
  }
  __pyx_L63:;

  /* "MuTauTree.pyx":1544
 * 
 *         #print "making mDiMuonMu17Mu8DzFiltered0p2"
 *         self.mDiMuonMu17Mu8DzFiltered0p2_branch = the_tree.GetBranch("mDiMuonMu17Mu8DzFiltered0p2")             # <<<<<<<<<<<<<<
 *         #if not self.mDiMuonMu17Mu8DzFiltered0p2_branch and "mDiMuonMu17Mu8DzFiltered0p2" not in self.complained:
 *         if not self.mDiMuonMu17Mu8DzFiltered0p2_branch and "mDiMuonMu17Mu8DzFiltered0p2":
 */
  __pyx_v_self->mDiMuonMu17Mu8DzFiltered0p2_branch = __pyx_v_the_tree->GetBranch(__pyx_k_70);

  /* "MuTauTree.pyx":1546
 *         self.mDiMuonMu17Mu8DzFiltered0p2_branch = the_tree.GetBranch("mDiMuonMu17Mu8DzFiltered0p2")
 *         #if not self.mDiMuonMu17Mu8DzFiltered0p2_branch and "mDiMuonMu17Mu8DzFiltered0p2" not in self.complained:
 *         if not self.mDiMuonMu17Mu8DzFiltered0p2_branch and "mDiMuonMu17Mu8DzFiltered0p2":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mDiMuonMu17Mu8DzFiltered0p2 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mDiMuonMu17Mu8DzFiltered0p2")
 */
  __pyx_t_2 = (!(__pyx_v_self->mDiMuonMu17Mu8DzFiltered0p2_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1547
 *         #if not self.mDiMuonMu17Mu8DzFiltered0p2_branch and "mDiMuonMu17Mu8DzFiltered0p2" not in self.complained:
 *         if not self.mDiMuonMu17Mu8DzFiltered0p2_branch and "mDiMuonMu17Mu8DzFiltered0p2":
 *             warnings.warn( "MuTauTree: Expected branch mDiMuonMu17Mu8DzFiltered0p2 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mDiMuonMu17Mu8DzFiltered0p2")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1547; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1547; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1547; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_71));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_71));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_71));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1547; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L64;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1550
 *             #self.complained.add("mDiMuonMu17Mu8DzFiltered0p2")
 *         else:
 *             self.mDiMuonMu17Mu8DzFiltered0p2_branch.SetAddress(<void*>&self.mDiMuonMu17Mu8DzFiltered0p2_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mEErrRochCor2011A"
 */
    __pyx_v_self->mDiMuonMu17Mu8DzFiltered0p2_branch->SetAddress(((void *)(&__pyx_v_self->mDiMuonMu17Mu8DzFiltered0p2_value)));
  }
  __pyx_L64:;

  /* "MuTauTree.pyx":1553
 * 
 *         #print "making mEErrRochCor2011A"
 *         self.mEErrRochCor2011A_branch = the_tree.GetBranch("mEErrRochCor2011A")             # <<<<<<<<<<<<<<
 *         #if not self.mEErrRochCor2011A_branch and "mEErrRochCor2011A" not in self.complained:
 *         if not self.mEErrRochCor2011A_branch and "mEErrRochCor2011A":
 */
  __pyx_v_self->mEErrRochCor2011A_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mEErrRochCor2011A);

  /* "MuTauTree.pyx":1555
 *         self.mEErrRochCor2011A_branch = the_tree.GetBranch("mEErrRochCor2011A")
 *         #if not self.mEErrRochCor2011A_branch and "mEErrRochCor2011A" not in self.complained:
 *         if not self.mEErrRochCor2011A_branch and "mEErrRochCor2011A":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mEErrRochCor2011A does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mEErrRochCor2011A")
 */
  __pyx_t_1 = (!(__pyx_v_self->mEErrRochCor2011A_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1556
 *         #if not self.mEErrRochCor2011A_branch and "mEErrRochCor2011A" not in self.complained:
 *         if not self.mEErrRochCor2011A_branch and "mEErrRochCor2011A":
 *             warnings.warn( "MuTauTree: Expected branch mEErrRochCor2011A does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mEErrRochCor2011A")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1556; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1556; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1556; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_72));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_72));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_72));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1556; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L65;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1559
 *             #self.complained.add("mEErrRochCor2011A")
 *         else:
 *             self.mEErrRochCor2011A_branch.SetAddress(<void*>&self.mEErrRochCor2011A_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mEErrRochCor2011B"
 */
    __pyx_v_self->mEErrRochCor2011A_branch->SetAddress(((void *)(&__pyx_v_self->mEErrRochCor2011A_value)));
  }
  __pyx_L65:;

  /* "MuTauTree.pyx":1562
 * 
 *         #print "making mEErrRochCor2011B"
 *         self.mEErrRochCor2011B_branch = the_tree.GetBranch("mEErrRochCor2011B")             # <<<<<<<<<<<<<<
 *         #if not self.mEErrRochCor2011B_branch and "mEErrRochCor2011B" not in self.complained:
 *         if not self.mEErrRochCor2011B_branch and "mEErrRochCor2011B":
 */
  __pyx_v_self->mEErrRochCor2011B_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mEErrRochCor2011B);

  /* "MuTauTree.pyx":1564
 *         self.mEErrRochCor2011B_branch = the_tree.GetBranch("mEErrRochCor2011B")
 *         #if not self.mEErrRochCor2011B_branch and "mEErrRochCor2011B" not in self.complained:
 *         if not self.mEErrRochCor2011B_branch and "mEErrRochCor2011B":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mEErrRochCor2011B does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mEErrRochCor2011B")
 */
  __pyx_t_2 = (!(__pyx_v_self->mEErrRochCor2011B_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1565
 *         #if not self.mEErrRochCor2011B_branch and "mEErrRochCor2011B" not in self.complained:
 *         if not self.mEErrRochCor2011B_branch and "mEErrRochCor2011B":
 *             warnings.warn( "MuTauTree: Expected branch mEErrRochCor2011B does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mEErrRochCor2011B")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1565; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1565; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1565; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_73));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_73));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_73));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1565; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L66;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1568
 *             #self.complained.add("mEErrRochCor2011B")
 *         else:
 *             self.mEErrRochCor2011B_branch.SetAddress(<void*>&self.mEErrRochCor2011B_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mEErrRochCor2012"
 */
    __pyx_v_self->mEErrRochCor2011B_branch->SetAddress(((void *)(&__pyx_v_self->mEErrRochCor2011B_value)));
  }
  __pyx_L66:;

  /* "MuTauTree.pyx":1571
 * 
 *         #print "making mEErrRochCor2012"
 *         self.mEErrRochCor2012_branch = the_tree.GetBranch("mEErrRochCor2012")             # <<<<<<<<<<<<<<
 *         #if not self.mEErrRochCor2012_branch and "mEErrRochCor2012" not in self.complained:
 *         if not self.mEErrRochCor2012_branch and "mEErrRochCor2012":
 */
  __pyx_v_self->mEErrRochCor2012_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mEErrRochCor2012);

  /* "MuTauTree.pyx":1573
 *         self.mEErrRochCor2012_branch = the_tree.GetBranch("mEErrRochCor2012")
 *         #if not self.mEErrRochCor2012_branch and "mEErrRochCor2012" not in self.complained:
 *         if not self.mEErrRochCor2012_branch and "mEErrRochCor2012":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mEErrRochCor2012 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mEErrRochCor2012")
 */
  __pyx_t_1 = (!(__pyx_v_self->mEErrRochCor2012_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1574
 *         #if not self.mEErrRochCor2012_branch and "mEErrRochCor2012" not in self.complained:
 *         if not self.mEErrRochCor2012_branch and "mEErrRochCor2012":
 *             warnings.warn( "MuTauTree: Expected branch mEErrRochCor2012 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mEErrRochCor2012")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1574; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1574; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1574; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_74));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_74));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_74));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1574; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L67;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1577
 *             #self.complained.add("mEErrRochCor2012")
 *         else:
 *             self.mEErrRochCor2012_branch.SetAddress(<void*>&self.mEErrRochCor2012_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mERochCor2011A"
 */
    __pyx_v_self->mEErrRochCor2012_branch->SetAddress(((void *)(&__pyx_v_self->mEErrRochCor2012_value)));
  }
  __pyx_L67:;

  /* "MuTauTree.pyx":1580
 * 
 *         #print "making mERochCor2011A"
 *         self.mERochCor2011A_branch = the_tree.GetBranch("mERochCor2011A")             # <<<<<<<<<<<<<<
 *         #if not self.mERochCor2011A_branch and "mERochCor2011A" not in self.complained:
 *         if not self.mERochCor2011A_branch and "mERochCor2011A":
 */
  __pyx_v_self->mERochCor2011A_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mERochCor2011A);

  /* "MuTauTree.pyx":1582
 *         self.mERochCor2011A_branch = the_tree.GetBranch("mERochCor2011A")
 *         #if not self.mERochCor2011A_branch and "mERochCor2011A" not in self.complained:
 *         if not self.mERochCor2011A_branch and "mERochCor2011A":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mERochCor2011A does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mERochCor2011A")
 */
  __pyx_t_2 = (!(__pyx_v_self->mERochCor2011A_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1583
 *         #if not self.mERochCor2011A_branch and "mERochCor2011A" not in self.complained:
 *         if not self.mERochCor2011A_branch and "mERochCor2011A":
 *             warnings.warn( "MuTauTree: Expected branch mERochCor2011A does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mERochCor2011A")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1583; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1583; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1583; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_75));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_75));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_75));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1583; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L68;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1586
 *             #self.complained.add("mERochCor2011A")
 *         else:
 *             self.mERochCor2011A_branch.SetAddress(<void*>&self.mERochCor2011A_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mERochCor2011B"
 */
    __pyx_v_self->mERochCor2011A_branch->SetAddress(((void *)(&__pyx_v_self->mERochCor2011A_value)));
  }
  __pyx_L68:;

  /* "MuTauTree.pyx":1589
 * 
 *         #print "making mERochCor2011B"
 *         self.mERochCor2011B_branch = the_tree.GetBranch("mERochCor2011B")             # <<<<<<<<<<<<<<
 *         #if not self.mERochCor2011B_branch and "mERochCor2011B" not in self.complained:
 *         if not self.mERochCor2011B_branch and "mERochCor2011B":
 */
  __pyx_v_self->mERochCor2011B_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mERochCor2011B);

  /* "MuTauTree.pyx":1591
 *         self.mERochCor2011B_branch = the_tree.GetBranch("mERochCor2011B")
 *         #if not self.mERochCor2011B_branch and "mERochCor2011B" not in self.complained:
 *         if not self.mERochCor2011B_branch and "mERochCor2011B":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mERochCor2011B does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mERochCor2011B")
 */
  __pyx_t_1 = (!(__pyx_v_self->mERochCor2011B_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1592
 *         #if not self.mERochCor2011B_branch and "mERochCor2011B" not in self.complained:
 *         if not self.mERochCor2011B_branch and "mERochCor2011B":
 *             warnings.warn( "MuTauTree: Expected branch mERochCor2011B does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mERochCor2011B")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1592; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1592; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1592; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_76));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_76));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_76));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1592; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L69;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1595
 *             #self.complained.add("mERochCor2011B")
 *         else:
 *             self.mERochCor2011B_branch.SetAddress(<void*>&self.mERochCor2011B_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mERochCor2012"
 */
    __pyx_v_self->mERochCor2011B_branch->SetAddress(((void *)(&__pyx_v_self->mERochCor2011B_value)));
  }
  __pyx_L69:;

  /* "MuTauTree.pyx":1598
 * 
 *         #print "making mERochCor2012"
 *         self.mERochCor2012_branch = the_tree.GetBranch("mERochCor2012")             # <<<<<<<<<<<<<<
 *         #if not self.mERochCor2012_branch and "mERochCor2012" not in self.complained:
 *         if not self.mERochCor2012_branch and "mERochCor2012":
 */
  __pyx_v_self->mERochCor2012_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mERochCor2012);

  /* "MuTauTree.pyx":1600
 *         self.mERochCor2012_branch = the_tree.GetBranch("mERochCor2012")
 *         #if not self.mERochCor2012_branch and "mERochCor2012" not in self.complained:
 *         if not self.mERochCor2012_branch and "mERochCor2012":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mERochCor2012 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mERochCor2012")
 */
  __pyx_t_2 = (!(__pyx_v_self->mERochCor2012_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1601
 *         #if not self.mERochCor2012_branch and "mERochCor2012" not in self.complained:
 *         if not self.mERochCor2012_branch and "mERochCor2012":
 *             warnings.warn( "MuTauTree: Expected branch mERochCor2012 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mERochCor2012")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1601; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1601; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1601; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_77));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_77));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_77));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1601; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L70;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1604
 *             #self.complained.add("mERochCor2012")
 *         else:
 *             self.mERochCor2012_branch.SetAddress(<void*>&self.mERochCor2012_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mEffectiveArea2011"
 */
    __pyx_v_self->mERochCor2012_branch->SetAddress(((void *)(&__pyx_v_self->mERochCor2012_value)));
  }
  __pyx_L70:;

  /* "MuTauTree.pyx":1607
 * 
 *         #print "making mEffectiveArea2011"
 *         self.mEffectiveArea2011_branch = the_tree.GetBranch("mEffectiveArea2011")             # <<<<<<<<<<<<<<
 *         #if not self.mEffectiveArea2011_branch and "mEffectiveArea2011" not in self.complained:
 *         if not self.mEffectiveArea2011_branch and "mEffectiveArea2011":
 */
  __pyx_v_self->mEffectiveArea2011_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mEffectiveArea2011);

  /* "MuTauTree.pyx":1609
 *         self.mEffectiveArea2011_branch = the_tree.GetBranch("mEffectiveArea2011")
 *         #if not self.mEffectiveArea2011_branch and "mEffectiveArea2011" not in self.complained:
 *         if not self.mEffectiveArea2011_branch and "mEffectiveArea2011":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mEffectiveArea2011 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mEffectiveArea2011")
 */
  __pyx_t_1 = (!(__pyx_v_self->mEffectiveArea2011_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1610
 *         #if not self.mEffectiveArea2011_branch and "mEffectiveArea2011" not in self.complained:
 *         if not self.mEffectiveArea2011_branch and "mEffectiveArea2011":
 *             warnings.warn( "MuTauTree: Expected branch mEffectiveArea2011 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mEffectiveArea2011")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1610; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1610; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1610; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_78));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_78));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_78));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1610; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L71;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1613
 *             #self.complained.add("mEffectiveArea2011")
 *         else:
 *             self.mEffectiveArea2011_branch.SetAddress(<void*>&self.mEffectiveArea2011_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mEffectiveArea2012"
 */
    __pyx_v_self->mEffectiveArea2011_branch->SetAddress(((void *)(&__pyx_v_self->mEffectiveArea2011_value)));
  }
  __pyx_L71:;

  /* "MuTauTree.pyx":1616
 * 
 *         #print "making mEffectiveArea2012"
 *         self.mEffectiveArea2012_branch = the_tree.GetBranch("mEffectiveArea2012")             # <<<<<<<<<<<<<<
 *         #if not self.mEffectiveArea2012_branch and "mEffectiveArea2012" not in self.complained:
 *         if not self.mEffectiveArea2012_branch and "mEffectiveArea2012":
 */
  __pyx_v_self->mEffectiveArea2012_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mEffectiveArea2012);

  /* "MuTauTree.pyx":1618
 *         self.mEffectiveArea2012_branch = the_tree.GetBranch("mEffectiveArea2012")
 *         #if not self.mEffectiveArea2012_branch and "mEffectiveArea2012" not in self.complained:
 *         if not self.mEffectiveArea2012_branch and "mEffectiveArea2012":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mEffectiveArea2012 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mEffectiveArea2012")
 */
  __pyx_t_2 = (!(__pyx_v_self->mEffectiveArea2012_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1619
 *         #if not self.mEffectiveArea2012_branch and "mEffectiveArea2012" not in self.complained:
 *         if not self.mEffectiveArea2012_branch and "mEffectiveArea2012":
 *             warnings.warn( "MuTauTree: Expected branch mEffectiveArea2012 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mEffectiveArea2012")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1619; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1619; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1619; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_79));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_79));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_79));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1619; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L72;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1622
 *             #self.complained.add("mEffectiveArea2012")
 *         else:
 *             self.mEffectiveArea2012_branch.SetAddress(<void*>&self.mEffectiveArea2012_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mEta"
 */
    __pyx_v_self->mEffectiveArea2012_branch->SetAddress(((void *)(&__pyx_v_self->mEffectiveArea2012_value)));
  }
  __pyx_L72:;

  /* "MuTauTree.pyx":1625
 * 
 *         #print "making mEta"
 *         self.mEta_branch = the_tree.GetBranch("mEta")             # <<<<<<<<<<<<<<
 *         #if not self.mEta_branch and "mEta" not in self.complained:
 *         if not self.mEta_branch and "mEta":
 */
  __pyx_v_self->mEta_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mEta);

  /* "MuTauTree.pyx":1627
 *         self.mEta_branch = the_tree.GetBranch("mEta")
 *         #if not self.mEta_branch and "mEta" not in self.complained:
 *         if not self.mEta_branch and "mEta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mEta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mEta")
 */
  __pyx_t_1 = (!(__pyx_v_self->mEta_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1628
 *         #if not self.mEta_branch and "mEta" not in self.complained:
 *         if not self.mEta_branch and "mEta":
 *             warnings.warn( "MuTauTree: Expected branch mEta does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mEta")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1628; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1628; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1628; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_80));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_80));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_80));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1628; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L73;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1631
 *             #self.complained.add("mEta")
 *         else:
 *             self.mEta_branch.SetAddress(<void*>&self.mEta_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mEtaRochCor2011A"
 */
    __pyx_v_self->mEta_branch->SetAddress(((void *)(&__pyx_v_self->mEta_value)));
  }
  __pyx_L73:;

  /* "MuTauTree.pyx":1634
 * 
 *         #print "making mEtaRochCor2011A"
 *         self.mEtaRochCor2011A_branch = the_tree.GetBranch("mEtaRochCor2011A")             # <<<<<<<<<<<<<<
 *         #if not self.mEtaRochCor2011A_branch and "mEtaRochCor2011A" not in self.complained:
 *         if not self.mEtaRochCor2011A_branch and "mEtaRochCor2011A":
 */
  __pyx_v_self->mEtaRochCor2011A_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mEtaRochCor2011A);

  /* "MuTauTree.pyx":1636
 *         self.mEtaRochCor2011A_branch = the_tree.GetBranch("mEtaRochCor2011A")
 *         #if not self.mEtaRochCor2011A_branch and "mEtaRochCor2011A" not in self.complained:
 *         if not self.mEtaRochCor2011A_branch and "mEtaRochCor2011A":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mEtaRochCor2011A does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mEtaRochCor2011A")
 */
  __pyx_t_2 = (!(__pyx_v_self->mEtaRochCor2011A_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1637
 *         #if not self.mEtaRochCor2011A_branch and "mEtaRochCor2011A" not in self.complained:
 *         if not self.mEtaRochCor2011A_branch and "mEtaRochCor2011A":
 *             warnings.warn( "MuTauTree: Expected branch mEtaRochCor2011A does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mEtaRochCor2011A")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1637; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1637; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1637; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_81));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_81));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_81));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1637; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L74;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1640
 *             #self.complained.add("mEtaRochCor2011A")
 *         else:
 *             self.mEtaRochCor2011A_branch.SetAddress(<void*>&self.mEtaRochCor2011A_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mEtaRochCor2011B"
 */
    __pyx_v_self->mEtaRochCor2011A_branch->SetAddress(((void *)(&__pyx_v_self->mEtaRochCor2011A_value)));
  }
  __pyx_L74:;

  /* "MuTauTree.pyx":1643
 * 
 *         #print "making mEtaRochCor2011B"
 *         self.mEtaRochCor2011B_branch = the_tree.GetBranch("mEtaRochCor2011B")             # <<<<<<<<<<<<<<
 *         #if not self.mEtaRochCor2011B_branch and "mEtaRochCor2011B" not in self.complained:
 *         if not self.mEtaRochCor2011B_branch and "mEtaRochCor2011B":
 */
  __pyx_v_self->mEtaRochCor2011B_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mEtaRochCor2011B);

  /* "MuTauTree.pyx":1645
 *         self.mEtaRochCor2011B_branch = the_tree.GetBranch("mEtaRochCor2011B")
 *         #if not self.mEtaRochCor2011B_branch and "mEtaRochCor2011B" not in self.complained:
 *         if not self.mEtaRochCor2011B_branch and "mEtaRochCor2011B":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mEtaRochCor2011B does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mEtaRochCor2011B")
 */
  __pyx_t_1 = (!(__pyx_v_self->mEtaRochCor2011B_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1646
 *         #if not self.mEtaRochCor2011B_branch and "mEtaRochCor2011B" not in self.complained:
 *         if not self.mEtaRochCor2011B_branch and "mEtaRochCor2011B":
 *             warnings.warn( "MuTauTree: Expected branch mEtaRochCor2011B does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mEtaRochCor2011B")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1646; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1646; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1646; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_82));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_82));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_82));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1646; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L75;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1649
 *             #self.complained.add("mEtaRochCor2011B")
 *         else:
 *             self.mEtaRochCor2011B_branch.SetAddress(<void*>&self.mEtaRochCor2011B_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mEtaRochCor2012"
 */
    __pyx_v_self->mEtaRochCor2011B_branch->SetAddress(((void *)(&__pyx_v_self->mEtaRochCor2011B_value)));
  }
  __pyx_L75:;

  /* "MuTauTree.pyx":1652
 * 
 *         #print "making mEtaRochCor2012"
 *         self.mEtaRochCor2012_branch = the_tree.GetBranch("mEtaRochCor2012")             # <<<<<<<<<<<<<<
 *         #if not self.mEtaRochCor2012_branch and "mEtaRochCor2012" not in self.complained:
 *         if not self.mEtaRochCor2012_branch and "mEtaRochCor2012":
 */
  __pyx_v_self->mEtaRochCor2012_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mEtaRochCor2012);

  /* "MuTauTree.pyx":1654
 *         self.mEtaRochCor2012_branch = the_tree.GetBranch("mEtaRochCor2012")
 *         #if not self.mEtaRochCor2012_branch and "mEtaRochCor2012" not in self.complained:
 *         if not self.mEtaRochCor2012_branch and "mEtaRochCor2012":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mEtaRochCor2012 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mEtaRochCor2012")
 */
  __pyx_t_2 = (!(__pyx_v_self->mEtaRochCor2012_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1655
 *         #if not self.mEtaRochCor2012_branch and "mEtaRochCor2012" not in self.complained:
 *         if not self.mEtaRochCor2012_branch and "mEtaRochCor2012":
 *             warnings.warn( "MuTauTree: Expected branch mEtaRochCor2012 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mEtaRochCor2012")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1655; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1655; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1655; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_83));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_83));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_83));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1655; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L76;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1658
 *             #self.complained.add("mEtaRochCor2012")
 *         else:
 *             self.mEtaRochCor2012_branch.SetAddress(<void*>&self.mEtaRochCor2012_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mGenMotherPdgId"
 */
    __pyx_v_self->mEtaRochCor2012_branch->SetAddress(((void *)(&__pyx_v_self->mEtaRochCor2012_value)));
  }
  __pyx_L76:;

  /* "MuTauTree.pyx":1661
 * 
 *         #print "making mGenMotherPdgId"
 *         self.mGenMotherPdgId_branch = the_tree.GetBranch("mGenMotherPdgId")             # <<<<<<<<<<<<<<
 *         #if not self.mGenMotherPdgId_branch and "mGenMotherPdgId" not in self.complained:
 *         if not self.mGenMotherPdgId_branch and "mGenMotherPdgId":
 */
  __pyx_v_self->mGenMotherPdgId_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mGenMotherPdgId);

  /* "MuTauTree.pyx":1663
 *         self.mGenMotherPdgId_branch = the_tree.GetBranch("mGenMotherPdgId")
 *         #if not self.mGenMotherPdgId_branch and "mGenMotherPdgId" not in self.complained:
 *         if not self.mGenMotherPdgId_branch and "mGenMotherPdgId":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mGenMotherPdgId does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mGenMotherPdgId")
 */
  __pyx_t_1 = (!(__pyx_v_self->mGenMotherPdgId_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1664
 *         #if not self.mGenMotherPdgId_branch and "mGenMotherPdgId" not in self.complained:
 *         if not self.mGenMotherPdgId_branch and "mGenMotherPdgId":
 *             warnings.warn( "MuTauTree: Expected branch mGenMotherPdgId does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mGenMotherPdgId")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1664; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1664; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1664; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_84));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_84));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_84));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1664; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L77;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1667
 *             #self.complained.add("mGenMotherPdgId")
 *         else:
 *             self.mGenMotherPdgId_branch.SetAddress(<void*>&self.mGenMotherPdgId_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mGlbTrkHits"
 */
    __pyx_v_self->mGenMotherPdgId_branch->SetAddress(((void *)(&__pyx_v_self->mGenMotherPdgId_value)));
  }
  __pyx_L77:;

  /* "MuTauTree.pyx":1670
 * 
 *         #print "making mGlbTrkHits"
 *         self.mGlbTrkHits_branch = the_tree.GetBranch("mGlbTrkHits")             # <<<<<<<<<<<<<<
 *         #if not self.mGlbTrkHits_branch and "mGlbTrkHits" not in self.complained:
 *         if not self.mGlbTrkHits_branch and "mGlbTrkHits":
 */
  __pyx_v_self->mGlbTrkHits_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mGlbTrkHits);

  /* "MuTauTree.pyx":1672
 *         self.mGlbTrkHits_branch = the_tree.GetBranch("mGlbTrkHits")
 *         #if not self.mGlbTrkHits_branch and "mGlbTrkHits" not in self.complained:
 *         if not self.mGlbTrkHits_branch and "mGlbTrkHits":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mGlbTrkHits does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mGlbTrkHits")
 */
  __pyx_t_2 = (!(__pyx_v_self->mGlbTrkHits_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1673
 *         #if not self.mGlbTrkHits_branch and "mGlbTrkHits" not in self.complained:
 *         if not self.mGlbTrkHits_branch and "mGlbTrkHits":
 *             warnings.warn( "MuTauTree: Expected branch mGlbTrkHits does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mGlbTrkHits")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1673; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1673; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1673; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_85));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_85));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_85));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1673; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L78;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1676
 *             #self.complained.add("mGlbTrkHits")
 *         else:
 *             self.mGlbTrkHits_branch.SetAddress(<void*>&self.mGlbTrkHits_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mIDHZG2011"
 */
    __pyx_v_self->mGlbTrkHits_branch->SetAddress(((void *)(&__pyx_v_self->mGlbTrkHits_value)));
  }
  __pyx_L78:;

  /* "MuTauTree.pyx":1679
 * 
 *         #print "making mIDHZG2011"
 *         self.mIDHZG2011_branch = the_tree.GetBranch("mIDHZG2011")             # <<<<<<<<<<<<<<
 *         #if not self.mIDHZG2011_branch and "mIDHZG2011" not in self.complained:
 *         if not self.mIDHZG2011_branch and "mIDHZG2011":
 */
  __pyx_v_self->mIDHZG2011_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mIDHZG2011);

  /* "MuTauTree.pyx":1681
 *         self.mIDHZG2011_branch = the_tree.GetBranch("mIDHZG2011")
 *         #if not self.mIDHZG2011_branch and "mIDHZG2011" not in self.complained:
 *         if not self.mIDHZG2011_branch and "mIDHZG2011":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mIDHZG2011 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mIDHZG2011")
 */
  __pyx_t_1 = (!(__pyx_v_self->mIDHZG2011_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1682
 *         #if not self.mIDHZG2011_branch and "mIDHZG2011" not in self.complained:
 *         if not self.mIDHZG2011_branch and "mIDHZG2011":
 *             warnings.warn( "MuTauTree: Expected branch mIDHZG2011 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mIDHZG2011")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1682; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1682; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1682; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_86));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_86));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_86));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1682; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L79;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1685
 *             #self.complained.add("mIDHZG2011")
 *         else:
 *             self.mIDHZG2011_branch.SetAddress(<void*>&self.mIDHZG2011_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mIDHZG2012"
 */
    __pyx_v_self->mIDHZG2011_branch->SetAddress(((void *)(&__pyx_v_self->mIDHZG2011_value)));
  }
  __pyx_L79:;

  /* "MuTauTree.pyx":1688
 * 
 *         #print "making mIDHZG2012"
 *         self.mIDHZG2012_branch = the_tree.GetBranch("mIDHZG2012")             # <<<<<<<<<<<<<<
 *         #if not self.mIDHZG2012_branch and "mIDHZG2012" not in self.complained:
 *         if not self.mIDHZG2012_branch and "mIDHZG2012":
 */
  __pyx_v_self->mIDHZG2012_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mIDHZG2012);

  /* "MuTauTree.pyx":1690
 *         self.mIDHZG2012_branch = the_tree.GetBranch("mIDHZG2012")
 *         #if not self.mIDHZG2012_branch and "mIDHZG2012" not in self.complained:
 *         if not self.mIDHZG2012_branch and "mIDHZG2012":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mIDHZG2012 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mIDHZG2012")
 */
  __pyx_t_2 = (!(__pyx_v_self->mIDHZG2012_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1691
 *         #if not self.mIDHZG2012_branch and "mIDHZG2012" not in self.complained:
 *         if not self.mIDHZG2012_branch and "mIDHZG2012":
 *             warnings.warn( "MuTauTree: Expected branch mIDHZG2012 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mIDHZG2012")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1691; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1691; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1691; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_87));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_87));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_87));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1691; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L80;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1694
 *             #self.complained.add("mIDHZG2012")
 *         else:
 *             self.mIDHZG2012_branch.SetAddress(<void*>&self.mIDHZG2012_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mIP3DS"
 */
    __pyx_v_self->mIDHZG2012_branch->SetAddress(((void *)(&__pyx_v_self->mIDHZG2012_value)));
  }
  __pyx_L80:;

  /* "MuTauTree.pyx":1697
 * 
 *         #print "making mIP3DS"
 *         self.mIP3DS_branch = the_tree.GetBranch("mIP3DS")             # <<<<<<<<<<<<<<
 *         #if not self.mIP3DS_branch and "mIP3DS" not in self.complained:
 *         if not self.mIP3DS_branch and "mIP3DS":
 */
  __pyx_v_self->mIP3DS_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mIP3DS);

  /* "MuTauTree.pyx":1699
 *         self.mIP3DS_branch = the_tree.GetBranch("mIP3DS")
 *         #if not self.mIP3DS_branch and "mIP3DS" not in self.complained:
 *         if not self.mIP3DS_branch and "mIP3DS":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mIP3DS does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mIP3DS")
 */
  __pyx_t_1 = (!(__pyx_v_self->mIP3DS_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1700
 *         #if not self.mIP3DS_branch and "mIP3DS" not in self.complained:
 *         if not self.mIP3DS_branch and "mIP3DS":
 *             warnings.warn( "MuTauTree: Expected branch mIP3DS does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mIP3DS")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1700; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1700; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1700; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_88));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_88));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_88));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1700; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L81;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1703
 *             #self.complained.add("mIP3DS")
 *         else:
 *             self.mIP3DS_branch.SetAddress(<void*>&self.mIP3DS_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mIsGlobal"
 */
    __pyx_v_self->mIP3DS_branch->SetAddress(((void *)(&__pyx_v_self->mIP3DS_value)));
  }
  __pyx_L81:;

  /* "MuTauTree.pyx":1706
 * 
 *         #print "making mIsGlobal"
 *         self.mIsGlobal_branch = the_tree.GetBranch("mIsGlobal")             # <<<<<<<<<<<<<<
 *         #if not self.mIsGlobal_branch and "mIsGlobal" not in self.complained:
 *         if not self.mIsGlobal_branch and "mIsGlobal":
 */
  __pyx_v_self->mIsGlobal_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mIsGlobal);

  /* "MuTauTree.pyx":1708
 *         self.mIsGlobal_branch = the_tree.GetBranch("mIsGlobal")
 *         #if not self.mIsGlobal_branch and "mIsGlobal" not in self.complained:
 *         if not self.mIsGlobal_branch and "mIsGlobal":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mIsGlobal does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mIsGlobal")
 */
  __pyx_t_2 = (!(__pyx_v_self->mIsGlobal_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1709
 *         #if not self.mIsGlobal_branch and "mIsGlobal" not in self.complained:
 *         if not self.mIsGlobal_branch and "mIsGlobal":
 *             warnings.warn( "MuTauTree: Expected branch mIsGlobal does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mIsGlobal")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1709; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1709; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1709; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_89));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_89));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_89));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1709; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L82;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1712
 *             #self.complained.add("mIsGlobal")
 *         else:
 *             self.mIsGlobal_branch.SetAddress(<void*>&self.mIsGlobal_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mIsTracker"
 */
    __pyx_v_self->mIsGlobal_branch->SetAddress(((void *)(&__pyx_v_self->mIsGlobal_value)));
  }
  __pyx_L82:;

  /* "MuTauTree.pyx":1715
 * 
 *         #print "making mIsTracker"
 *         self.mIsTracker_branch = the_tree.GetBranch("mIsTracker")             # <<<<<<<<<<<<<<
 *         #if not self.mIsTracker_branch and "mIsTracker" not in self.complained:
 *         if not self.mIsTracker_branch and "mIsTracker":
 */
  __pyx_v_self->mIsTracker_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mIsTracker);

  /* "MuTauTree.pyx":1717
 *         self.mIsTracker_branch = the_tree.GetBranch("mIsTracker")
 *         #if not self.mIsTracker_branch and "mIsTracker" not in self.complained:
 *         if not self.mIsTracker_branch and "mIsTracker":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mIsTracker does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mIsTracker")
 */
  __pyx_t_1 = (!(__pyx_v_self->mIsTracker_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1718
 *         #if not self.mIsTracker_branch and "mIsTracker" not in self.complained:
 *         if not self.mIsTracker_branch and "mIsTracker":
 *             warnings.warn( "MuTauTree: Expected branch mIsTracker does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mIsTracker")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1718; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1718; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1718; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_90));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_90));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_90));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1718; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L83;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1721
 *             #self.complained.add("mIsTracker")
 *         else:
 *             self.mIsTracker_branch.SetAddress(<void*>&self.mIsTracker_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mJetArea"
 */
    __pyx_v_self->mIsTracker_branch->SetAddress(((void *)(&__pyx_v_self->mIsTracker_value)));
  }
  __pyx_L83:;

  /* "MuTauTree.pyx":1724
 * 
 *         #print "making mJetArea"
 *         self.mJetArea_branch = the_tree.GetBranch("mJetArea")             # <<<<<<<<<<<<<<
 *         #if not self.mJetArea_branch and "mJetArea" not in self.complained:
 *         if not self.mJetArea_branch and "mJetArea":
 */
  __pyx_v_self->mJetArea_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mJetArea);

  /* "MuTauTree.pyx":1726
 *         self.mJetArea_branch = the_tree.GetBranch("mJetArea")
 *         #if not self.mJetArea_branch and "mJetArea" not in self.complained:
 *         if not self.mJetArea_branch and "mJetArea":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mJetArea does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mJetArea")
 */
  __pyx_t_2 = (!(__pyx_v_self->mJetArea_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1727
 *         #if not self.mJetArea_branch and "mJetArea" not in self.complained:
 *         if not self.mJetArea_branch and "mJetArea":
 *             warnings.warn( "MuTauTree: Expected branch mJetArea does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mJetArea")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1727; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1727; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1727; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_91));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_91));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_91));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1727; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L84;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1730
 *             #self.complained.add("mJetArea")
 *         else:
 *             self.mJetArea_branch.SetAddress(<void*>&self.mJetArea_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mJetBtag"
 */
    __pyx_v_self->mJetArea_branch->SetAddress(((void *)(&__pyx_v_self->mJetArea_value)));
  }
  __pyx_L84:;

  /* "MuTauTree.pyx":1733
 * 
 *         #print "making mJetBtag"
 *         self.mJetBtag_branch = the_tree.GetBranch("mJetBtag")             # <<<<<<<<<<<<<<
 *         #if not self.mJetBtag_branch and "mJetBtag" not in self.complained:
 *         if not self.mJetBtag_branch and "mJetBtag":
 */
  __pyx_v_self->mJetBtag_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mJetBtag);

  /* "MuTauTree.pyx":1735
 *         self.mJetBtag_branch = the_tree.GetBranch("mJetBtag")
 *         #if not self.mJetBtag_branch and "mJetBtag" not in self.complained:
 *         if not self.mJetBtag_branch and "mJetBtag":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mJetBtag does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mJetBtag")
 */
  __pyx_t_1 = (!(__pyx_v_self->mJetBtag_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1736
 *         #if not self.mJetBtag_branch and "mJetBtag" not in self.complained:
 *         if not self.mJetBtag_branch and "mJetBtag":
 *             warnings.warn( "MuTauTree: Expected branch mJetBtag does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mJetBtag")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1736; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1736; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1736; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_92));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_92));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_92));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1736; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L85;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1739
 *             #self.complained.add("mJetBtag")
 *         else:
 *             self.mJetBtag_branch.SetAddress(<void*>&self.mJetBtag_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mJetCSVBtag"
 */
    __pyx_v_self->mJetBtag_branch->SetAddress(((void *)(&__pyx_v_self->mJetBtag_value)));
  }
  __pyx_L85:;

  /* "MuTauTree.pyx":1742
 * 
 *         #print "making mJetCSVBtag"
 *         self.mJetCSVBtag_branch = the_tree.GetBranch("mJetCSVBtag")             # <<<<<<<<<<<<<<
 *         #if not self.mJetCSVBtag_branch and "mJetCSVBtag" not in self.complained:
 *         if not self.mJetCSVBtag_branch and "mJetCSVBtag":
 */
  __pyx_v_self->mJetCSVBtag_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mJetCSVBtag);

  /* "MuTauTree.pyx":1744
 *         self.mJetCSVBtag_branch = the_tree.GetBranch("mJetCSVBtag")
 *         #if not self.mJetCSVBtag_branch and "mJetCSVBtag" not in self.complained:
 *         if not self.mJetCSVBtag_branch and "mJetCSVBtag":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mJetCSVBtag does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mJetCSVBtag")
 */
  __pyx_t_2 = (!(__pyx_v_self->mJetCSVBtag_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1745
 *         #if not self.mJetCSVBtag_branch and "mJetCSVBtag" not in self.complained:
 *         if not self.mJetCSVBtag_branch and "mJetCSVBtag":
 *             warnings.warn( "MuTauTree: Expected branch mJetCSVBtag does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mJetCSVBtag")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1745; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1745; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1745; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_93));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_93));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_93));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1745; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L86;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1748
 *             #self.complained.add("mJetCSVBtag")
 *         else:
 *             self.mJetCSVBtag_branch.SetAddress(<void*>&self.mJetCSVBtag_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mJetEtaEtaMoment"
 */
    __pyx_v_self->mJetCSVBtag_branch->SetAddress(((void *)(&__pyx_v_self->mJetCSVBtag_value)));
  }
  __pyx_L86:;

  /* "MuTauTree.pyx":1751
 * 
 *         #print "making mJetEtaEtaMoment"
 *         self.mJetEtaEtaMoment_branch = the_tree.GetBranch("mJetEtaEtaMoment")             # <<<<<<<<<<<<<<
 *         #if not self.mJetEtaEtaMoment_branch and "mJetEtaEtaMoment" not in self.complained:
 *         if not self.mJetEtaEtaMoment_branch and "mJetEtaEtaMoment":
 */
  __pyx_v_self->mJetEtaEtaMoment_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mJetEtaEtaMoment);

  /* "MuTauTree.pyx":1753
 *         self.mJetEtaEtaMoment_branch = the_tree.GetBranch("mJetEtaEtaMoment")
 *         #if not self.mJetEtaEtaMoment_branch and "mJetEtaEtaMoment" not in self.complained:
 *         if not self.mJetEtaEtaMoment_branch and "mJetEtaEtaMoment":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mJetEtaEtaMoment does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mJetEtaEtaMoment")
 */
  __pyx_t_1 = (!(__pyx_v_self->mJetEtaEtaMoment_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1754
 *         #if not self.mJetEtaEtaMoment_branch and "mJetEtaEtaMoment" not in self.complained:
 *         if not self.mJetEtaEtaMoment_branch and "mJetEtaEtaMoment":
 *             warnings.warn( "MuTauTree: Expected branch mJetEtaEtaMoment does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mJetEtaEtaMoment")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1754; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1754; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1754; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_94));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_94));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_94));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1754; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L87;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1757
 *             #self.complained.add("mJetEtaEtaMoment")
 *         else:
 *             self.mJetEtaEtaMoment_branch.SetAddress(<void*>&self.mJetEtaEtaMoment_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mJetEtaPhiMoment"
 */
    __pyx_v_self->mJetEtaEtaMoment_branch->SetAddress(((void *)(&__pyx_v_self->mJetEtaEtaMoment_value)));
  }
  __pyx_L87:;

  /* "MuTauTree.pyx":1760
 * 
 *         #print "making mJetEtaPhiMoment"
 *         self.mJetEtaPhiMoment_branch = the_tree.GetBranch("mJetEtaPhiMoment")             # <<<<<<<<<<<<<<
 *         #if not self.mJetEtaPhiMoment_branch and "mJetEtaPhiMoment" not in self.complained:
 *         if not self.mJetEtaPhiMoment_branch and "mJetEtaPhiMoment":
 */
  __pyx_v_self->mJetEtaPhiMoment_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mJetEtaPhiMoment);

  /* "MuTauTree.pyx":1762
 *         self.mJetEtaPhiMoment_branch = the_tree.GetBranch("mJetEtaPhiMoment")
 *         #if not self.mJetEtaPhiMoment_branch and "mJetEtaPhiMoment" not in self.complained:
 *         if not self.mJetEtaPhiMoment_branch and "mJetEtaPhiMoment":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mJetEtaPhiMoment does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mJetEtaPhiMoment")
 */
  __pyx_t_2 = (!(__pyx_v_self->mJetEtaPhiMoment_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1763
 *         #if not self.mJetEtaPhiMoment_branch and "mJetEtaPhiMoment" not in self.complained:
 *         if not self.mJetEtaPhiMoment_branch and "mJetEtaPhiMoment":
 *             warnings.warn( "MuTauTree: Expected branch mJetEtaPhiMoment does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mJetEtaPhiMoment")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1763; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1763; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1763; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_95));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_95));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_95));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1763; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L88;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1766
 *             #self.complained.add("mJetEtaPhiMoment")
 *         else:
 *             self.mJetEtaPhiMoment_branch.SetAddress(<void*>&self.mJetEtaPhiMoment_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mJetEtaPhiSpread"
 */
    __pyx_v_self->mJetEtaPhiMoment_branch->SetAddress(((void *)(&__pyx_v_self->mJetEtaPhiMoment_value)));
  }
  __pyx_L88:;

  /* "MuTauTree.pyx":1769
 * 
 *         #print "making mJetEtaPhiSpread"
 *         self.mJetEtaPhiSpread_branch = the_tree.GetBranch("mJetEtaPhiSpread")             # <<<<<<<<<<<<<<
 *         #if not self.mJetEtaPhiSpread_branch and "mJetEtaPhiSpread" not in self.complained:
 *         if not self.mJetEtaPhiSpread_branch and "mJetEtaPhiSpread":
 */
  __pyx_v_self->mJetEtaPhiSpread_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mJetEtaPhiSpread);

  /* "MuTauTree.pyx":1771
 *         self.mJetEtaPhiSpread_branch = the_tree.GetBranch("mJetEtaPhiSpread")
 *         #if not self.mJetEtaPhiSpread_branch and "mJetEtaPhiSpread" not in self.complained:
 *         if not self.mJetEtaPhiSpread_branch and "mJetEtaPhiSpread":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mJetEtaPhiSpread does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mJetEtaPhiSpread")
 */
  __pyx_t_1 = (!(__pyx_v_self->mJetEtaPhiSpread_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1772
 *         #if not self.mJetEtaPhiSpread_branch and "mJetEtaPhiSpread" not in self.complained:
 *         if not self.mJetEtaPhiSpread_branch and "mJetEtaPhiSpread":
 *             warnings.warn( "MuTauTree: Expected branch mJetEtaPhiSpread does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mJetEtaPhiSpread")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1772; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1772; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1772; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_96));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_96));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_96));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1772; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L89;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1775
 *             #self.complained.add("mJetEtaPhiSpread")
 *         else:
 *             self.mJetEtaPhiSpread_branch.SetAddress(<void*>&self.mJetEtaPhiSpread_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mJetPhiPhiMoment"
 */
    __pyx_v_self->mJetEtaPhiSpread_branch->SetAddress(((void *)(&__pyx_v_self->mJetEtaPhiSpread_value)));
  }
  __pyx_L89:;

  /* "MuTauTree.pyx":1778
 * 
 *         #print "making mJetPhiPhiMoment"
 *         self.mJetPhiPhiMoment_branch = the_tree.GetBranch("mJetPhiPhiMoment")             # <<<<<<<<<<<<<<
 *         #if not self.mJetPhiPhiMoment_branch and "mJetPhiPhiMoment" not in self.complained:
 *         if not self.mJetPhiPhiMoment_branch and "mJetPhiPhiMoment":
 */
  __pyx_v_self->mJetPhiPhiMoment_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mJetPhiPhiMoment);

  /* "MuTauTree.pyx":1780
 *         self.mJetPhiPhiMoment_branch = the_tree.GetBranch("mJetPhiPhiMoment")
 *         #if not self.mJetPhiPhiMoment_branch and "mJetPhiPhiMoment" not in self.complained:
 *         if not self.mJetPhiPhiMoment_branch and "mJetPhiPhiMoment":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mJetPhiPhiMoment does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mJetPhiPhiMoment")
 */
  __pyx_t_2 = (!(__pyx_v_self->mJetPhiPhiMoment_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1781
 *         #if not self.mJetPhiPhiMoment_branch and "mJetPhiPhiMoment" not in self.complained:
 *         if not self.mJetPhiPhiMoment_branch and "mJetPhiPhiMoment":
 *             warnings.warn( "MuTauTree: Expected branch mJetPhiPhiMoment does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mJetPhiPhiMoment")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1781; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1781; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1781; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_97));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_97));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_97));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1781; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L90;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1784
 *             #self.complained.add("mJetPhiPhiMoment")
 *         else:
 *             self.mJetPhiPhiMoment_branch.SetAddress(<void*>&self.mJetPhiPhiMoment_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mJetPt"
 */
    __pyx_v_self->mJetPhiPhiMoment_branch->SetAddress(((void *)(&__pyx_v_self->mJetPhiPhiMoment_value)));
  }
  __pyx_L90:;

  /* "MuTauTree.pyx":1787
 * 
 *         #print "making mJetPt"
 *         self.mJetPt_branch = the_tree.GetBranch("mJetPt")             # <<<<<<<<<<<<<<
 *         #if not self.mJetPt_branch and "mJetPt" not in self.complained:
 *         if not self.mJetPt_branch and "mJetPt":
 */
  __pyx_v_self->mJetPt_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mJetPt);

  /* "MuTauTree.pyx":1789
 *         self.mJetPt_branch = the_tree.GetBranch("mJetPt")
 *         #if not self.mJetPt_branch and "mJetPt" not in self.complained:
 *         if not self.mJetPt_branch and "mJetPt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mJetPt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mJetPt")
 */
  __pyx_t_1 = (!(__pyx_v_self->mJetPt_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1790
 *         #if not self.mJetPt_branch and "mJetPt" not in self.complained:
 *         if not self.mJetPt_branch and "mJetPt":
 *             warnings.warn( "MuTauTree: Expected branch mJetPt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mJetPt")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1790; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1790; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1790; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_98));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_98));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_98));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1790; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L91;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1793
 *             #self.complained.add("mJetPt")
 *         else:
 *             self.mJetPt_branch.SetAddress(<void*>&self.mJetPt_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mL1Mu3EG5L3Filtered17"
 */
    __pyx_v_self->mJetPt_branch->SetAddress(((void *)(&__pyx_v_self->mJetPt_value)));
  }
  __pyx_L91:;

  /* "MuTauTree.pyx":1796
 * 
 *         #print "making mL1Mu3EG5L3Filtered17"
 *         self.mL1Mu3EG5L3Filtered17_branch = the_tree.GetBranch("mL1Mu3EG5L3Filtered17")             # <<<<<<<<<<<<<<
 *         #if not self.mL1Mu3EG5L3Filtered17_branch and "mL1Mu3EG5L3Filtered17" not in self.complained:
 *         if not self.mL1Mu3EG5L3Filtered17_branch and "mL1Mu3EG5L3Filtered17":
 */
  __pyx_v_self->mL1Mu3EG5L3Filtered17_branch = __pyx_v_the_tree->GetBranch(__pyx_k_99);

  /* "MuTauTree.pyx":1798
 *         self.mL1Mu3EG5L3Filtered17_branch = the_tree.GetBranch("mL1Mu3EG5L3Filtered17")
 *         #if not self.mL1Mu3EG5L3Filtered17_branch and "mL1Mu3EG5L3Filtered17" not in self.complained:
 *         if not self.mL1Mu3EG5L3Filtered17_branch and "mL1Mu3EG5L3Filtered17":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mL1Mu3EG5L3Filtered17 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mL1Mu3EG5L3Filtered17")
 */
  __pyx_t_2 = (!(__pyx_v_self->mL1Mu3EG5L3Filtered17_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1799
 *         #if not self.mL1Mu3EG5L3Filtered17_branch and "mL1Mu3EG5L3Filtered17" not in self.complained:
 *         if not self.mL1Mu3EG5L3Filtered17_branch and "mL1Mu3EG5L3Filtered17":
 *             warnings.warn( "MuTauTree: Expected branch mL1Mu3EG5L3Filtered17 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mL1Mu3EG5L3Filtered17")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1799; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1799; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1799; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_100));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_100));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_100));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1799; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L92;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1802
 *             #self.complained.add("mL1Mu3EG5L3Filtered17")
 *         else:
 *             self.mL1Mu3EG5L3Filtered17_branch.SetAddress(<void*>&self.mL1Mu3EG5L3Filtered17_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mL3fL1DoubleMu10MuOpenL1f0L2f10L3Filtered17"
 */
    __pyx_v_self->mL1Mu3EG5L3Filtered17_branch->SetAddress(((void *)(&__pyx_v_self->mL1Mu3EG5L3Filtered17_value)));
  }
  __pyx_L92:;

  /* "MuTauTree.pyx":1805
 * 
 *         #print "making mL3fL1DoubleMu10MuOpenL1f0L2f10L3Filtered17"
 *         self.mL3fL1DoubleMu10MuOpenL1f0L2f10L3Filtered17_branch = the_tree.GetBranch("mL3fL1DoubleMu10MuOpenL1f0L2f10L3Filtered17")             # <<<<<<<<<<<<<<
 *         #if not self.mL3fL1DoubleMu10MuOpenL1f0L2f10L3Filtered17_branch and "mL3fL1DoubleMu10MuOpenL1f0L2f10L3Filtered17" not in self.complained:
 *         if not self.mL3fL1DoubleMu10MuOpenL1f0L2f10L3Filtered17_branch and "mL3fL1DoubleMu10MuOpenL1f0L2f10L3Filtered17":
 */
  __pyx_v_self->mL3fL1DoubleMu10MuOpenL1f0L2f10L3Filtered17_branch = __pyx_v_the_tree->GetBranch(__pyx_k_101);

  /* "MuTauTree.pyx":1807
 *         self.mL3fL1DoubleMu10MuOpenL1f0L2f10L3Filtered17_branch = the_tree.GetBranch("mL3fL1DoubleMu10MuOpenL1f0L2f10L3Filtered17")
 *         #if not self.mL3fL1DoubleMu10MuOpenL1f0L2f10L3Filtered17_branch and "mL3fL1DoubleMu10MuOpenL1f0L2f10L3Filtered17" not in self.complained:
 *         if not self.mL3fL1DoubleMu10MuOpenL1f0L2f10L3Filtered17_branch and "mL3fL1DoubleMu10MuOpenL1f0L2f10L3Filtered17":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mL3fL1DoubleMu10MuOpenL1f0L2f10L3Filtered17 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mL3fL1DoubleMu10MuOpenL1f0L2f10L3Filtered17")
 */
  __pyx_t_1 = (!(__pyx_v_self->mL3fL1DoubleMu10MuOpenL1f0L2f10L3Filtered17_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1808
 *         #if not self.mL3fL1DoubleMu10MuOpenL1f0L2f10L3Filtered17_branch and "mL3fL1DoubleMu10MuOpenL1f0L2f10L3Filtered17" not in self.complained:
 *         if not self.mL3fL1DoubleMu10MuOpenL1f0L2f10L3Filtered17_branch and "mL3fL1DoubleMu10MuOpenL1f0L2f10L3Filtered17":
 *             warnings.warn( "MuTauTree: Expected branch mL3fL1DoubleMu10MuOpenL1f0L2f10L3Filtered17 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mL3fL1DoubleMu10MuOpenL1f0L2f10L3Filtered17")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1808; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1808; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1808; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_102));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_102));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_102));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1808; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L93;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1811
 *             #self.complained.add("mL3fL1DoubleMu10MuOpenL1f0L2f10L3Filtered17")
 *         else:
 *             self.mL3fL1DoubleMu10MuOpenL1f0L2f10L3Filtered17_branch.SetAddress(<void*>&self.mL3fL1DoubleMu10MuOpenL1f0L2f10L3Filtered17_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMass"
 */
    __pyx_v_self->mL3fL1DoubleMu10MuOpenL1f0L2f10L3Filtered17_branch->SetAddress(((void *)(&__pyx_v_self->mL3fL1DoubleMu10MuOpenL1f0L2f10L3Filtered17_value)));
  }
  __pyx_L93:;

  /* "MuTauTree.pyx":1814
 * 
 *         #print "making mMass"
 *         self.mMass_branch = the_tree.GetBranch("mMass")             # <<<<<<<<<<<<<<
 *         #if not self.mMass_branch and "mMass" not in self.complained:
 *         if not self.mMass_branch and "mMass":
 */
  __pyx_v_self->mMass_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mMass);

  /* "MuTauTree.pyx":1816
 *         self.mMass_branch = the_tree.GetBranch("mMass")
 *         #if not self.mMass_branch and "mMass" not in self.complained:
 *         if not self.mMass_branch and "mMass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMass")
 */
  __pyx_t_2 = (!(__pyx_v_self->mMass_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1817
 *         #if not self.mMass_branch and "mMass" not in self.complained:
 *         if not self.mMass_branch and "mMass":
 *             warnings.warn( "MuTauTree: Expected branch mMass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMass")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1817; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1817; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1817; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_103));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_103));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_103));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1817; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L94;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1820
 *             #self.complained.add("mMass")
 *         else:
 *             self.mMass_branch.SetAddress(<void*>&self.mMass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMatchedStations"
 */
    __pyx_v_self->mMass_branch->SetAddress(((void *)(&__pyx_v_self->mMass_value)));
  }
  __pyx_L94:;

  /* "MuTauTree.pyx":1823
 * 
 *         #print "making mMatchedStations"
 *         self.mMatchedStations_branch = the_tree.GetBranch("mMatchedStations")             # <<<<<<<<<<<<<<
 *         #if not self.mMatchedStations_branch and "mMatchedStations" not in self.complained:
 *         if not self.mMatchedStations_branch and "mMatchedStations":
 */
  __pyx_v_self->mMatchedStations_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mMatchedStations);

  /* "MuTauTree.pyx":1825
 *         self.mMatchedStations_branch = the_tree.GetBranch("mMatchedStations")
 *         #if not self.mMatchedStations_branch and "mMatchedStations" not in self.complained:
 *         if not self.mMatchedStations_branch and "mMatchedStations":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMatchedStations does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchedStations")
 */
  __pyx_t_1 = (!(__pyx_v_self->mMatchedStations_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1826
 *         #if not self.mMatchedStations_branch and "mMatchedStations" not in self.complained:
 *         if not self.mMatchedStations_branch and "mMatchedStations":
 *             warnings.warn( "MuTauTree: Expected branch mMatchedStations does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMatchedStations")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1826; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1826; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1826; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_104));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_104));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_104));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1826; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L95;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1829
 *             #self.complained.add("mMatchedStations")
 *         else:
 *             self.mMatchedStations_branch.SetAddress(<void*>&self.mMatchedStations_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMatchesDoubleMu2011Paths"
 */
    __pyx_v_self->mMatchedStations_branch->SetAddress(((void *)(&__pyx_v_self->mMatchedStations_value)));
  }
  __pyx_L95:;

  /* "MuTauTree.pyx":1832
 * 
 *         #print "making mMatchesDoubleMu2011Paths"
 *         self.mMatchesDoubleMu2011Paths_branch = the_tree.GetBranch("mMatchesDoubleMu2011Paths")             # <<<<<<<<<<<<<<
 *         #if not self.mMatchesDoubleMu2011Paths_branch and "mMatchesDoubleMu2011Paths" not in self.complained:
 *         if not self.mMatchesDoubleMu2011Paths_branch and "mMatchesDoubleMu2011Paths":
 */
  __pyx_v_self->mMatchesDoubleMu2011Paths_branch = __pyx_v_the_tree->GetBranch(__pyx_k_105);

  /* "MuTauTree.pyx":1834
 *         self.mMatchesDoubleMu2011Paths_branch = the_tree.GetBranch("mMatchesDoubleMu2011Paths")
 *         #if not self.mMatchesDoubleMu2011Paths_branch and "mMatchesDoubleMu2011Paths" not in self.complained:
 *         if not self.mMatchesDoubleMu2011Paths_branch and "mMatchesDoubleMu2011Paths":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMatchesDoubleMu2011Paths does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchesDoubleMu2011Paths")
 */
  __pyx_t_2 = (!(__pyx_v_self->mMatchesDoubleMu2011Paths_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1835
 *         #if not self.mMatchesDoubleMu2011Paths_branch and "mMatchesDoubleMu2011Paths" not in self.complained:
 *         if not self.mMatchesDoubleMu2011Paths_branch and "mMatchesDoubleMu2011Paths":
 *             warnings.warn( "MuTauTree: Expected branch mMatchesDoubleMu2011Paths does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMatchesDoubleMu2011Paths")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1835; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1835; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1835; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_106));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_106));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_106));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1835; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L96;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1838
 *             #self.complained.add("mMatchesDoubleMu2011Paths")
 *         else:
 *             self.mMatchesDoubleMu2011Paths_branch.SetAddress(<void*>&self.mMatchesDoubleMu2011Paths_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMatchesIsoMu24eta2p1"
 */
    __pyx_v_self->mMatchesDoubleMu2011Paths_branch->SetAddress(((void *)(&__pyx_v_self->mMatchesDoubleMu2011Paths_value)));
  }
  __pyx_L96:;

  /* "MuTauTree.pyx":1841
 * 
 *         #print "making mMatchesIsoMu24eta2p1"
 *         self.mMatchesIsoMu24eta2p1_branch = the_tree.GetBranch("mMatchesIsoMu24eta2p1")             # <<<<<<<<<<<<<<
 *         #if not self.mMatchesIsoMu24eta2p1_branch and "mMatchesIsoMu24eta2p1" not in self.complained:
 *         if not self.mMatchesIsoMu24eta2p1_branch and "mMatchesIsoMu24eta2p1":
 */
  __pyx_v_self->mMatchesIsoMu24eta2p1_branch = __pyx_v_the_tree->GetBranch(__pyx_k_107);

  /* "MuTauTree.pyx":1843
 *         self.mMatchesIsoMu24eta2p1_branch = the_tree.GetBranch("mMatchesIsoMu24eta2p1")
 *         #if not self.mMatchesIsoMu24eta2p1_branch and "mMatchesIsoMu24eta2p1" not in self.complained:
 *         if not self.mMatchesIsoMu24eta2p1_branch and "mMatchesIsoMu24eta2p1":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMatchesIsoMu24eta2p1 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchesIsoMu24eta2p1")
 */
  __pyx_t_1 = (!(__pyx_v_self->mMatchesIsoMu24eta2p1_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1844
 *         #if not self.mMatchesIsoMu24eta2p1_branch and "mMatchesIsoMu24eta2p1" not in self.complained:
 *         if not self.mMatchesIsoMu24eta2p1_branch and "mMatchesIsoMu24eta2p1":
 *             warnings.warn( "MuTauTree: Expected branch mMatchesIsoMu24eta2p1 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMatchesIsoMu24eta2p1")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1844; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1844; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1844; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_108));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_108));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_108));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1844; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L97;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1847
 *             #self.complained.add("mMatchesIsoMu24eta2p1")
 *         else:
 *             self.mMatchesIsoMu24eta2p1_branch.SetAddress(<void*>&self.mMatchesIsoMu24eta2p1_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMatchesIsoMuGroup"
 */
    __pyx_v_self->mMatchesIsoMu24eta2p1_branch->SetAddress(((void *)(&__pyx_v_self->mMatchesIsoMu24eta2p1_value)));
  }
  __pyx_L97:;

  /* "MuTauTree.pyx":1850
 * 
 *         #print "making mMatchesIsoMuGroup"
 *         self.mMatchesIsoMuGroup_branch = the_tree.GetBranch("mMatchesIsoMuGroup")             # <<<<<<<<<<<<<<
 *         #if not self.mMatchesIsoMuGroup_branch and "mMatchesIsoMuGroup" not in self.complained:
 *         if not self.mMatchesIsoMuGroup_branch and "mMatchesIsoMuGroup":
 */
  __pyx_v_self->mMatchesIsoMuGroup_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mMatchesIsoMuGroup);

  /* "MuTauTree.pyx":1852
 *         self.mMatchesIsoMuGroup_branch = the_tree.GetBranch("mMatchesIsoMuGroup")
 *         #if not self.mMatchesIsoMuGroup_branch and "mMatchesIsoMuGroup" not in self.complained:
 *         if not self.mMatchesIsoMuGroup_branch and "mMatchesIsoMuGroup":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMatchesIsoMuGroup does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchesIsoMuGroup")
 */
  __pyx_t_2 = (!(__pyx_v_self->mMatchesIsoMuGroup_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1853
 *         #if not self.mMatchesIsoMuGroup_branch and "mMatchesIsoMuGroup" not in self.complained:
 *         if not self.mMatchesIsoMuGroup_branch and "mMatchesIsoMuGroup":
 *             warnings.warn( "MuTauTree: Expected branch mMatchesIsoMuGroup does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMatchesIsoMuGroup")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1853; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1853; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1853; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_109));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_109));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_109));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1853; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L98;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1856
 *             #self.complained.add("mMatchesIsoMuGroup")
 *         else:
 *             self.mMatchesIsoMuGroup_branch.SetAddress(<void*>&self.mMatchesIsoMuGroup_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMatchesMu17Ele8Path"
 */
    __pyx_v_self->mMatchesIsoMuGroup_branch->SetAddress(((void *)(&__pyx_v_self->mMatchesIsoMuGroup_value)));
  }
  __pyx_L98:;

  /* "MuTauTree.pyx":1859
 * 
 *         #print "making mMatchesMu17Ele8Path"
 *         self.mMatchesMu17Ele8Path_branch = the_tree.GetBranch("mMatchesMu17Ele8Path")             # <<<<<<<<<<<<<<
 *         #if not self.mMatchesMu17Ele8Path_branch and "mMatchesMu17Ele8Path" not in self.complained:
 *         if not self.mMatchesMu17Ele8Path_branch and "mMatchesMu17Ele8Path":
 */
  __pyx_v_self->mMatchesMu17Ele8Path_branch = __pyx_v_the_tree->GetBranch(__pyx_k_110);

  /* "MuTauTree.pyx":1861
 *         self.mMatchesMu17Ele8Path_branch = the_tree.GetBranch("mMatchesMu17Ele8Path")
 *         #if not self.mMatchesMu17Ele8Path_branch and "mMatchesMu17Ele8Path" not in self.complained:
 *         if not self.mMatchesMu17Ele8Path_branch and "mMatchesMu17Ele8Path":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMatchesMu17Ele8Path does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchesMu17Ele8Path")
 */
  __pyx_t_1 = (!(__pyx_v_self->mMatchesMu17Ele8Path_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1862
 *         #if not self.mMatchesMu17Ele8Path_branch and "mMatchesMu17Ele8Path" not in self.complained:
 *         if not self.mMatchesMu17Ele8Path_branch and "mMatchesMu17Ele8Path":
 *             warnings.warn( "MuTauTree: Expected branch mMatchesMu17Ele8Path does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMatchesMu17Ele8Path")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1862; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1862; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1862; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_111));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_111));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_111));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1862; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L99;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1865
 *             #self.complained.add("mMatchesMu17Ele8Path")
 *         else:
 *             self.mMatchesMu17Ele8Path_branch.SetAddress(<void*>&self.mMatchesMu17Ele8Path_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMatchesMu17Mu8Path"
 */
    __pyx_v_self->mMatchesMu17Ele8Path_branch->SetAddress(((void *)(&__pyx_v_self->mMatchesMu17Ele8Path_value)));
  }
  __pyx_L99:;

  /* "MuTauTree.pyx":1868
 * 
 *         #print "making mMatchesMu17Mu8Path"
 *         self.mMatchesMu17Mu8Path_branch = the_tree.GetBranch("mMatchesMu17Mu8Path")             # <<<<<<<<<<<<<<
 *         #if not self.mMatchesMu17Mu8Path_branch and "mMatchesMu17Mu8Path" not in self.complained:
 *         if not self.mMatchesMu17Mu8Path_branch and "mMatchesMu17Mu8Path":
 */
  __pyx_v_self->mMatchesMu17Mu8Path_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mMatchesMu17Mu8Path);

  /* "MuTauTree.pyx":1870
 *         self.mMatchesMu17Mu8Path_branch = the_tree.GetBranch("mMatchesMu17Mu8Path")
 *         #if not self.mMatchesMu17Mu8Path_branch and "mMatchesMu17Mu8Path" not in self.complained:
 *         if not self.mMatchesMu17Mu8Path_branch and "mMatchesMu17Mu8Path":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMatchesMu17Mu8Path does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchesMu17Mu8Path")
 */
  __pyx_t_2 = (!(__pyx_v_self->mMatchesMu17Mu8Path_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1871
 *         #if not self.mMatchesMu17Mu8Path_branch and "mMatchesMu17Mu8Path" not in self.complained:
 *         if not self.mMatchesMu17Mu8Path_branch and "mMatchesMu17Mu8Path":
 *             warnings.warn( "MuTauTree: Expected branch mMatchesMu17Mu8Path does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMatchesMu17Mu8Path")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1871; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1871; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1871; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_112));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_112));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_112));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1871; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L100;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1874
 *             #self.complained.add("mMatchesMu17Mu8Path")
 *         else:
 *             self.mMatchesMu17Mu8Path_branch.SetAddress(<void*>&self.mMatchesMu17Mu8Path_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMatchesMu17TrkMu8Path"
 */
    __pyx_v_self->mMatchesMu17Mu8Path_branch->SetAddress(((void *)(&__pyx_v_self->mMatchesMu17Mu8Path_value)));
  }
  __pyx_L100:;

  /* "MuTauTree.pyx":1877
 * 
 *         #print "making mMatchesMu17TrkMu8Path"
 *         self.mMatchesMu17TrkMu8Path_branch = the_tree.GetBranch("mMatchesMu17TrkMu8Path")             # <<<<<<<<<<<<<<
 *         #if not self.mMatchesMu17TrkMu8Path_branch and "mMatchesMu17TrkMu8Path" not in self.complained:
 *         if not self.mMatchesMu17TrkMu8Path_branch and "mMatchesMu17TrkMu8Path":
 */
  __pyx_v_self->mMatchesMu17TrkMu8Path_branch = __pyx_v_the_tree->GetBranch(__pyx_k_113);

  /* "MuTauTree.pyx":1879
 *         self.mMatchesMu17TrkMu8Path_branch = the_tree.GetBranch("mMatchesMu17TrkMu8Path")
 *         #if not self.mMatchesMu17TrkMu8Path_branch and "mMatchesMu17TrkMu8Path" not in self.complained:
 *         if not self.mMatchesMu17TrkMu8Path_branch and "mMatchesMu17TrkMu8Path":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMatchesMu17TrkMu8Path does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchesMu17TrkMu8Path")
 */
  __pyx_t_1 = (!(__pyx_v_self->mMatchesMu17TrkMu8Path_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1880
 *         #if not self.mMatchesMu17TrkMu8Path_branch and "mMatchesMu17TrkMu8Path" not in self.complained:
 *         if not self.mMatchesMu17TrkMu8Path_branch and "mMatchesMu17TrkMu8Path":
 *             warnings.warn( "MuTauTree: Expected branch mMatchesMu17TrkMu8Path does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMatchesMu17TrkMu8Path")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1880; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1880; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1880; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_114));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_114));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_114));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1880; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L101;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1883
 *             #self.complained.add("mMatchesMu17TrkMu8Path")
 *         else:
 *             self.mMatchesMu17TrkMu8Path_branch.SetAddress(<void*>&self.mMatchesMu17TrkMu8Path_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMatchesMu8Ele17Path"
 */
    __pyx_v_self->mMatchesMu17TrkMu8Path_branch->SetAddress(((void *)(&__pyx_v_self->mMatchesMu17TrkMu8Path_value)));
  }
  __pyx_L101:;

  /* "MuTauTree.pyx":1886
 * 
 *         #print "making mMatchesMu8Ele17Path"
 *         self.mMatchesMu8Ele17Path_branch = the_tree.GetBranch("mMatchesMu8Ele17Path")             # <<<<<<<<<<<<<<
 *         #if not self.mMatchesMu8Ele17Path_branch and "mMatchesMu8Ele17Path" not in self.complained:
 *         if not self.mMatchesMu8Ele17Path_branch and "mMatchesMu8Ele17Path":
 */
  __pyx_v_self->mMatchesMu8Ele17Path_branch = __pyx_v_the_tree->GetBranch(__pyx_k_115);

  /* "MuTauTree.pyx":1888
 *         self.mMatchesMu8Ele17Path_branch = the_tree.GetBranch("mMatchesMu8Ele17Path")
 *         #if not self.mMatchesMu8Ele17Path_branch and "mMatchesMu8Ele17Path" not in self.complained:
 *         if not self.mMatchesMu8Ele17Path_branch and "mMatchesMu8Ele17Path":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMatchesMu8Ele17Path does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMatchesMu8Ele17Path")
 */
  __pyx_t_2 = (!(__pyx_v_self->mMatchesMu8Ele17Path_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1889
 *         #if not self.mMatchesMu8Ele17Path_branch and "mMatchesMu8Ele17Path" not in self.complained:
 *         if not self.mMatchesMu8Ele17Path_branch and "mMatchesMu8Ele17Path":
 *             warnings.warn( "MuTauTree: Expected branch mMatchesMu8Ele17Path does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMatchesMu8Ele17Path")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1889; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1889; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1889; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_116));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_116));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_116));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1889; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L102;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1892
 *             #self.complained.add("mMatchesMu8Ele17Path")
 *         else:
 *             self.mMatchesMu8Ele17Path_branch.SetAddress(<void*>&self.mMatchesMu8Ele17Path_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMtToMET"
 */
    __pyx_v_self->mMatchesMu8Ele17Path_branch->SetAddress(((void *)(&__pyx_v_self->mMatchesMu8Ele17Path_value)));
  }
  __pyx_L102:;

  /* "MuTauTree.pyx":1895
 * 
 *         #print "making mMtToMET"
 *         self.mMtToMET_branch = the_tree.GetBranch("mMtToMET")             # <<<<<<<<<<<<<<
 *         #if not self.mMtToMET_branch and "mMtToMET" not in self.complained:
 *         if not self.mMtToMET_branch and "mMtToMET":
 */
  __pyx_v_self->mMtToMET_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mMtToMET);

  /* "MuTauTree.pyx":1897
 *         self.mMtToMET_branch = the_tree.GetBranch("mMtToMET")
 *         #if not self.mMtToMET_branch and "mMtToMET" not in self.complained:
 *         if not self.mMtToMET_branch and "mMtToMET":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMtToMET does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMtToMET")
 */
  __pyx_t_1 = (!(__pyx_v_self->mMtToMET_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1898
 *         #if not self.mMtToMET_branch and "mMtToMET" not in self.complained:
 *         if not self.mMtToMET_branch and "mMtToMET":
 *             warnings.warn( "MuTauTree: Expected branch mMtToMET does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMtToMET")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1898; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1898; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1898; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_117));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_117));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_117));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1898; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L103;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1901
 *             #self.complained.add("mMtToMET")
 *         else:
 *             self.mMtToMET_branch.SetAddress(<void*>&self.mMtToMET_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMtToMVAMET"
 */
    __pyx_v_self->mMtToMET_branch->SetAddress(((void *)(&__pyx_v_self->mMtToMET_value)));
  }
  __pyx_L103:;

  /* "MuTauTree.pyx":1904
 * 
 *         #print "making mMtToMVAMET"
 *         self.mMtToMVAMET_branch = the_tree.GetBranch("mMtToMVAMET")             # <<<<<<<<<<<<<<
 *         #if not self.mMtToMVAMET_branch and "mMtToMVAMET" not in self.complained:
 *         if not self.mMtToMVAMET_branch and "mMtToMVAMET":
 */
  __pyx_v_self->mMtToMVAMET_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mMtToMVAMET);

  /* "MuTauTree.pyx":1906
 *         self.mMtToMVAMET_branch = the_tree.GetBranch("mMtToMVAMET")
 *         #if not self.mMtToMVAMET_branch and "mMtToMVAMET" not in self.complained:
 *         if not self.mMtToMVAMET_branch and "mMtToMVAMET":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMtToMVAMET does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMtToMVAMET")
 */
  __pyx_t_2 = (!(__pyx_v_self->mMtToMVAMET_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1907
 *         #if not self.mMtToMVAMET_branch and "mMtToMVAMET" not in self.complained:
 *         if not self.mMtToMVAMET_branch and "mMtToMVAMET":
 *             warnings.warn( "MuTauTree: Expected branch mMtToMVAMET does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMtToMVAMET")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1907; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1907; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1907; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_118));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_118));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_118));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1907; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L104;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1910
 *             #self.complained.add("mMtToMVAMET")
 *         else:
 *             self.mMtToMVAMET_branch.SetAddress(<void*>&self.mMtToMVAMET_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMtToPFMET"
 */
    __pyx_v_self->mMtToMVAMET_branch->SetAddress(((void *)(&__pyx_v_self->mMtToMVAMET_value)));
  }
  __pyx_L104:;

  /* "MuTauTree.pyx":1913
 * 
 *         #print "making mMtToPFMET"
 *         self.mMtToPFMET_branch = the_tree.GetBranch("mMtToPFMET")             # <<<<<<<<<<<<<<
 *         #if not self.mMtToPFMET_branch and "mMtToPFMET" not in self.complained:
 *         if not self.mMtToPFMET_branch and "mMtToPFMET":
 */
  __pyx_v_self->mMtToPFMET_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mMtToPFMET);

  /* "MuTauTree.pyx":1915
 *         self.mMtToPFMET_branch = the_tree.GetBranch("mMtToPFMET")
 *         #if not self.mMtToPFMET_branch and "mMtToPFMET" not in self.complained:
 *         if not self.mMtToPFMET_branch and "mMtToPFMET":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMtToPFMET does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMtToPFMET")
 */
  __pyx_t_1 = (!(__pyx_v_self->mMtToPFMET_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1916
 *         #if not self.mMtToPFMET_branch and "mMtToPFMET" not in self.complained:
 *         if not self.mMtToPFMET_branch and "mMtToPFMET":
 *             warnings.warn( "MuTauTree: Expected branch mMtToPFMET does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMtToPFMET")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1916; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1916; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1916; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_119));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_119));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_119));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1916; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L105;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1919
 *             #self.complained.add("mMtToPFMET")
 *         else:
 *             self.mMtToPFMET_branch.SetAddress(<void*>&self.mMtToPFMET_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMtToPfMet_Ty1"
 */
    __pyx_v_self->mMtToPFMET_branch->SetAddress(((void *)(&__pyx_v_self->mMtToPFMET_value)));
  }
  __pyx_L105:;

  /* "MuTauTree.pyx":1922
 * 
 *         #print "making mMtToPfMet_Ty1"
 *         self.mMtToPfMet_Ty1_branch = the_tree.GetBranch("mMtToPfMet_Ty1")             # <<<<<<<<<<<<<<
 *         #if not self.mMtToPfMet_Ty1_branch and "mMtToPfMet_Ty1" not in self.complained:
 *         if not self.mMtToPfMet_Ty1_branch and "mMtToPfMet_Ty1":
 */
  __pyx_v_self->mMtToPfMet_Ty1_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mMtToPfMet_Ty1);

  /* "MuTauTree.pyx":1924
 *         self.mMtToPfMet_Ty1_branch = the_tree.GetBranch("mMtToPfMet_Ty1")
 *         #if not self.mMtToPfMet_Ty1_branch and "mMtToPfMet_Ty1" not in self.complained:
 *         if not self.mMtToPfMet_Ty1_branch and "mMtToPfMet_Ty1":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMtToPfMet_Ty1 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMtToPfMet_Ty1")
 */
  __pyx_t_2 = (!(__pyx_v_self->mMtToPfMet_Ty1_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1925
 *         #if not self.mMtToPfMet_Ty1_branch and "mMtToPfMet_Ty1" not in self.complained:
 *         if not self.mMtToPfMet_Ty1_branch and "mMtToPfMet_Ty1":
 *             warnings.warn( "MuTauTree: Expected branch mMtToPfMet_Ty1 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMtToPfMet_Ty1")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1925; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1925; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1925; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_120));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_120));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_120));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1925; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L106;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1928
 *             #self.complained.add("mMtToPfMet_Ty1")
 *         else:
 *             self.mMtToPfMet_Ty1_branch.SetAddress(<void*>&self.mMtToPfMet_Ty1_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMtToPfMet_jes"
 */
    __pyx_v_self->mMtToPfMet_Ty1_branch->SetAddress(((void *)(&__pyx_v_self->mMtToPfMet_Ty1_value)));
  }
  __pyx_L106:;

  /* "MuTauTree.pyx":1931
 * 
 *         #print "making mMtToPfMet_jes"
 *         self.mMtToPfMet_jes_branch = the_tree.GetBranch("mMtToPfMet_jes")             # <<<<<<<<<<<<<<
 *         #if not self.mMtToPfMet_jes_branch and "mMtToPfMet_jes" not in self.complained:
 *         if not self.mMtToPfMet_jes_branch and "mMtToPfMet_jes":
 */
  __pyx_v_self->mMtToPfMet_jes_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mMtToPfMet_jes);

  /* "MuTauTree.pyx":1933
 *         self.mMtToPfMet_jes_branch = the_tree.GetBranch("mMtToPfMet_jes")
 *         #if not self.mMtToPfMet_jes_branch and "mMtToPfMet_jes" not in self.complained:
 *         if not self.mMtToPfMet_jes_branch and "mMtToPfMet_jes":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMtToPfMet_jes does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMtToPfMet_jes")
 */
  __pyx_t_1 = (!(__pyx_v_self->mMtToPfMet_jes_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1934
 *         #if not self.mMtToPfMet_jes_branch and "mMtToPfMet_jes" not in self.complained:
 *         if not self.mMtToPfMet_jes_branch and "mMtToPfMet_jes":
 *             warnings.warn( "MuTauTree: Expected branch mMtToPfMet_jes does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMtToPfMet_jes")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1934; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1934; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1934; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_121));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_121));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_121));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1934; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L107;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1937
 *             #self.complained.add("mMtToPfMet_jes")
 *         else:
 *             self.mMtToPfMet_jes_branch.SetAddress(<void*>&self.mMtToPfMet_jes_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMtToPfMet_mes"
 */
    __pyx_v_self->mMtToPfMet_jes_branch->SetAddress(((void *)(&__pyx_v_self->mMtToPfMet_jes_value)));
  }
  __pyx_L107:;

  /* "MuTauTree.pyx":1940
 * 
 *         #print "making mMtToPfMet_mes"
 *         self.mMtToPfMet_mes_branch = the_tree.GetBranch("mMtToPfMet_mes")             # <<<<<<<<<<<<<<
 *         #if not self.mMtToPfMet_mes_branch and "mMtToPfMet_mes" not in self.complained:
 *         if not self.mMtToPfMet_mes_branch and "mMtToPfMet_mes":
 */
  __pyx_v_self->mMtToPfMet_mes_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mMtToPfMet_mes);

  /* "MuTauTree.pyx":1942
 *         self.mMtToPfMet_mes_branch = the_tree.GetBranch("mMtToPfMet_mes")
 *         #if not self.mMtToPfMet_mes_branch and "mMtToPfMet_mes" not in self.complained:
 *         if not self.mMtToPfMet_mes_branch and "mMtToPfMet_mes":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMtToPfMet_mes does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMtToPfMet_mes")
 */
  __pyx_t_2 = (!(__pyx_v_self->mMtToPfMet_mes_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1943
 *         #if not self.mMtToPfMet_mes_branch and "mMtToPfMet_mes" not in self.complained:
 *         if not self.mMtToPfMet_mes_branch and "mMtToPfMet_mes":
 *             warnings.warn( "MuTauTree: Expected branch mMtToPfMet_mes does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMtToPfMet_mes")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1943; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1943; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1943; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_122));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_122));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_122));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1943; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L108;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1946
 *             #self.complained.add("mMtToPfMet_mes")
 *         else:
 *             self.mMtToPfMet_mes_branch.SetAddress(<void*>&self.mMtToPfMet_mes_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMtToPfMet_tes"
 */
    __pyx_v_self->mMtToPfMet_mes_branch->SetAddress(((void *)(&__pyx_v_self->mMtToPfMet_mes_value)));
  }
  __pyx_L108:;

  /* "MuTauTree.pyx":1949
 * 
 *         #print "making mMtToPfMet_tes"
 *         self.mMtToPfMet_tes_branch = the_tree.GetBranch("mMtToPfMet_tes")             # <<<<<<<<<<<<<<
 *         #if not self.mMtToPfMet_tes_branch and "mMtToPfMet_tes" not in self.complained:
 *         if not self.mMtToPfMet_tes_branch and "mMtToPfMet_tes":
 */
  __pyx_v_self->mMtToPfMet_tes_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mMtToPfMet_tes);

  /* "MuTauTree.pyx":1951
 *         self.mMtToPfMet_tes_branch = the_tree.GetBranch("mMtToPfMet_tes")
 *         #if not self.mMtToPfMet_tes_branch and "mMtToPfMet_tes" not in self.complained:
 *         if not self.mMtToPfMet_tes_branch and "mMtToPfMet_tes":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMtToPfMet_tes does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMtToPfMet_tes")
 */
  __pyx_t_1 = (!(__pyx_v_self->mMtToPfMet_tes_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1952
 *         #if not self.mMtToPfMet_tes_branch and "mMtToPfMet_tes" not in self.complained:
 *         if not self.mMtToPfMet_tes_branch and "mMtToPfMet_tes":
 *             warnings.warn( "MuTauTree: Expected branch mMtToPfMet_tes does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMtToPfMet_tes")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1952; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1952; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1952; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_123));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_123));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_123));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1952; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L109;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1955
 *             #self.complained.add("mMtToPfMet_tes")
 *         else:
 *             self.mMtToPfMet_tes_branch.SetAddress(<void*>&self.mMtToPfMet_tes_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMtToPfMet_ues"
 */
    __pyx_v_self->mMtToPfMet_tes_branch->SetAddress(((void *)(&__pyx_v_self->mMtToPfMet_tes_value)));
  }
  __pyx_L109:;

  /* "MuTauTree.pyx":1958
 * 
 *         #print "making mMtToPfMet_ues"
 *         self.mMtToPfMet_ues_branch = the_tree.GetBranch("mMtToPfMet_ues")             # <<<<<<<<<<<<<<
 *         #if not self.mMtToPfMet_ues_branch and "mMtToPfMet_ues" not in self.complained:
 *         if not self.mMtToPfMet_ues_branch and "mMtToPfMet_ues":
 */
  __pyx_v_self->mMtToPfMet_ues_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mMtToPfMet_ues);

  /* "MuTauTree.pyx":1960
 *         self.mMtToPfMet_ues_branch = the_tree.GetBranch("mMtToPfMet_ues")
 *         #if not self.mMtToPfMet_ues_branch and "mMtToPfMet_ues" not in self.complained:
 *         if not self.mMtToPfMet_ues_branch and "mMtToPfMet_ues":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMtToPfMet_ues does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMtToPfMet_ues")
 */
  __pyx_t_2 = (!(__pyx_v_self->mMtToPfMet_ues_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1961
 *         #if not self.mMtToPfMet_ues_branch and "mMtToPfMet_ues" not in self.complained:
 *         if not self.mMtToPfMet_ues_branch and "mMtToPfMet_ues":
 *             warnings.warn( "MuTauTree: Expected branch mMtToPfMet_ues does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMtToPfMet_ues")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1961; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1961; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1961; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_124));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_124));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_124));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1961; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L110;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1964
 *             #self.complained.add("mMtToPfMet_ues")
 *         else:
 *             self.mMtToPfMet_ues_branch.SetAddress(<void*>&self.mMtToPfMet_ues_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMu17Ele8dZFilter"
 */
    __pyx_v_self->mMtToPfMet_ues_branch->SetAddress(((void *)(&__pyx_v_self->mMtToPfMet_ues_value)));
  }
  __pyx_L110:;

  /* "MuTauTree.pyx":1967
 * 
 *         #print "making mMu17Ele8dZFilter"
 *         self.mMu17Ele8dZFilter_branch = the_tree.GetBranch("mMu17Ele8dZFilter")             # <<<<<<<<<<<<<<
 *         #if not self.mMu17Ele8dZFilter_branch and "mMu17Ele8dZFilter" not in self.complained:
 *         if not self.mMu17Ele8dZFilter_branch and "mMu17Ele8dZFilter":
 */
  __pyx_v_self->mMu17Ele8dZFilter_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mMu17Ele8dZFilter);

  /* "MuTauTree.pyx":1969
 *         self.mMu17Ele8dZFilter_branch = the_tree.GetBranch("mMu17Ele8dZFilter")
 *         #if not self.mMu17Ele8dZFilter_branch and "mMu17Ele8dZFilter" not in self.complained:
 *         if not self.mMu17Ele8dZFilter_branch and "mMu17Ele8dZFilter":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMu17Ele8dZFilter does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMu17Ele8dZFilter")
 */
  __pyx_t_1 = (!(__pyx_v_self->mMu17Ele8dZFilter_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1970
 *         #if not self.mMu17Ele8dZFilter_branch and "mMu17Ele8dZFilter" not in self.complained:
 *         if not self.mMu17Ele8dZFilter_branch and "mMu17Ele8dZFilter":
 *             warnings.warn( "MuTauTree: Expected branch mMu17Ele8dZFilter does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMu17Ele8dZFilter")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1970; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1970; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1970; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_125));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_125));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_125));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1970; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L111;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1973
 *             #self.complained.add("mMu17Ele8dZFilter")
 *         else:
 *             self.mMu17Ele8dZFilter_branch.SetAddress(<void*>&self.mMu17Ele8dZFilter_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mMuonHits"
 */
    __pyx_v_self->mMu17Ele8dZFilter_branch->SetAddress(((void *)(&__pyx_v_self->mMu17Ele8dZFilter_value)));
  }
  __pyx_L111:;

  /* "MuTauTree.pyx":1976
 * 
 *         #print "making mMuonHits"
 *         self.mMuonHits_branch = the_tree.GetBranch("mMuonHits")             # <<<<<<<<<<<<<<
 *         #if not self.mMuonHits_branch and "mMuonHits" not in self.complained:
 *         if not self.mMuonHits_branch and "mMuonHits":
 */
  __pyx_v_self->mMuonHits_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mMuonHits);

  /* "MuTauTree.pyx":1978
 *         self.mMuonHits_branch = the_tree.GetBranch("mMuonHits")
 *         #if not self.mMuonHits_branch and "mMuonHits" not in self.complained:
 *         if not self.mMuonHits_branch and "mMuonHits":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mMuonHits does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mMuonHits")
 */
  __pyx_t_2 = (!(__pyx_v_self->mMuonHits_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1979
 *         #if not self.mMuonHits_branch and "mMuonHits" not in self.complained:
 *         if not self.mMuonHits_branch and "mMuonHits":
 *             warnings.warn( "MuTauTree: Expected branch mMuonHits does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mMuonHits")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1979; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1979; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1979; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_126));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_126));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_126));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1979; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L112;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1982
 *             #self.complained.add("mMuonHits")
 *         else:
 *             self.mMuonHits_branch.SetAddress(<void*>&self.mMuonHits_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mNormTrkChi2"
 */
    __pyx_v_self->mMuonHits_branch->SetAddress(((void *)(&__pyx_v_self->mMuonHits_value)));
  }
  __pyx_L112:;

  /* "MuTauTree.pyx":1985
 * 
 *         #print "making mNormTrkChi2"
 *         self.mNormTrkChi2_branch = the_tree.GetBranch("mNormTrkChi2")             # <<<<<<<<<<<<<<
 *         #if not self.mNormTrkChi2_branch and "mNormTrkChi2" not in self.complained:
 *         if not self.mNormTrkChi2_branch and "mNormTrkChi2":
 */
  __pyx_v_self->mNormTrkChi2_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mNormTrkChi2);

  /* "MuTauTree.pyx":1987
 *         self.mNormTrkChi2_branch = the_tree.GetBranch("mNormTrkChi2")
 *         #if not self.mNormTrkChi2_branch and "mNormTrkChi2" not in self.complained:
 *         if not self.mNormTrkChi2_branch and "mNormTrkChi2":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mNormTrkChi2 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mNormTrkChi2")
 */
  __pyx_t_1 = (!(__pyx_v_self->mNormTrkChi2_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":1988
 *         #if not self.mNormTrkChi2_branch and "mNormTrkChi2" not in self.complained:
 *         if not self.mNormTrkChi2_branch and "mNormTrkChi2":
 *             warnings.warn( "MuTauTree: Expected branch mNormTrkChi2 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mNormTrkChi2")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1988; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1988; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1988; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_127));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_127));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_127));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1988; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L113;
  }
  /*else*/ {

    /* "MuTauTree.pyx":1991
 *             #self.complained.add("mNormTrkChi2")
 *         else:
 *             self.mNormTrkChi2_branch.SetAddress(<void*>&self.mNormTrkChi2_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mPFChargedIso"
 */
    __pyx_v_self->mNormTrkChi2_branch->SetAddress(((void *)(&__pyx_v_self->mNormTrkChi2_value)));
  }
  __pyx_L113:;

  /* "MuTauTree.pyx":1994
 * 
 *         #print "making mPFChargedIso"
 *         self.mPFChargedIso_branch = the_tree.GetBranch("mPFChargedIso")             # <<<<<<<<<<<<<<
 *         #if not self.mPFChargedIso_branch and "mPFChargedIso" not in self.complained:
 *         if not self.mPFChargedIso_branch and "mPFChargedIso":
 */
  __pyx_v_self->mPFChargedIso_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mPFChargedIso);

  /* "MuTauTree.pyx":1996
 *         self.mPFChargedIso_branch = the_tree.GetBranch("mPFChargedIso")
 *         #if not self.mPFChargedIso_branch and "mPFChargedIso" not in self.complained:
 *         if not self.mPFChargedIso_branch and "mPFChargedIso":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mPFChargedIso does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPFChargedIso")
 */
  __pyx_t_2 = (!(__pyx_v_self->mPFChargedIso_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":1997
 *         #if not self.mPFChargedIso_branch and "mPFChargedIso" not in self.complained:
 *         if not self.mPFChargedIso_branch and "mPFChargedIso":
 *             warnings.warn( "MuTauTree: Expected branch mPFChargedIso does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mPFChargedIso")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1997; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1997; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1997; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_128));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_128));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_128));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1997; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L114;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2000
 *             #self.complained.add("mPFChargedIso")
 *         else:
 *             self.mPFChargedIso_branch.SetAddress(<void*>&self.mPFChargedIso_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mPFIDTight"
 */
    __pyx_v_self->mPFChargedIso_branch->SetAddress(((void *)(&__pyx_v_self->mPFChargedIso_value)));
  }
  __pyx_L114:;

  /* "MuTauTree.pyx":2003
 * 
 *         #print "making mPFIDTight"
 *         self.mPFIDTight_branch = the_tree.GetBranch("mPFIDTight")             # <<<<<<<<<<<<<<
 *         #if not self.mPFIDTight_branch and "mPFIDTight" not in self.complained:
 *         if not self.mPFIDTight_branch and "mPFIDTight":
 */
  __pyx_v_self->mPFIDTight_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mPFIDTight);

  /* "MuTauTree.pyx":2005
 *         self.mPFIDTight_branch = the_tree.GetBranch("mPFIDTight")
 *         #if not self.mPFIDTight_branch and "mPFIDTight" not in self.complained:
 *         if not self.mPFIDTight_branch and "mPFIDTight":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mPFIDTight does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPFIDTight")
 */
  __pyx_t_1 = (!(__pyx_v_self->mPFIDTight_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2006
 *         #if not self.mPFIDTight_branch and "mPFIDTight" not in self.complained:
 *         if not self.mPFIDTight_branch and "mPFIDTight":
 *             warnings.warn( "MuTauTree: Expected branch mPFIDTight does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mPFIDTight")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2006; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2006; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2006; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_129));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_129));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_129));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2006; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L115;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2009
 *             #self.complained.add("mPFIDTight")
 *         else:
 *             self.mPFIDTight_branch.SetAddress(<void*>&self.mPFIDTight_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mPFNeutralIso"
 */
    __pyx_v_self->mPFIDTight_branch->SetAddress(((void *)(&__pyx_v_self->mPFIDTight_value)));
  }
  __pyx_L115:;

  /* "MuTauTree.pyx":2012
 * 
 *         #print "making mPFNeutralIso"
 *         self.mPFNeutralIso_branch = the_tree.GetBranch("mPFNeutralIso")             # <<<<<<<<<<<<<<
 *         #if not self.mPFNeutralIso_branch and "mPFNeutralIso" not in self.complained:
 *         if not self.mPFNeutralIso_branch and "mPFNeutralIso":
 */
  __pyx_v_self->mPFNeutralIso_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mPFNeutralIso);

  /* "MuTauTree.pyx":2014
 *         self.mPFNeutralIso_branch = the_tree.GetBranch("mPFNeutralIso")
 *         #if not self.mPFNeutralIso_branch and "mPFNeutralIso" not in self.complained:
 *         if not self.mPFNeutralIso_branch and "mPFNeutralIso":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mPFNeutralIso does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPFNeutralIso")
 */
  __pyx_t_2 = (!(__pyx_v_self->mPFNeutralIso_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2015
 *         #if not self.mPFNeutralIso_branch and "mPFNeutralIso" not in self.complained:
 *         if not self.mPFNeutralIso_branch and "mPFNeutralIso":
 *             warnings.warn( "MuTauTree: Expected branch mPFNeutralIso does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mPFNeutralIso")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2015; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2015; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2015; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_130));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_130));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_130));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2015; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L116;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2018
 *             #self.complained.add("mPFNeutralIso")
 *         else:
 *             self.mPFNeutralIso_branch.SetAddress(<void*>&self.mPFNeutralIso_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mPFPUChargedIso"
 */
    __pyx_v_self->mPFNeutralIso_branch->SetAddress(((void *)(&__pyx_v_self->mPFNeutralIso_value)));
  }
  __pyx_L116:;

  /* "MuTauTree.pyx":2021
 * 
 *         #print "making mPFPUChargedIso"
 *         self.mPFPUChargedIso_branch = the_tree.GetBranch("mPFPUChargedIso")             # <<<<<<<<<<<<<<
 *         #if not self.mPFPUChargedIso_branch and "mPFPUChargedIso" not in self.complained:
 *         if not self.mPFPUChargedIso_branch and "mPFPUChargedIso":
 */
  __pyx_v_self->mPFPUChargedIso_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mPFPUChargedIso);

  /* "MuTauTree.pyx":2023
 *         self.mPFPUChargedIso_branch = the_tree.GetBranch("mPFPUChargedIso")
 *         #if not self.mPFPUChargedIso_branch and "mPFPUChargedIso" not in self.complained:
 *         if not self.mPFPUChargedIso_branch and "mPFPUChargedIso":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mPFPUChargedIso does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPFPUChargedIso")
 */
  __pyx_t_1 = (!(__pyx_v_self->mPFPUChargedIso_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2024
 *         #if not self.mPFPUChargedIso_branch and "mPFPUChargedIso" not in self.complained:
 *         if not self.mPFPUChargedIso_branch and "mPFPUChargedIso":
 *             warnings.warn( "MuTauTree: Expected branch mPFPUChargedIso does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mPFPUChargedIso")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2024; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2024; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2024; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_131));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_131));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_131));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2024; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L117;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2027
 *             #self.complained.add("mPFPUChargedIso")
 *         else:
 *             self.mPFPUChargedIso_branch.SetAddress(<void*>&self.mPFPUChargedIso_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mPFPhotonIso"
 */
    __pyx_v_self->mPFPUChargedIso_branch->SetAddress(((void *)(&__pyx_v_self->mPFPUChargedIso_value)));
  }
  __pyx_L117:;

  /* "MuTauTree.pyx":2030
 * 
 *         #print "making mPFPhotonIso"
 *         self.mPFPhotonIso_branch = the_tree.GetBranch("mPFPhotonIso")             # <<<<<<<<<<<<<<
 *         #if not self.mPFPhotonIso_branch and "mPFPhotonIso" not in self.complained:
 *         if not self.mPFPhotonIso_branch and "mPFPhotonIso":
 */
  __pyx_v_self->mPFPhotonIso_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mPFPhotonIso);

  /* "MuTauTree.pyx":2032
 *         self.mPFPhotonIso_branch = the_tree.GetBranch("mPFPhotonIso")
 *         #if not self.mPFPhotonIso_branch and "mPFPhotonIso" not in self.complained:
 *         if not self.mPFPhotonIso_branch and "mPFPhotonIso":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mPFPhotonIso does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPFPhotonIso")
 */
  __pyx_t_2 = (!(__pyx_v_self->mPFPhotonIso_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2033
 *         #if not self.mPFPhotonIso_branch and "mPFPhotonIso" not in self.complained:
 *         if not self.mPFPhotonIso_branch and "mPFPhotonIso":
 *             warnings.warn( "MuTauTree: Expected branch mPFPhotonIso does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mPFPhotonIso")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2033; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2033; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2033; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_132));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_132));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_132));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2033; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L118;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2036
 *             #self.complained.add("mPFPhotonIso")
 *         else:
 *             self.mPFPhotonIso_branch.SetAddress(<void*>&self.mPFPhotonIso_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mPVDXY"
 */
    __pyx_v_self->mPFPhotonIso_branch->SetAddress(((void *)(&__pyx_v_self->mPFPhotonIso_value)));
  }
  __pyx_L118:;

  /* "MuTauTree.pyx":2039
 * 
 *         #print "making mPVDXY"
 *         self.mPVDXY_branch = the_tree.GetBranch("mPVDXY")             # <<<<<<<<<<<<<<
 *         #if not self.mPVDXY_branch and "mPVDXY" not in self.complained:
 *         if not self.mPVDXY_branch and "mPVDXY":
 */
  __pyx_v_self->mPVDXY_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mPVDXY);

  /* "MuTauTree.pyx":2041
 *         self.mPVDXY_branch = the_tree.GetBranch("mPVDXY")
 *         #if not self.mPVDXY_branch and "mPVDXY" not in self.complained:
 *         if not self.mPVDXY_branch and "mPVDXY":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mPVDXY does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPVDXY")
 */
  __pyx_t_1 = (!(__pyx_v_self->mPVDXY_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2042
 *         #if not self.mPVDXY_branch and "mPVDXY" not in self.complained:
 *         if not self.mPVDXY_branch and "mPVDXY":
 *             warnings.warn( "MuTauTree: Expected branch mPVDXY does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mPVDXY")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2042; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2042; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2042; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_133));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_133));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_133));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2042; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L119;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2045
 *             #self.complained.add("mPVDXY")
 *         else:
 *             self.mPVDXY_branch.SetAddress(<void*>&self.mPVDXY_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mPVDZ"
 */
    __pyx_v_self->mPVDXY_branch->SetAddress(((void *)(&__pyx_v_self->mPVDXY_value)));
  }
  __pyx_L119:;

  /* "MuTauTree.pyx":2048
 * 
 *         #print "making mPVDZ"
 *         self.mPVDZ_branch = the_tree.GetBranch("mPVDZ")             # <<<<<<<<<<<<<<
 *         #if not self.mPVDZ_branch and "mPVDZ" not in self.complained:
 *         if not self.mPVDZ_branch and "mPVDZ":
 */
  __pyx_v_self->mPVDZ_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mPVDZ);

  /* "MuTauTree.pyx":2050
 *         self.mPVDZ_branch = the_tree.GetBranch("mPVDZ")
 *         #if not self.mPVDZ_branch and "mPVDZ" not in self.complained:
 *         if not self.mPVDZ_branch and "mPVDZ":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mPVDZ does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPVDZ")
 */
  __pyx_t_2 = (!(__pyx_v_self->mPVDZ_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2051
 *         #if not self.mPVDZ_branch and "mPVDZ" not in self.complained:
 *         if not self.mPVDZ_branch and "mPVDZ":
 *             warnings.warn( "MuTauTree: Expected branch mPVDZ does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mPVDZ")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2051; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2051; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2051; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_134));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_134));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_134));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2051; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L120;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2054
 *             #self.complained.add("mPVDZ")
 *         else:
 *             self.mPVDZ_branch.SetAddress(<void*>&self.mPVDZ_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mPhi"
 */
    __pyx_v_self->mPVDZ_branch->SetAddress(((void *)(&__pyx_v_self->mPVDZ_value)));
  }
  __pyx_L120:;

  /* "MuTauTree.pyx":2057
 * 
 *         #print "making mPhi"
 *         self.mPhi_branch = the_tree.GetBranch("mPhi")             # <<<<<<<<<<<<<<
 *         #if not self.mPhi_branch and "mPhi" not in self.complained:
 *         if not self.mPhi_branch and "mPhi":
 */
  __pyx_v_self->mPhi_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mPhi);

  /* "MuTauTree.pyx":2059
 *         self.mPhi_branch = the_tree.GetBranch("mPhi")
 *         #if not self.mPhi_branch and "mPhi" not in self.complained:
 *         if not self.mPhi_branch and "mPhi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mPhi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPhi")
 */
  __pyx_t_1 = (!(__pyx_v_self->mPhi_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2060
 *         #if not self.mPhi_branch and "mPhi" not in self.complained:
 *         if not self.mPhi_branch and "mPhi":
 *             warnings.warn( "MuTauTree: Expected branch mPhi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mPhi")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2060; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2060; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2060; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_135));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_135));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_135));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2060; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L121;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2063
 *             #self.complained.add("mPhi")
 *         else:
 *             self.mPhi_branch.SetAddress(<void*>&self.mPhi_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mPhiRochCor2011A"
 */
    __pyx_v_self->mPhi_branch->SetAddress(((void *)(&__pyx_v_self->mPhi_value)));
  }
  __pyx_L121:;

  /* "MuTauTree.pyx":2066
 * 
 *         #print "making mPhiRochCor2011A"
 *         self.mPhiRochCor2011A_branch = the_tree.GetBranch("mPhiRochCor2011A")             # <<<<<<<<<<<<<<
 *         #if not self.mPhiRochCor2011A_branch and "mPhiRochCor2011A" not in self.complained:
 *         if not self.mPhiRochCor2011A_branch and "mPhiRochCor2011A":
 */
  __pyx_v_self->mPhiRochCor2011A_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mPhiRochCor2011A);

  /* "MuTauTree.pyx":2068
 *         self.mPhiRochCor2011A_branch = the_tree.GetBranch("mPhiRochCor2011A")
 *         #if not self.mPhiRochCor2011A_branch and "mPhiRochCor2011A" not in self.complained:
 *         if not self.mPhiRochCor2011A_branch and "mPhiRochCor2011A":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mPhiRochCor2011A does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPhiRochCor2011A")
 */
  __pyx_t_2 = (!(__pyx_v_self->mPhiRochCor2011A_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2069
 *         #if not self.mPhiRochCor2011A_branch and "mPhiRochCor2011A" not in self.complained:
 *         if not self.mPhiRochCor2011A_branch and "mPhiRochCor2011A":
 *             warnings.warn( "MuTauTree: Expected branch mPhiRochCor2011A does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mPhiRochCor2011A")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2069; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2069; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2069; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_136));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_136));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_136));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2069; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L122;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2072
 *             #self.complained.add("mPhiRochCor2011A")
 *         else:
 *             self.mPhiRochCor2011A_branch.SetAddress(<void*>&self.mPhiRochCor2011A_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mPhiRochCor2011B"
 */
    __pyx_v_self->mPhiRochCor2011A_branch->SetAddress(((void *)(&__pyx_v_self->mPhiRochCor2011A_value)));
  }
  __pyx_L122:;

  /* "MuTauTree.pyx":2075
 * 
 *         #print "making mPhiRochCor2011B"
 *         self.mPhiRochCor2011B_branch = the_tree.GetBranch("mPhiRochCor2011B")             # <<<<<<<<<<<<<<
 *         #if not self.mPhiRochCor2011B_branch and "mPhiRochCor2011B" not in self.complained:
 *         if not self.mPhiRochCor2011B_branch and "mPhiRochCor2011B":
 */
  __pyx_v_self->mPhiRochCor2011B_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mPhiRochCor2011B);

  /* "MuTauTree.pyx":2077
 *         self.mPhiRochCor2011B_branch = the_tree.GetBranch("mPhiRochCor2011B")
 *         #if not self.mPhiRochCor2011B_branch and "mPhiRochCor2011B" not in self.complained:
 *         if not self.mPhiRochCor2011B_branch and "mPhiRochCor2011B":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mPhiRochCor2011B does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPhiRochCor2011B")
 */
  __pyx_t_1 = (!(__pyx_v_self->mPhiRochCor2011B_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2078
 *         #if not self.mPhiRochCor2011B_branch and "mPhiRochCor2011B" not in self.complained:
 *         if not self.mPhiRochCor2011B_branch and "mPhiRochCor2011B":
 *             warnings.warn( "MuTauTree: Expected branch mPhiRochCor2011B does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mPhiRochCor2011B")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2078; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2078; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2078; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_137));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_137));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_137));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2078; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L123;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2081
 *             #self.complained.add("mPhiRochCor2011B")
 *         else:
 *             self.mPhiRochCor2011B_branch.SetAddress(<void*>&self.mPhiRochCor2011B_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mPhiRochCor2012"
 */
    __pyx_v_self->mPhiRochCor2011B_branch->SetAddress(((void *)(&__pyx_v_self->mPhiRochCor2011B_value)));
  }
  __pyx_L123:;

  /* "MuTauTree.pyx":2084
 * 
 *         #print "making mPhiRochCor2012"
 *         self.mPhiRochCor2012_branch = the_tree.GetBranch("mPhiRochCor2012")             # <<<<<<<<<<<<<<
 *         #if not self.mPhiRochCor2012_branch and "mPhiRochCor2012" not in self.complained:
 *         if not self.mPhiRochCor2012_branch and "mPhiRochCor2012":
 */
  __pyx_v_self->mPhiRochCor2012_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mPhiRochCor2012);

  /* "MuTauTree.pyx":2086
 *         self.mPhiRochCor2012_branch = the_tree.GetBranch("mPhiRochCor2012")
 *         #if not self.mPhiRochCor2012_branch and "mPhiRochCor2012" not in self.complained:
 *         if not self.mPhiRochCor2012_branch and "mPhiRochCor2012":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mPhiRochCor2012 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPhiRochCor2012")
 */
  __pyx_t_2 = (!(__pyx_v_self->mPhiRochCor2012_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2087
 *         #if not self.mPhiRochCor2012_branch and "mPhiRochCor2012" not in self.complained:
 *         if not self.mPhiRochCor2012_branch and "mPhiRochCor2012":
 *             warnings.warn( "MuTauTree: Expected branch mPhiRochCor2012 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mPhiRochCor2012")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2087; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2087; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2087; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_138));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_138));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_138));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2087; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L124;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2090
 *             #self.complained.add("mPhiRochCor2012")
 *         else:
 *             self.mPhiRochCor2012_branch.SetAddress(<void*>&self.mPhiRochCor2012_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mPixHits"
 */
    __pyx_v_self->mPhiRochCor2012_branch->SetAddress(((void *)(&__pyx_v_self->mPhiRochCor2012_value)));
  }
  __pyx_L124:;

  /* "MuTauTree.pyx":2093
 * 
 *         #print "making mPixHits"
 *         self.mPixHits_branch = the_tree.GetBranch("mPixHits")             # <<<<<<<<<<<<<<
 *         #if not self.mPixHits_branch and "mPixHits" not in self.complained:
 *         if not self.mPixHits_branch and "mPixHits":
 */
  __pyx_v_self->mPixHits_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mPixHits);

  /* "MuTauTree.pyx":2095
 *         self.mPixHits_branch = the_tree.GetBranch("mPixHits")
 *         #if not self.mPixHits_branch and "mPixHits" not in self.complained:
 *         if not self.mPixHits_branch and "mPixHits":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mPixHits does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPixHits")
 */
  __pyx_t_1 = (!(__pyx_v_self->mPixHits_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2096
 *         #if not self.mPixHits_branch and "mPixHits" not in self.complained:
 *         if not self.mPixHits_branch and "mPixHits":
 *             warnings.warn( "MuTauTree: Expected branch mPixHits does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mPixHits")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2096; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2096; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2096; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_139));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_139));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_139));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2096; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L125;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2099
 *             #self.complained.add("mPixHits")
 *         else:
 *             self.mPixHits_branch.SetAddress(<void*>&self.mPixHits_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mPt"
 */
    __pyx_v_self->mPixHits_branch->SetAddress(((void *)(&__pyx_v_self->mPixHits_value)));
  }
  __pyx_L125:;

  /* "MuTauTree.pyx":2102
 * 
 *         #print "making mPt"
 *         self.mPt_branch = the_tree.GetBranch("mPt")             # <<<<<<<<<<<<<<
 *         #if not self.mPt_branch and "mPt" not in self.complained:
 *         if not self.mPt_branch and "mPt":
 */
  __pyx_v_self->mPt_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mPt);

  /* "MuTauTree.pyx":2104
 *         self.mPt_branch = the_tree.GetBranch("mPt")
 *         #if not self.mPt_branch and "mPt" not in self.complained:
 *         if not self.mPt_branch and "mPt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mPt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPt")
 */
  __pyx_t_2 = (!(__pyx_v_self->mPt_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2105
 *         #if not self.mPt_branch and "mPt" not in self.complained:
 *         if not self.mPt_branch and "mPt":
 *             warnings.warn( "MuTauTree: Expected branch mPt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mPt")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2105; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2105; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2105; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_140));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_140));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_140));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2105; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L126;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2108
 *             #self.complained.add("mPt")
 *         else:
 *             self.mPt_branch.SetAddress(<void*>&self.mPt_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mPtRochCor2011A"
 */
    __pyx_v_self->mPt_branch->SetAddress(((void *)(&__pyx_v_self->mPt_value)));
  }
  __pyx_L126:;

  /* "MuTauTree.pyx":2111
 * 
 *         #print "making mPtRochCor2011A"
 *         self.mPtRochCor2011A_branch = the_tree.GetBranch("mPtRochCor2011A")             # <<<<<<<<<<<<<<
 *         #if not self.mPtRochCor2011A_branch and "mPtRochCor2011A" not in self.complained:
 *         if not self.mPtRochCor2011A_branch and "mPtRochCor2011A":
 */
  __pyx_v_self->mPtRochCor2011A_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mPtRochCor2011A);

  /* "MuTauTree.pyx":2113
 *         self.mPtRochCor2011A_branch = the_tree.GetBranch("mPtRochCor2011A")
 *         #if not self.mPtRochCor2011A_branch and "mPtRochCor2011A" not in self.complained:
 *         if not self.mPtRochCor2011A_branch and "mPtRochCor2011A":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mPtRochCor2011A does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPtRochCor2011A")
 */
  __pyx_t_1 = (!(__pyx_v_self->mPtRochCor2011A_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2114
 *         #if not self.mPtRochCor2011A_branch and "mPtRochCor2011A" not in self.complained:
 *         if not self.mPtRochCor2011A_branch and "mPtRochCor2011A":
 *             warnings.warn( "MuTauTree: Expected branch mPtRochCor2011A does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mPtRochCor2011A")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2114; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2114; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2114; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_141));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_141));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_141));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2114; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L127;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2117
 *             #self.complained.add("mPtRochCor2011A")
 *         else:
 *             self.mPtRochCor2011A_branch.SetAddress(<void*>&self.mPtRochCor2011A_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mPtRochCor2011B"
 */
    __pyx_v_self->mPtRochCor2011A_branch->SetAddress(((void *)(&__pyx_v_self->mPtRochCor2011A_value)));
  }
  __pyx_L127:;

  /* "MuTauTree.pyx":2120
 * 
 *         #print "making mPtRochCor2011B"
 *         self.mPtRochCor2011B_branch = the_tree.GetBranch("mPtRochCor2011B")             # <<<<<<<<<<<<<<
 *         #if not self.mPtRochCor2011B_branch and "mPtRochCor2011B" not in self.complained:
 *         if not self.mPtRochCor2011B_branch and "mPtRochCor2011B":
 */
  __pyx_v_self->mPtRochCor2011B_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mPtRochCor2011B);

  /* "MuTauTree.pyx":2122
 *         self.mPtRochCor2011B_branch = the_tree.GetBranch("mPtRochCor2011B")
 *         #if not self.mPtRochCor2011B_branch and "mPtRochCor2011B" not in self.complained:
 *         if not self.mPtRochCor2011B_branch and "mPtRochCor2011B":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mPtRochCor2011B does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPtRochCor2011B")
 */
  __pyx_t_2 = (!(__pyx_v_self->mPtRochCor2011B_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2123
 *         #if not self.mPtRochCor2011B_branch and "mPtRochCor2011B" not in self.complained:
 *         if not self.mPtRochCor2011B_branch and "mPtRochCor2011B":
 *             warnings.warn( "MuTauTree: Expected branch mPtRochCor2011B does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mPtRochCor2011B")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2123; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2123; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2123; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_142));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_142));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_142));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2123; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L128;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2126
 *             #self.complained.add("mPtRochCor2011B")
 *         else:
 *             self.mPtRochCor2011B_branch.SetAddress(<void*>&self.mPtRochCor2011B_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mPtRochCor2012"
 */
    __pyx_v_self->mPtRochCor2011B_branch->SetAddress(((void *)(&__pyx_v_self->mPtRochCor2011B_value)));
  }
  __pyx_L128:;

  /* "MuTauTree.pyx":2129
 * 
 *         #print "making mPtRochCor2012"
 *         self.mPtRochCor2012_branch = the_tree.GetBranch("mPtRochCor2012")             # <<<<<<<<<<<<<<
 *         #if not self.mPtRochCor2012_branch and "mPtRochCor2012" not in self.complained:
 *         if not self.mPtRochCor2012_branch and "mPtRochCor2012":
 */
  __pyx_v_self->mPtRochCor2012_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mPtRochCor2012);

  /* "MuTauTree.pyx":2131
 *         self.mPtRochCor2012_branch = the_tree.GetBranch("mPtRochCor2012")
 *         #if not self.mPtRochCor2012_branch and "mPtRochCor2012" not in self.complained:
 *         if not self.mPtRochCor2012_branch and "mPtRochCor2012":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mPtRochCor2012 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPtRochCor2012")
 */
  __pyx_t_1 = (!(__pyx_v_self->mPtRochCor2012_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2132
 *         #if not self.mPtRochCor2012_branch and "mPtRochCor2012" not in self.complained:
 *         if not self.mPtRochCor2012_branch and "mPtRochCor2012":
 *             warnings.warn( "MuTauTree: Expected branch mPtRochCor2012 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mPtRochCor2012")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2132; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2132; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2132; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_143));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_143));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_143));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2132; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L129;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2135
 *             #self.complained.add("mPtRochCor2012")
 *         else:
 *             self.mPtRochCor2012_branch.SetAddress(<void*>&self.mPtRochCor2012_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mPtUncorr"
 */
    __pyx_v_self->mPtRochCor2012_branch->SetAddress(((void *)(&__pyx_v_self->mPtRochCor2012_value)));
  }
  __pyx_L129:;

  /* "MuTauTree.pyx":2138
 * 
 *         #print "making mPtUncorr"
 *         self.mPtUncorr_branch = the_tree.GetBranch("mPtUncorr")             # <<<<<<<<<<<<<<
 *         #if not self.mPtUncorr_branch and "mPtUncorr" not in self.complained:
 *         if not self.mPtUncorr_branch and "mPtUncorr":
 */
  __pyx_v_self->mPtUncorr_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mPtUncorr);

  /* "MuTauTree.pyx":2140
 *         self.mPtUncorr_branch = the_tree.GetBranch("mPtUncorr")
 *         #if not self.mPtUncorr_branch and "mPtUncorr" not in self.complained:
 *         if not self.mPtUncorr_branch and "mPtUncorr":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mPtUncorr does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mPtUncorr")
 */
  __pyx_t_2 = (!(__pyx_v_self->mPtUncorr_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2141
 *         #if not self.mPtUncorr_branch and "mPtUncorr" not in self.complained:
 *         if not self.mPtUncorr_branch and "mPtUncorr":
 *             warnings.warn( "MuTauTree: Expected branch mPtUncorr does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mPtUncorr")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2141; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2141; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2141; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_144));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_144));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_144));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2141; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L130;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2144
 *             #self.complained.add("mPtUncorr")
 *         else:
 *             self.mPtUncorr_branch.SetAddress(<void*>&self.mPtUncorr_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mRelPFIsoDB"
 */
    __pyx_v_self->mPtUncorr_branch->SetAddress(((void *)(&__pyx_v_self->mPtUncorr_value)));
  }
  __pyx_L130:;

  /* "MuTauTree.pyx":2147
 * 
 *         #print "making mRelPFIsoDB"
 *         self.mRelPFIsoDB_branch = the_tree.GetBranch("mRelPFIsoDB")             # <<<<<<<<<<<<<<
 *         #if not self.mRelPFIsoDB_branch and "mRelPFIsoDB" not in self.complained:
 *         if not self.mRelPFIsoDB_branch and "mRelPFIsoDB":
 */
  __pyx_v_self->mRelPFIsoDB_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mRelPFIsoDB);

  /* "MuTauTree.pyx":2149
 *         self.mRelPFIsoDB_branch = the_tree.GetBranch("mRelPFIsoDB")
 *         #if not self.mRelPFIsoDB_branch and "mRelPFIsoDB" not in self.complained:
 *         if not self.mRelPFIsoDB_branch and "mRelPFIsoDB":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mRelPFIsoDB does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mRelPFIsoDB")
 */
  __pyx_t_1 = (!(__pyx_v_self->mRelPFIsoDB_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2150
 *         #if not self.mRelPFIsoDB_branch and "mRelPFIsoDB" not in self.complained:
 *         if not self.mRelPFIsoDB_branch and "mRelPFIsoDB":
 *             warnings.warn( "MuTauTree: Expected branch mRelPFIsoDB does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mRelPFIsoDB")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2150; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2150; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2150; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_145));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_145));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_145));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2150; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L131;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2153
 *             #self.complained.add("mRelPFIsoDB")
 *         else:
 *             self.mRelPFIsoDB_branch.SetAddress(<void*>&self.mRelPFIsoDB_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mRhoHZG2011"
 */
    __pyx_v_self->mRelPFIsoDB_branch->SetAddress(((void *)(&__pyx_v_self->mRelPFIsoDB_value)));
  }
  __pyx_L131:;

  /* "MuTauTree.pyx":2156
 * 
 *         #print "making mRhoHZG2011"
 *         self.mRhoHZG2011_branch = the_tree.GetBranch("mRhoHZG2011")             # <<<<<<<<<<<<<<
 *         #if not self.mRhoHZG2011_branch and "mRhoHZG2011" not in self.complained:
 *         if not self.mRhoHZG2011_branch and "mRhoHZG2011":
 */
  __pyx_v_self->mRhoHZG2011_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mRhoHZG2011);

  /* "MuTauTree.pyx":2158
 *         self.mRhoHZG2011_branch = the_tree.GetBranch("mRhoHZG2011")
 *         #if not self.mRhoHZG2011_branch and "mRhoHZG2011" not in self.complained:
 *         if not self.mRhoHZG2011_branch and "mRhoHZG2011":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mRhoHZG2011 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mRhoHZG2011")
 */
  __pyx_t_2 = (!(__pyx_v_self->mRhoHZG2011_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2159
 *         #if not self.mRhoHZG2011_branch and "mRhoHZG2011" not in self.complained:
 *         if not self.mRhoHZG2011_branch and "mRhoHZG2011":
 *             warnings.warn( "MuTauTree: Expected branch mRhoHZG2011 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mRhoHZG2011")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2159; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2159; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2159; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_146));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_146));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_146));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2159; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L132;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2162
 *             #self.complained.add("mRhoHZG2011")
 *         else:
 *             self.mRhoHZG2011_branch.SetAddress(<void*>&self.mRhoHZG2011_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mRhoHZG2012"
 */
    __pyx_v_self->mRhoHZG2011_branch->SetAddress(((void *)(&__pyx_v_self->mRhoHZG2011_value)));
  }
  __pyx_L132:;

  /* "MuTauTree.pyx":2165
 * 
 *         #print "making mRhoHZG2012"
 *         self.mRhoHZG2012_branch = the_tree.GetBranch("mRhoHZG2012")             # <<<<<<<<<<<<<<
 *         #if not self.mRhoHZG2012_branch and "mRhoHZG2012" not in self.complained:
 *         if not self.mRhoHZG2012_branch and "mRhoHZG2012":
 */
  __pyx_v_self->mRhoHZG2012_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mRhoHZG2012);

  /* "MuTauTree.pyx":2167
 *         self.mRhoHZG2012_branch = the_tree.GetBranch("mRhoHZG2012")
 *         #if not self.mRhoHZG2012_branch and "mRhoHZG2012" not in self.complained:
 *         if not self.mRhoHZG2012_branch and "mRhoHZG2012":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mRhoHZG2012 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mRhoHZG2012")
 */
  __pyx_t_1 = (!(__pyx_v_self->mRhoHZG2012_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2168
 *         #if not self.mRhoHZG2012_branch and "mRhoHZG2012" not in self.complained:
 *         if not self.mRhoHZG2012_branch and "mRhoHZG2012":
 *             warnings.warn( "MuTauTree: Expected branch mRhoHZG2012 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mRhoHZG2012")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2168; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2168; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2168; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_147));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_147));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_147));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2168; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L133;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2171
 *             #self.complained.add("mRhoHZG2012")
 *         else:
 *             self.mRhoHZG2012_branch.SetAddress(<void*>&self.mRhoHZG2012_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mSingleMu13L3Filtered13"
 */
    __pyx_v_self->mRhoHZG2012_branch->SetAddress(((void *)(&__pyx_v_self->mRhoHZG2012_value)));
  }
  __pyx_L133:;

  /* "MuTauTree.pyx":2174
 * 
 *         #print "making mSingleMu13L3Filtered13"
 *         self.mSingleMu13L3Filtered13_branch = the_tree.GetBranch("mSingleMu13L3Filtered13")             # <<<<<<<<<<<<<<
 *         #if not self.mSingleMu13L3Filtered13_branch and "mSingleMu13L3Filtered13" not in self.complained:
 *         if not self.mSingleMu13L3Filtered13_branch and "mSingleMu13L3Filtered13":
 */
  __pyx_v_self->mSingleMu13L3Filtered13_branch = __pyx_v_the_tree->GetBranch(__pyx_k_148);

  /* "MuTauTree.pyx":2176
 *         self.mSingleMu13L3Filtered13_branch = the_tree.GetBranch("mSingleMu13L3Filtered13")
 *         #if not self.mSingleMu13L3Filtered13_branch and "mSingleMu13L3Filtered13" not in self.complained:
 *         if not self.mSingleMu13L3Filtered13_branch and "mSingleMu13L3Filtered13":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mSingleMu13L3Filtered13 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mSingleMu13L3Filtered13")
 */
  __pyx_t_2 = (!(__pyx_v_self->mSingleMu13L3Filtered13_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2177
 *         #if not self.mSingleMu13L3Filtered13_branch and "mSingleMu13L3Filtered13" not in self.complained:
 *         if not self.mSingleMu13L3Filtered13_branch and "mSingleMu13L3Filtered13":
 *             warnings.warn( "MuTauTree: Expected branch mSingleMu13L3Filtered13 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mSingleMu13L3Filtered13")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2177; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2177; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2177; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_149));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_149));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_149));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2177; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L134;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2180
 *             #self.complained.add("mSingleMu13L3Filtered13")
 *         else:
 *             self.mSingleMu13L3Filtered13_branch.SetAddress(<void*>&self.mSingleMu13L3Filtered13_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mSingleMu13L3Filtered17"
 */
    __pyx_v_self->mSingleMu13L3Filtered13_branch->SetAddress(((void *)(&__pyx_v_self->mSingleMu13L3Filtered13_value)));
  }
  __pyx_L134:;

  /* "MuTauTree.pyx":2183
 * 
 *         #print "making mSingleMu13L3Filtered17"
 *         self.mSingleMu13L3Filtered17_branch = the_tree.GetBranch("mSingleMu13L3Filtered17")             # <<<<<<<<<<<<<<
 *         #if not self.mSingleMu13L3Filtered17_branch and "mSingleMu13L3Filtered17" not in self.complained:
 *         if not self.mSingleMu13L3Filtered17_branch and "mSingleMu13L3Filtered17":
 */
  __pyx_v_self->mSingleMu13L3Filtered17_branch = __pyx_v_the_tree->GetBranch(__pyx_k_150);

  /* "MuTauTree.pyx":2185
 *         self.mSingleMu13L3Filtered17_branch = the_tree.GetBranch("mSingleMu13L3Filtered17")
 *         #if not self.mSingleMu13L3Filtered17_branch and "mSingleMu13L3Filtered17" not in self.complained:
 *         if not self.mSingleMu13L3Filtered17_branch and "mSingleMu13L3Filtered17":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mSingleMu13L3Filtered17 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mSingleMu13L3Filtered17")
 */
  __pyx_t_1 = (!(__pyx_v_self->mSingleMu13L3Filtered17_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2186
 *         #if not self.mSingleMu13L3Filtered17_branch and "mSingleMu13L3Filtered17" not in self.complained:
 *         if not self.mSingleMu13L3Filtered17_branch and "mSingleMu13L3Filtered17":
 *             warnings.warn( "MuTauTree: Expected branch mSingleMu13L3Filtered17 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mSingleMu13L3Filtered17")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_151));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_151));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_151));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L135;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2189
 *             #self.complained.add("mSingleMu13L3Filtered17")
 *         else:
 *             self.mSingleMu13L3Filtered17_branch.SetAddress(<void*>&self.mSingleMu13L3Filtered17_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mTkLayersWithMeasurement"
 */
    __pyx_v_self->mSingleMu13L3Filtered17_branch->SetAddress(((void *)(&__pyx_v_self->mSingleMu13L3Filtered17_value)));
  }
  __pyx_L135:;

  /* "MuTauTree.pyx":2192
 * 
 *         #print "making mTkLayersWithMeasurement"
 *         self.mTkLayersWithMeasurement_branch = the_tree.GetBranch("mTkLayersWithMeasurement")             # <<<<<<<<<<<<<<
 *         #if not self.mTkLayersWithMeasurement_branch and "mTkLayersWithMeasurement" not in self.complained:
 *         if not self.mTkLayersWithMeasurement_branch and "mTkLayersWithMeasurement":
 */
  __pyx_v_self->mTkLayersWithMeasurement_branch = __pyx_v_the_tree->GetBranch(__pyx_k_152);

  /* "MuTauTree.pyx":2194
 *         self.mTkLayersWithMeasurement_branch = the_tree.GetBranch("mTkLayersWithMeasurement")
 *         #if not self.mTkLayersWithMeasurement_branch and "mTkLayersWithMeasurement" not in self.complained:
 *         if not self.mTkLayersWithMeasurement_branch and "mTkLayersWithMeasurement":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mTkLayersWithMeasurement does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mTkLayersWithMeasurement")
 */
  __pyx_t_2 = (!(__pyx_v_self->mTkLayersWithMeasurement_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2195
 *         #if not self.mTkLayersWithMeasurement_branch and "mTkLayersWithMeasurement" not in self.complained:
 *         if not self.mTkLayersWithMeasurement_branch and "mTkLayersWithMeasurement":
 *             warnings.warn( "MuTauTree: Expected branch mTkLayersWithMeasurement does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mTkLayersWithMeasurement")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_153));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_153));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_153));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2195; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L136;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2198
 *             #self.complained.add("mTkLayersWithMeasurement")
 *         else:
 *             self.mTkLayersWithMeasurement_branch.SetAddress(<void*>&self.mTkLayersWithMeasurement_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mToMETDPhi"
 */
    __pyx_v_self->mTkLayersWithMeasurement_branch->SetAddress(((void *)(&__pyx_v_self->mTkLayersWithMeasurement_value)));
  }
  __pyx_L136:;

  /* "MuTauTree.pyx":2201
 * 
 *         #print "making mToMETDPhi"
 *         self.mToMETDPhi_branch = the_tree.GetBranch("mToMETDPhi")             # <<<<<<<<<<<<<<
 *         #if not self.mToMETDPhi_branch and "mToMETDPhi" not in self.complained:
 *         if not self.mToMETDPhi_branch and "mToMETDPhi":
 */
  __pyx_v_self->mToMETDPhi_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mToMETDPhi);

  /* "MuTauTree.pyx":2203
 *         self.mToMETDPhi_branch = the_tree.GetBranch("mToMETDPhi")
 *         #if not self.mToMETDPhi_branch and "mToMETDPhi" not in self.complained:
 *         if not self.mToMETDPhi_branch and "mToMETDPhi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mToMETDPhi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mToMETDPhi")
 */
  __pyx_t_1 = (!(__pyx_v_self->mToMETDPhi_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2204
 *         #if not self.mToMETDPhi_branch and "mToMETDPhi" not in self.complained:
 *         if not self.mToMETDPhi_branch and "mToMETDPhi":
 *             warnings.warn( "MuTauTree: Expected branch mToMETDPhi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mToMETDPhi")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2204; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2204; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2204; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_154));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_154));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_154));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2204; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L137;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2207
 *             #self.complained.add("mToMETDPhi")
 *         else:
 *             self.mToMETDPhi_branch.SetAddress(<void*>&self.mToMETDPhi_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mTypeCode"
 */
    __pyx_v_self->mToMETDPhi_branch->SetAddress(((void *)(&__pyx_v_self->mToMETDPhi_value)));
  }
  __pyx_L137:;

  /* "MuTauTree.pyx":2210
 * 
 *         #print "making mTypeCode"
 *         self.mTypeCode_branch = the_tree.GetBranch("mTypeCode")             # <<<<<<<<<<<<<<
 *         #if not self.mTypeCode_branch and "mTypeCode" not in self.complained:
 *         if not self.mTypeCode_branch and "mTypeCode":
 */
  __pyx_v_self->mTypeCode_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mTypeCode);

  /* "MuTauTree.pyx":2212
 *         self.mTypeCode_branch = the_tree.GetBranch("mTypeCode")
 *         #if not self.mTypeCode_branch and "mTypeCode" not in self.complained:
 *         if not self.mTypeCode_branch and "mTypeCode":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mTypeCode does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mTypeCode")
 */
  __pyx_t_2 = (!(__pyx_v_self->mTypeCode_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2213
 *         #if not self.mTypeCode_branch and "mTypeCode" not in self.complained:
 *         if not self.mTypeCode_branch and "mTypeCode":
 *             warnings.warn( "MuTauTree: Expected branch mTypeCode does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mTypeCode")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2213; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2213; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2213; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_155));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_155));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_155));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2213; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L138;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2216
 *             #self.complained.add("mTypeCode")
 *         else:
 *             self.mTypeCode_branch.SetAddress(<void*>&self.mTypeCode_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mVBTFID"
 */
    __pyx_v_self->mTypeCode_branch->SetAddress(((void *)(&__pyx_v_self->mTypeCode_value)));
  }
  __pyx_L138:;

  /* "MuTauTree.pyx":2219
 * 
 *         #print "making mVBTFID"
 *         self.mVBTFID_branch = the_tree.GetBranch("mVBTFID")             # <<<<<<<<<<<<<<
 *         #if not self.mVBTFID_branch and "mVBTFID" not in self.complained:
 *         if not self.mVBTFID_branch and "mVBTFID":
 */
  __pyx_v_self->mVBTFID_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mVBTFID);

  /* "MuTauTree.pyx":2221
 *         self.mVBTFID_branch = the_tree.GetBranch("mVBTFID")
 *         #if not self.mVBTFID_branch and "mVBTFID" not in self.complained:
 *         if not self.mVBTFID_branch and "mVBTFID":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mVBTFID does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mVBTFID")
 */
  __pyx_t_1 = (!(__pyx_v_self->mVBTFID_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2222
 *         #if not self.mVBTFID_branch and "mVBTFID" not in self.complained:
 *         if not self.mVBTFID_branch and "mVBTFID":
 *             warnings.warn( "MuTauTree: Expected branch mVBTFID does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mVBTFID")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2222; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2222; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2222; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_156));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_156));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_156));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2222; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L139;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2225
 *             #self.complained.add("mVBTFID")
 *         else:
 *             self.mVBTFID_branch.SetAddress(<void*>&self.mVBTFID_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mVZ"
 */
    __pyx_v_self->mVBTFID_branch->SetAddress(((void *)(&__pyx_v_self->mVBTFID_value)));
  }
  __pyx_L139:;

  /* "MuTauTree.pyx":2228
 * 
 *         #print "making mVZ"
 *         self.mVZ_branch = the_tree.GetBranch("mVZ")             # <<<<<<<<<<<<<<
 *         #if not self.mVZ_branch and "mVZ" not in self.complained:
 *         if not self.mVZ_branch and "mVZ":
 */
  __pyx_v_self->mVZ_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mVZ);

  /* "MuTauTree.pyx":2230
 *         self.mVZ_branch = the_tree.GetBranch("mVZ")
 *         #if not self.mVZ_branch and "mVZ" not in self.complained:
 *         if not self.mVZ_branch and "mVZ":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mVZ does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mVZ")
 */
  __pyx_t_2 = (!(__pyx_v_self->mVZ_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2231
 *         #if not self.mVZ_branch and "mVZ" not in self.complained:
 *         if not self.mVZ_branch and "mVZ":
 *             warnings.warn( "MuTauTree: Expected branch mVZ does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mVZ")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2231; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2231; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2231; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_157));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_157));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_157));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2231; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L140;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2234
 *             #self.complained.add("mVZ")
 *         else:
 *             self.mVZ_branch.SetAddress(<void*>&self.mVZ_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mWWID"
 */
    __pyx_v_self->mVZ_branch->SetAddress(((void *)(&__pyx_v_self->mVZ_value)));
  }
  __pyx_L140:;

  /* "MuTauTree.pyx":2237
 * 
 *         #print "making mWWID"
 *         self.mWWID_branch = the_tree.GetBranch("mWWID")             # <<<<<<<<<<<<<<
 *         #if not self.mWWID_branch and "mWWID" not in self.complained:
 *         if not self.mWWID_branch and "mWWID":
 */
  __pyx_v_self->mWWID_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mWWID);

  /* "MuTauTree.pyx":2239
 *         self.mWWID_branch = the_tree.GetBranch("mWWID")
 *         #if not self.mWWID_branch and "mWWID" not in self.complained:
 *         if not self.mWWID_branch and "mWWID":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mWWID does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mWWID")
 */
  __pyx_t_1 = (!(__pyx_v_self->mWWID_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2240
 *         #if not self.mWWID_branch and "mWWID" not in self.complained:
 *         if not self.mWWID_branch and "mWWID":
 *             warnings.warn( "MuTauTree: Expected branch mWWID does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mWWID")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2240; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2240; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2240; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_158));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_158));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_158));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2240; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L141;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2243
 *             #self.complained.add("mWWID")
 *         else:
 *             self.mWWID_branch.SetAddress(<void*>&self.mWWID_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making m_t_CosThetaStar"
 */
    __pyx_v_self->mWWID_branch->SetAddress(((void *)(&__pyx_v_self->mWWID_value)));
  }
  __pyx_L141:;

  /* "MuTauTree.pyx":2246
 * 
 *         #print "making m_t_CosThetaStar"
 *         self.m_t_CosThetaStar_branch = the_tree.GetBranch("m_t_CosThetaStar")             # <<<<<<<<<<<<<<
 *         #if not self.m_t_CosThetaStar_branch and "m_t_CosThetaStar" not in self.complained:
 *         if not self.m_t_CosThetaStar_branch and "m_t_CosThetaStar":
 */
  __pyx_v_self->m_t_CosThetaStar_branch = __pyx_v_the_tree->GetBranch(__pyx_k__m_t_CosThetaStar);

  /* "MuTauTree.pyx":2248
 *         self.m_t_CosThetaStar_branch = the_tree.GetBranch("m_t_CosThetaStar")
 *         #if not self.m_t_CosThetaStar_branch and "m_t_CosThetaStar" not in self.complained:
 *         if not self.m_t_CosThetaStar_branch and "m_t_CosThetaStar":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch m_t_CosThetaStar does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("m_t_CosThetaStar")
 */
  __pyx_t_2 = (!(__pyx_v_self->m_t_CosThetaStar_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2249
 *         #if not self.m_t_CosThetaStar_branch and "m_t_CosThetaStar" not in self.complained:
 *         if not self.m_t_CosThetaStar_branch and "m_t_CosThetaStar":
 *             warnings.warn( "MuTauTree: Expected branch m_t_CosThetaStar does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("m_t_CosThetaStar")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2249; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2249; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2249; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_159));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_159));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_159));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2249; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L142;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2252
 *             #self.complained.add("m_t_CosThetaStar")
 *         else:
 *             self.m_t_CosThetaStar_branch.SetAddress(<void*>&self.m_t_CosThetaStar_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making m_t_DPhi"
 */
    __pyx_v_self->m_t_CosThetaStar_branch->SetAddress(((void *)(&__pyx_v_self->m_t_CosThetaStar_value)));
  }
  __pyx_L142:;

  /* "MuTauTree.pyx":2255
 * 
 *         #print "making m_t_DPhi"
 *         self.m_t_DPhi_branch = the_tree.GetBranch("m_t_DPhi")             # <<<<<<<<<<<<<<
 *         #if not self.m_t_DPhi_branch and "m_t_DPhi" not in self.complained:
 *         if not self.m_t_DPhi_branch and "m_t_DPhi":
 */
  __pyx_v_self->m_t_DPhi_branch = __pyx_v_the_tree->GetBranch(__pyx_k__m_t_DPhi);

  /* "MuTauTree.pyx":2257
 *         self.m_t_DPhi_branch = the_tree.GetBranch("m_t_DPhi")
 *         #if not self.m_t_DPhi_branch and "m_t_DPhi" not in self.complained:
 *         if not self.m_t_DPhi_branch and "m_t_DPhi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch m_t_DPhi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("m_t_DPhi")
 */
  __pyx_t_1 = (!(__pyx_v_self->m_t_DPhi_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2258
 *         #if not self.m_t_DPhi_branch and "m_t_DPhi" not in self.complained:
 *         if not self.m_t_DPhi_branch and "m_t_DPhi":
 *             warnings.warn( "MuTauTree: Expected branch m_t_DPhi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("m_t_DPhi")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2258; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2258; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2258; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_160));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_160));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_160));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2258; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L143;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2261
 *             #self.complained.add("m_t_DPhi")
 *         else:
 *             self.m_t_DPhi_branch.SetAddress(<void*>&self.m_t_DPhi_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making m_t_DR"
 */
    __pyx_v_self->m_t_DPhi_branch->SetAddress(((void *)(&__pyx_v_self->m_t_DPhi_value)));
  }
  __pyx_L143:;

  /* "MuTauTree.pyx":2264
 * 
 *         #print "making m_t_DR"
 *         self.m_t_DR_branch = the_tree.GetBranch("m_t_DR")             # <<<<<<<<<<<<<<
 *         #if not self.m_t_DR_branch and "m_t_DR" not in self.complained:
 *         if not self.m_t_DR_branch and "m_t_DR":
 */
  __pyx_v_self->m_t_DR_branch = __pyx_v_the_tree->GetBranch(__pyx_k__m_t_DR);

  /* "MuTauTree.pyx":2266
 *         self.m_t_DR_branch = the_tree.GetBranch("m_t_DR")
 *         #if not self.m_t_DR_branch and "m_t_DR" not in self.complained:
 *         if not self.m_t_DR_branch and "m_t_DR":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch m_t_DR does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("m_t_DR")
 */
  __pyx_t_2 = (!(__pyx_v_self->m_t_DR_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2267
 *         #if not self.m_t_DR_branch and "m_t_DR" not in self.complained:
 *         if not self.m_t_DR_branch and "m_t_DR":
 *             warnings.warn( "MuTauTree: Expected branch m_t_DR does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("m_t_DR")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2267; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2267; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2267; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_161));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_161));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_161));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2267; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L144;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2270
 *             #self.complained.add("m_t_DR")
 *         else:
 *             self.m_t_DR_branch.SetAddress(<void*>&self.m_t_DR_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making m_t_Mass"
 */
    __pyx_v_self->m_t_DR_branch->SetAddress(((void *)(&__pyx_v_self->m_t_DR_value)));
  }
  __pyx_L144:;

  /* "MuTauTree.pyx":2273
 * 
 *         #print "making m_t_Mass"
 *         self.m_t_Mass_branch = the_tree.GetBranch("m_t_Mass")             # <<<<<<<<<<<<<<
 *         #if not self.m_t_Mass_branch and "m_t_Mass" not in self.complained:
 *         if not self.m_t_Mass_branch and "m_t_Mass":
 */
  __pyx_v_self->m_t_Mass_branch = __pyx_v_the_tree->GetBranch(__pyx_k__m_t_Mass);

  /* "MuTauTree.pyx":2275
 *         self.m_t_Mass_branch = the_tree.GetBranch("m_t_Mass")
 *         #if not self.m_t_Mass_branch and "m_t_Mass" not in self.complained:
 *         if not self.m_t_Mass_branch and "m_t_Mass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch m_t_Mass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("m_t_Mass")
 */
  __pyx_t_1 = (!(__pyx_v_self->m_t_Mass_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2276
 *         #if not self.m_t_Mass_branch and "m_t_Mass" not in self.complained:
 *         if not self.m_t_Mass_branch and "m_t_Mass":
 *             warnings.warn( "MuTauTree: Expected branch m_t_Mass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("m_t_Mass")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2276; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2276; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2276; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_162));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_162));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_162));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2276; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L145;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2279
 *             #self.complained.add("m_t_Mass")
 *         else:
 *             self.m_t_Mass_branch.SetAddress(<void*>&self.m_t_Mass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making m_t_PZeta"
 */
    __pyx_v_self->m_t_Mass_branch->SetAddress(((void *)(&__pyx_v_self->m_t_Mass_value)));
  }
  __pyx_L145:;

  /* "MuTauTree.pyx":2282
 * 
 *         #print "making m_t_PZeta"
 *         self.m_t_PZeta_branch = the_tree.GetBranch("m_t_PZeta")             # <<<<<<<<<<<<<<
 *         #if not self.m_t_PZeta_branch and "m_t_PZeta" not in self.complained:
 *         if not self.m_t_PZeta_branch and "m_t_PZeta":
 */
  __pyx_v_self->m_t_PZeta_branch = __pyx_v_the_tree->GetBranch(__pyx_k__m_t_PZeta);

  /* "MuTauTree.pyx":2284
 *         self.m_t_PZeta_branch = the_tree.GetBranch("m_t_PZeta")
 *         #if not self.m_t_PZeta_branch and "m_t_PZeta" not in self.complained:
 *         if not self.m_t_PZeta_branch and "m_t_PZeta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch m_t_PZeta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("m_t_PZeta")
 */
  __pyx_t_2 = (!(__pyx_v_self->m_t_PZeta_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2285
 *         #if not self.m_t_PZeta_branch and "m_t_PZeta" not in self.complained:
 *         if not self.m_t_PZeta_branch and "m_t_PZeta":
 *             warnings.warn( "MuTauTree: Expected branch m_t_PZeta does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("m_t_PZeta")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2285; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2285; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2285; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_163));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_163));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_163));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2285; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L146;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2288
 *             #self.complained.add("m_t_PZeta")
 *         else:
 *             self.m_t_PZeta_branch.SetAddress(<void*>&self.m_t_PZeta_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making m_t_PZetaVis"
 */
    __pyx_v_self->m_t_PZeta_branch->SetAddress(((void *)(&__pyx_v_self->m_t_PZeta_value)));
  }
  __pyx_L146:;

  /* "MuTauTree.pyx":2291
 * 
 *         #print "making m_t_PZetaVis"
 *         self.m_t_PZetaVis_branch = the_tree.GetBranch("m_t_PZetaVis")             # <<<<<<<<<<<<<<
 *         #if not self.m_t_PZetaVis_branch and "m_t_PZetaVis" not in self.complained:
 *         if not self.m_t_PZetaVis_branch and "m_t_PZetaVis":
 */
  __pyx_v_self->m_t_PZetaVis_branch = __pyx_v_the_tree->GetBranch(__pyx_k__m_t_PZetaVis);

  /* "MuTauTree.pyx":2293
 *         self.m_t_PZetaVis_branch = the_tree.GetBranch("m_t_PZetaVis")
 *         #if not self.m_t_PZetaVis_branch and "m_t_PZetaVis" not in self.complained:
 *         if not self.m_t_PZetaVis_branch and "m_t_PZetaVis":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch m_t_PZetaVis does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("m_t_PZetaVis")
 */
  __pyx_t_1 = (!(__pyx_v_self->m_t_PZetaVis_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2294
 *         #if not self.m_t_PZetaVis_branch and "m_t_PZetaVis" not in self.complained:
 *         if not self.m_t_PZetaVis_branch and "m_t_PZetaVis":
 *             warnings.warn( "MuTauTree: Expected branch m_t_PZetaVis does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("m_t_PZetaVis")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2294; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2294; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2294; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_164));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_164));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_164));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2294; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L147;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2297
 *             #self.complained.add("m_t_PZetaVis")
 *         else:
 *             self.m_t_PZetaVis_branch.SetAddress(<void*>&self.m_t_PZetaVis_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making m_t_Pt"
 */
    __pyx_v_self->m_t_PZetaVis_branch->SetAddress(((void *)(&__pyx_v_self->m_t_PZetaVis_value)));
  }
  __pyx_L147:;

  /* "MuTauTree.pyx":2300
 * 
 *         #print "making m_t_Pt"
 *         self.m_t_Pt_branch = the_tree.GetBranch("m_t_Pt")             # <<<<<<<<<<<<<<
 *         #if not self.m_t_Pt_branch and "m_t_Pt" not in self.complained:
 *         if not self.m_t_Pt_branch and "m_t_Pt":
 */
  __pyx_v_self->m_t_Pt_branch = __pyx_v_the_tree->GetBranch(__pyx_k__m_t_Pt);

  /* "MuTauTree.pyx":2302
 *         self.m_t_Pt_branch = the_tree.GetBranch("m_t_Pt")
 *         #if not self.m_t_Pt_branch and "m_t_Pt" not in self.complained:
 *         if not self.m_t_Pt_branch and "m_t_Pt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch m_t_Pt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("m_t_Pt")
 */
  __pyx_t_2 = (!(__pyx_v_self->m_t_Pt_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2303
 *         #if not self.m_t_Pt_branch and "m_t_Pt" not in self.complained:
 *         if not self.m_t_Pt_branch and "m_t_Pt":
 *             warnings.warn( "MuTauTree: Expected branch m_t_Pt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("m_t_Pt")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2303; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2303; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2303; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_165));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_165));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_165));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2303; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L148;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2306
 *             #self.complained.add("m_t_Pt")
 *         else:
 *             self.m_t_Pt_branch.SetAddress(<void*>&self.m_t_Pt_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making m_t_SS"
 */
    __pyx_v_self->m_t_Pt_branch->SetAddress(((void *)(&__pyx_v_self->m_t_Pt_value)));
  }
  __pyx_L148:;

  /* "MuTauTree.pyx":2309
 * 
 *         #print "making m_t_SS"
 *         self.m_t_SS_branch = the_tree.GetBranch("m_t_SS")             # <<<<<<<<<<<<<<
 *         #if not self.m_t_SS_branch and "m_t_SS" not in self.complained:
 *         if not self.m_t_SS_branch and "m_t_SS":
 */
  __pyx_v_self->m_t_SS_branch = __pyx_v_the_tree->GetBranch(__pyx_k__m_t_SS);

  /* "MuTauTree.pyx":2311
 *         self.m_t_SS_branch = the_tree.GetBranch("m_t_SS")
 *         #if not self.m_t_SS_branch and "m_t_SS" not in self.complained:
 *         if not self.m_t_SS_branch and "m_t_SS":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch m_t_SS does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("m_t_SS")
 */
  __pyx_t_1 = (!(__pyx_v_self->m_t_SS_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2312
 *         #if not self.m_t_SS_branch and "m_t_SS" not in self.complained:
 *         if not self.m_t_SS_branch and "m_t_SS":
 *             warnings.warn( "MuTauTree: Expected branch m_t_SS does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("m_t_SS")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2312; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2312; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2312; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_166));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_166));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_166));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2312; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L149;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2315
 *             #self.complained.add("m_t_SS")
 *         else:
 *             self.m_t_SS_branch.SetAddress(<void*>&self.m_t_SS_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making m_t_ToMETDPhi_Ty1"
 */
    __pyx_v_self->m_t_SS_branch->SetAddress(((void *)(&__pyx_v_self->m_t_SS_value)));
  }
  __pyx_L149:;

  /* "MuTauTree.pyx":2318
 * 
 *         #print "making m_t_ToMETDPhi_Ty1"
 *         self.m_t_ToMETDPhi_Ty1_branch = the_tree.GetBranch("m_t_ToMETDPhi_Ty1")             # <<<<<<<<<<<<<<
 *         #if not self.m_t_ToMETDPhi_Ty1_branch and "m_t_ToMETDPhi_Ty1" not in self.complained:
 *         if not self.m_t_ToMETDPhi_Ty1_branch and "m_t_ToMETDPhi_Ty1":
 */
  __pyx_v_self->m_t_ToMETDPhi_Ty1_branch = __pyx_v_the_tree->GetBranch(__pyx_k__m_t_ToMETDPhi_Ty1);

  /* "MuTauTree.pyx":2320
 *         self.m_t_ToMETDPhi_Ty1_branch = the_tree.GetBranch("m_t_ToMETDPhi_Ty1")
 *         #if not self.m_t_ToMETDPhi_Ty1_branch and "m_t_ToMETDPhi_Ty1" not in self.complained:
 *         if not self.m_t_ToMETDPhi_Ty1_branch and "m_t_ToMETDPhi_Ty1":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch m_t_ToMETDPhi_Ty1 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("m_t_ToMETDPhi_Ty1")
 */
  __pyx_t_2 = (!(__pyx_v_self->m_t_ToMETDPhi_Ty1_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2321
 *         #if not self.m_t_ToMETDPhi_Ty1_branch and "m_t_ToMETDPhi_Ty1" not in self.complained:
 *         if not self.m_t_ToMETDPhi_Ty1_branch and "m_t_ToMETDPhi_Ty1":
 *             warnings.warn( "MuTauTree: Expected branch m_t_ToMETDPhi_Ty1 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("m_t_ToMETDPhi_Ty1")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2321; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2321; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2321; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_167));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_167));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_167));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2321; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L150;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2324
 *             #self.complained.add("m_t_ToMETDPhi_Ty1")
 *         else:
 *             self.m_t_ToMETDPhi_Ty1_branch.SetAddress(<void*>&self.m_t_ToMETDPhi_Ty1_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making m_t_Zcompat"
 */
    __pyx_v_self->m_t_ToMETDPhi_Ty1_branch->SetAddress(((void *)(&__pyx_v_self->m_t_ToMETDPhi_Ty1_value)));
  }
  __pyx_L150:;

  /* "MuTauTree.pyx":2327
 * 
 *         #print "making m_t_Zcompat"
 *         self.m_t_Zcompat_branch = the_tree.GetBranch("m_t_Zcompat")             # <<<<<<<<<<<<<<
 *         #if not self.m_t_Zcompat_branch and "m_t_Zcompat" not in self.complained:
 *         if not self.m_t_Zcompat_branch and "m_t_Zcompat":
 */
  __pyx_v_self->m_t_Zcompat_branch = __pyx_v_the_tree->GetBranch(__pyx_k__m_t_Zcompat);

  /* "MuTauTree.pyx":2329
 *         self.m_t_Zcompat_branch = the_tree.GetBranch("m_t_Zcompat")
 *         #if not self.m_t_Zcompat_branch and "m_t_Zcompat" not in self.complained:
 *         if not self.m_t_Zcompat_branch and "m_t_Zcompat":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch m_t_Zcompat does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("m_t_Zcompat")
 */
  __pyx_t_1 = (!(__pyx_v_self->m_t_Zcompat_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2330
 *         #if not self.m_t_Zcompat_branch and "m_t_Zcompat" not in self.complained:
 *         if not self.m_t_Zcompat_branch and "m_t_Zcompat":
 *             warnings.warn( "MuTauTree: Expected branch m_t_Zcompat does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("m_t_Zcompat")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2330; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2330; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2330; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_168));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_168));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_168));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2330; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L151;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2333
 *             #self.complained.add("m_t_Zcompat")
 *         else:
 *             self.m_t_Zcompat_branch.SetAddress(<void*>&self.m_t_Zcompat_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mu17ele8Group"
 */
    __pyx_v_self->m_t_Zcompat_branch->SetAddress(((void *)(&__pyx_v_self->m_t_Zcompat_value)));
  }
  __pyx_L151:;

  /* "MuTauTree.pyx":2336
 * 
 *         #print "making mu17ele8Group"
 *         self.mu17ele8Group_branch = the_tree.GetBranch("mu17ele8Group")             # <<<<<<<<<<<<<<
 *         #if not self.mu17ele8Group_branch and "mu17ele8Group" not in self.complained:
 *         if not self.mu17ele8Group_branch and "mu17ele8Group":
 */
  __pyx_v_self->mu17ele8Group_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mu17ele8Group);

  /* "MuTauTree.pyx":2338
 *         self.mu17ele8Group_branch = the_tree.GetBranch("mu17ele8Group")
 *         #if not self.mu17ele8Group_branch and "mu17ele8Group" not in self.complained:
 *         if not self.mu17ele8Group_branch and "mu17ele8Group":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mu17ele8Group does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mu17ele8Group")
 */
  __pyx_t_2 = (!(__pyx_v_self->mu17ele8Group_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2339
 *         #if not self.mu17ele8Group_branch and "mu17ele8Group" not in self.complained:
 *         if not self.mu17ele8Group_branch and "mu17ele8Group":
 *             warnings.warn( "MuTauTree: Expected branch mu17ele8Group does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mu17ele8Group")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2339; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2339; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2339; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_169));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_169));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_169));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2339; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L152;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2342
 *             #self.complained.add("mu17ele8Group")
 *         else:
 *             self.mu17ele8Group_branch.SetAddress(<void*>&self.mu17ele8Group_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mu17ele8Pass"
 */
    __pyx_v_self->mu17ele8Group_branch->SetAddress(((void *)(&__pyx_v_self->mu17ele8Group_value)));
  }
  __pyx_L152:;

  /* "MuTauTree.pyx":2345
 * 
 *         #print "making mu17ele8Pass"
 *         self.mu17ele8Pass_branch = the_tree.GetBranch("mu17ele8Pass")             # <<<<<<<<<<<<<<
 *         #if not self.mu17ele8Pass_branch and "mu17ele8Pass" not in self.complained:
 *         if not self.mu17ele8Pass_branch and "mu17ele8Pass":
 */
  __pyx_v_self->mu17ele8Pass_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mu17ele8Pass);

  /* "MuTauTree.pyx":2347
 *         self.mu17ele8Pass_branch = the_tree.GetBranch("mu17ele8Pass")
 *         #if not self.mu17ele8Pass_branch and "mu17ele8Pass" not in self.complained:
 *         if not self.mu17ele8Pass_branch and "mu17ele8Pass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mu17ele8Pass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mu17ele8Pass")
 */
  __pyx_t_1 = (!(__pyx_v_self->mu17ele8Pass_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2348
 *         #if not self.mu17ele8Pass_branch and "mu17ele8Pass" not in self.complained:
 *         if not self.mu17ele8Pass_branch and "mu17ele8Pass":
 *             warnings.warn( "MuTauTree: Expected branch mu17ele8Pass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mu17ele8Pass")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2348; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2348; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2348; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_170));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_170));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_170));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2348; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L153;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2351
 *             #self.complained.add("mu17ele8Pass")
 *         else:
 *             self.mu17ele8Pass_branch.SetAddress(<void*>&self.mu17ele8Pass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mu17ele8Prescale"
 */
    __pyx_v_self->mu17ele8Pass_branch->SetAddress(((void *)(&__pyx_v_self->mu17ele8Pass_value)));
  }
  __pyx_L153:;

  /* "MuTauTree.pyx":2354
 * 
 *         #print "making mu17ele8Prescale"
 *         self.mu17ele8Prescale_branch = the_tree.GetBranch("mu17ele8Prescale")             # <<<<<<<<<<<<<<
 *         #if not self.mu17ele8Prescale_branch and "mu17ele8Prescale" not in self.complained:
 *         if not self.mu17ele8Prescale_branch and "mu17ele8Prescale":
 */
  __pyx_v_self->mu17ele8Prescale_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mu17ele8Prescale);

  /* "MuTauTree.pyx":2356
 *         self.mu17ele8Prescale_branch = the_tree.GetBranch("mu17ele8Prescale")
 *         #if not self.mu17ele8Prescale_branch and "mu17ele8Prescale" not in self.complained:
 *         if not self.mu17ele8Prescale_branch and "mu17ele8Prescale":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mu17ele8Prescale does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mu17ele8Prescale")
 */
  __pyx_t_2 = (!(__pyx_v_self->mu17ele8Prescale_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2357
 *         #if not self.mu17ele8Prescale_branch and "mu17ele8Prescale" not in self.complained:
 *         if not self.mu17ele8Prescale_branch and "mu17ele8Prescale":
 *             warnings.warn( "MuTauTree: Expected branch mu17ele8Prescale does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mu17ele8Prescale")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2357; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2357; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2357; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_171));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_171));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_171));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2357; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L154;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2360
 *             #self.complained.add("mu17ele8Prescale")
 *         else:
 *             self.mu17ele8Prescale_branch.SetAddress(<void*>&self.mu17ele8Prescale_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mu17ele8isoGroup"
 */
    __pyx_v_self->mu17ele8Prescale_branch->SetAddress(((void *)(&__pyx_v_self->mu17ele8Prescale_value)));
  }
  __pyx_L154:;

  /* "MuTauTree.pyx":2363
 * 
 *         #print "making mu17ele8isoGroup"
 *         self.mu17ele8isoGroup_branch = the_tree.GetBranch("mu17ele8isoGroup")             # <<<<<<<<<<<<<<
 *         #if not self.mu17ele8isoGroup_branch and "mu17ele8isoGroup" not in self.complained:
 *         if not self.mu17ele8isoGroup_branch and "mu17ele8isoGroup":
 */
  __pyx_v_self->mu17ele8isoGroup_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mu17ele8isoGroup);

  /* "MuTauTree.pyx":2365
 *         self.mu17ele8isoGroup_branch = the_tree.GetBranch("mu17ele8isoGroup")
 *         #if not self.mu17ele8isoGroup_branch and "mu17ele8isoGroup" not in self.complained:
 *         if not self.mu17ele8isoGroup_branch and "mu17ele8isoGroup":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mu17ele8isoGroup does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mu17ele8isoGroup")
 */
  __pyx_t_1 = (!(__pyx_v_self->mu17ele8isoGroup_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2366
 *         #if not self.mu17ele8isoGroup_branch and "mu17ele8isoGroup" not in self.complained:
 *         if not self.mu17ele8isoGroup_branch and "mu17ele8isoGroup":
 *             warnings.warn( "MuTauTree: Expected branch mu17ele8isoGroup does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mu17ele8isoGroup")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2366; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2366; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2366; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_172));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_172));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_172));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2366; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L155;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2369
 *             #self.complained.add("mu17ele8isoGroup")
 *         else:
 *             self.mu17ele8isoGroup_branch.SetAddress(<void*>&self.mu17ele8isoGroup_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mu17ele8isoPass"
 */
    __pyx_v_self->mu17ele8isoGroup_branch->SetAddress(((void *)(&__pyx_v_self->mu17ele8isoGroup_value)));
  }
  __pyx_L155:;

  /* "MuTauTree.pyx":2372
 * 
 *         #print "making mu17ele8isoPass"
 *         self.mu17ele8isoPass_branch = the_tree.GetBranch("mu17ele8isoPass")             # <<<<<<<<<<<<<<
 *         #if not self.mu17ele8isoPass_branch and "mu17ele8isoPass" not in self.complained:
 *         if not self.mu17ele8isoPass_branch and "mu17ele8isoPass":
 */
  __pyx_v_self->mu17ele8isoPass_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mu17ele8isoPass);

  /* "MuTauTree.pyx":2374
 *         self.mu17ele8isoPass_branch = the_tree.GetBranch("mu17ele8isoPass")
 *         #if not self.mu17ele8isoPass_branch and "mu17ele8isoPass" not in self.complained:
 *         if not self.mu17ele8isoPass_branch and "mu17ele8isoPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mu17ele8isoPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mu17ele8isoPass")
 */
  __pyx_t_2 = (!(__pyx_v_self->mu17ele8isoPass_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2375
 *         #if not self.mu17ele8isoPass_branch and "mu17ele8isoPass" not in self.complained:
 *         if not self.mu17ele8isoPass_branch and "mu17ele8isoPass":
 *             warnings.warn( "MuTauTree: Expected branch mu17ele8isoPass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mu17ele8isoPass")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2375; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2375; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2375; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_173));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_173));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_173));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2375; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L156;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2378
 *             #self.complained.add("mu17ele8isoPass")
 *         else:
 *             self.mu17ele8isoPass_branch.SetAddress(<void*>&self.mu17ele8isoPass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mu17ele8isoPrescale"
 */
    __pyx_v_self->mu17ele8isoPass_branch->SetAddress(((void *)(&__pyx_v_self->mu17ele8isoPass_value)));
  }
  __pyx_L156:;

  /* "MuTauTree.pyx":2381
 * 
 *         #print "making mu17ele8isoPrescale"
 *         self.mu17ele8isoPrescale_branch = the_tree.GetBranch("mu17ele8isoPrescale")             # <<<<<<<<<<<<<<
 *         #if not self.mu17ele8isoPrescale_branch and "mu17ele8isoPrescale" not in self.complained:
 *         if not self.mu17ele8isoPrescale_branch and "mu17ele8isoPrescale":
 */
  __pyx_v_self->mu17ele8isoPrescale_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mu17ele8isoPrescale);

  /* "MuTauTree.pyx":2383
 *         self.mu17ele8isoPrescale_branch = the_tree.GetBranch("mu17ele8isoPrescale")
 *         #if not self.mu17ele8isoPrescale_branch and "mu17ele8isoPrescale" not in self.complained:
 *         if not self.mu17ele8isoPrescale_branch and "mu17ele8isoPrescale":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mu17ele8isoPrescale does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mu17ele8isoPrescale")
 */
  __pyx_t_1 = (!(__pyx_v_self->mu17ele8isoPrescale_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2384
 *         #if not self.mu17ele8isoPrescale_branch and "mu17ele8isoPrescale" not in self.complained:
 *         if not self.mu17ele8isoPrescale_branch and "mu17ele8isoPrescale":
 *             warnings.warn( "MuTauTree: Expected branch mu17ele8isoPrescale does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mu17ele8isoPrescale")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2384; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2384; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2384; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_174));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_174));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_174));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2384; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L157;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2387
 *             #self.complained.add("mu17ele8isoPrescale")
 *         else:
 *             self.mu17ele8isoPrescale_branch.SetAddress(<void*>&self.mu17ele8isoPrescale_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mu17mu8Group"
 */
    __pyx_v_self->mu17ele8isoPrescale_branch->SetAddress(((void *)(&__pyx_v_self->mu17ele8isoPrescale_value)));
  }
  __pyx_L157:;

  /* "MuTauTree.pyx":2390
 * 
 *         #print "making mu17mu8Group"
 *         self.mu17mu8Group_branch = the_tree.GetBranch("mu17mu8Group")             # <<<<<<<<<<<<<<
 *         #if not self.mu17mu8Group_branch and "mu17mu8Group" not in self.complained:
 *         if not self.mu17mu8Group_branch and "mu17mu8Group":
 */
  __pyx_v_self->mu17mu8Group_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mu17mu8Group);

  /* "MuTauTree.pyx":2392
 *         self.mu17mu8Group_branch = the_tree.GetBranch("mu17mu8Group")
 *         #if not self.mu17mu8Group_branch and "mu17mu8Group" not in self.complained:
 *         if not self.mu17mu8Group_branch and "mu17mu8Group":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mu17mu8Group does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mu17mu8Group")
 */
  __pyx_t_2 = (!(__pyx_v_self->mu17mu8Group_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2393
 *         #if not self.mu17mu8Group_branch and "mu17mu8Group" not in self.complained:
 *         if not self.mu17mu8Group_branch and "mu17mu8Group":
 *             warnings.warn( "MuTauTree: Expected branch mu17mu8Group does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mu17mu8Group")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2393; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2393; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2393; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_175));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_175));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_175));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2393; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L158;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2396
 *             #self.complained.add("mu17mu8Group")
 *         else:
 *             self.mu17mu8Group_branch.SetAddress(<void*>&self.mu17mu8Group_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mu17mu8Pass"
 */
    __pyx_v_self->mu17mu8Group_branch->SetAddress(((void *)(&__pyx_v_self->mu17mu8Group_value)));
  }
  __pyx_L158:;

  /* "MuTauTree.pyx":2399
 * 
 *         #print "making mu17mu8Pass"
 *         self.mu17mu8Pass_branch = the_tree.GetBranch("mu17mu8Pass")             # <<<<<<<<<<<<<<
 *         #if not self.mu17mu8Pass_branch and "mu17mu8Pass" not in self.complained:
 *         if not self.mu17mu8Pass_branch and "mu17mu8Pass":
 */
  __pyx_v_self->mu17mu8Pass_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mu17mu8Pass);

  /* "MuTauTree.pyx":2401
 *         self.mu17mu8Pass_branch = the_tree.GetBranch("mu17mu8Pass")
 *         #if not self.mu17mu8Pass_branch and "mu17mu8Pass" not in self.complained:
 *         if not self.mu17mu8Pass_branch and "mu17mu8Pass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mu17mu8Pass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mu17mu8Pass")
 */
  __pyx_t_1 = (!(__pyx_v_self->mu17mu8Pass_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2402
 *         #if not self.mu17mu8Pass_branch and "mu17mu8Pass" not in self.complained:
 *         if not self.mu17mu8Pass_branch and "mu17mu8Pass":
 *             warnings.warn( "MuTauTree: Expected branch mu17mu8Pass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mu17mu8Pass")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2402; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2402; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2402; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_176));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_176));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_176));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2402; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L159;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2405
 *             #self.complained.add("mu17mu8Pass")
 *         else:
 *             self.mu17mu8Pass_branch.SetAddress(<void*>&self.mu17mu8Pass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mu17mu8Prescale"
 */
    __pyx_v_self->mu17mu8Pass_branch->SetAddress(((void *)(&__pyx_v_self->mu17mu8Pass_value)));
  }
  __pyx_L159:;

  /* "MuTauTree.pyx":2408
 * 
 *         #print "making mu17mu8Prescale"
 *         self.mu17mu8Prescale_branch = the_tree.GetBranch("mu17mu8Prescale")             # <<<<<<<<<<<<<<
 *         #if not self.mu17mu8Prescale_branch and "mu17mu8Prescale" not in self.complained:
 *         if not self.mu17mu8Prescale_branch and "mu17mu8Prescale":
 */
  __pyx_v_self->mu17mu8Prescale_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mu17mu8Prescale);

  /* "MuTauTree.pyx":2410
 *         self.mu17mu8Prescale_branch = the_tree.GetBranch("mu17mu8Prescale")
 *         #if not self.mu17mu8Prescale_branch and "mu17mu8Prescale" not in self.complained:
 *         if not self.mu17mu8Prescale_branch and "mu17mu8Prescale":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mu17mu8Prescale does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mu17mu8Prescale")
 */
  __pyx_t_2 = (!(__pyx_v_self->mu17mu8Prescale_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2411
 *         #if not self.mu17mu8Prescale_branch and "mu17mu8Prescale" not in self.complained:
 *         if not self.mu17mu8Prescale_branch and "mu17mu8Prescale":
 *             warnings.warn( "MuTauTree: Expected branch mu17mu8Prescale does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mu17mu8Prescale")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2411; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2411; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2411; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_177));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_177));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_177));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2411; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L160;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2414
 *             #self.complained.add("mu17mu8Prescale")
 *         else:
 *             self.mu17mu8Prescale_branch.SetAddress(<void*>&self.mu17mu8Prescale_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mu8ele17Group"
 */
    __pyx_v_self->mu17mu8Prescale_branch->SetAddress(((void *)(&__pyx_v_self->mu17mu8Prescale_value)));
  }
  __pyx_L160:;

  /* "MuTauTree.pyx":2417
 * 
 *         #print "making mu8ele17Group"
 *         self.mu8ele17Group_branch = the_tree.GetBranch("mu8ele17Group")             # <<<<<<<<<<<<<<
 *         #if not self.mu8ele17Group_branch and "mu8ele17Group" not in self.complained:
 *         if not self.mu8ele17Group_branch and "mu8ele17Group":
 */
  __pyx_v_self->mu8ele17Group_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mu8ele17Group);

  /* "MuTauTree.pyx":2419
 *         self.mu8ele17Group_branch = the_tree.GetBranch("mu8ele17Group")
 *         #if not self.mu8ele17Group_branch and "mu8ele17Group" not in self.complained:
 *         if not self.mu8ele17Group_branch and "mu8ele17Group":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mu8ele17Group does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mu8ele17Group")
 */
  __pyx_t_1 = (!(__pyx_v_self->mu8ele17Group_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2420
 *         #if not self.mu8ele17Group_branch and "mu8ele17Group" not in self.complained:
 *         if not self.mu8ele17Group_branch and "mu8ele17Group":
 *             warnings.warn( "MuTauTree: Expected branch mu8ele17Group does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mu8ele17Group")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2420; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2420; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2420; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_178));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_178));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_178));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2420; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L161;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2423
 *             #self.complained.add("mu8ele17Group")
 *         else:
 *             self.mu8ele17Group_branch.SetAddress(<void*>&self.mu8ele17Group_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mu8ele17Pass"
 */
    __pyx_v_self->mu8ele17Group_branch->SetAddress(((void *)(&__pyx_v_self->mu8ele17Group_value)));
  }
  __pyx_L161:;

  /* "MuTauTree.pyx":2426
 * 
 *         #print "making mu8ele17Pass"
 *         self.mu8ele17Pass_branch = the_tree.GetBranch("mu8ele17Pass")             # <<<<<<<<<<<<<<
 *         #if not self.mu8ele17Pass_branch and "mu8ele17Pass" not in self.complained:
 *         if not self.mu8ele17Pass_branch and "mu8ele17Pass":
 */
  __pyx_v_self->mu8ele17Pass_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mu8ele17Pass);

  /* "MuTauTree.pyx":2428
 *         self.mu8ele17Pass_branch = the_tree.GetBranch("mu8ele17Pass")
 *         #if not self.mu8ele17Pass_branch and "mu8ele17Pass" not in self.complained:
 *         if not self.mu8ele17Pass_branch and "mu8ele17Pass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mu8ele17Pass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mu8ele17Pass")
 */
  __pyx_t_2 = (!(__pyx_v_self->mu8ele17Pass_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2429
 *         #if not self.mu8ele17Pass_branch and "mu8ele17Pass" not in self.complained:
 *         if not self.mu8ele17Pass_branch and "mu8ele17Pass":
 *             warnings.warn( "MuTauTree: Expected branch mu8ele17Pass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mu8ele17Pass")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2429; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2429; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2429; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_179));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_179));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_179));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2429; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L162;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2432
 *             #self.complained.add("mu8ele17Pass")
 *         else:
 *             self.mu8ele17Pass_branch.SetAddress(<void*>&self.mu8ele17Pass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mu8ele17Prescale"
 */
    __pyx_v_self->mu8ele17Pass_branch->SetAddress(((void *)(&__pyx_v_self->mu8ele17Pass_value)));
  }
  __pyx_L162:;

  /* "MuTauTree.pyx":2435
 * 
 *         #print "making mu8ele17Prescale"
 *         self.mu8ele17Prescale_branch = the_tree.GetBranch("mu8ele17Prescale")             # <<<<<<<<<<<<<<
 *         #if not self.mu8ele17Prescale_branch and "mu8ele17Prescale" not in self.complained:
 *         if not self.mu8ele17Prescale_branch and "mu8ele17Prescale":
 */
  __pyx_v_self->mu8ele17Prescale_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mu8ele17Prescale);

  /* "MuTauTree.pyx":2437
 *         self.mu8ele17Prescale_branch = the_tree.GetBranch("mu8ele17Prescale")
 *         #if not self.mu8ele17Prescale_branch and "mu8ele17Prescale" not in self.complained:
 *         if not self.mu8ele17Prescale_branch and "mu8ele17Prescale":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mu8ele17Prescale does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mu8ele17Prescale")
 */
  __pyx_t_1 = (!(__pyx_v_self->mu8ele17Prescale_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2438
 *         #if not self.mu8ele17Prescale_branch and "mu8ele17Prescale" not in self.complained:
 *         if not self.mu8ele17Prescale_branch and "mu8ele17Prescale":
 *             warnings.warn( "MuTauTree: Expected branch mu8ele17Prescale does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mu8ele17Prescale")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2438; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2438; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2438; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_180));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_180));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_180));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2438; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L163;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2441
 *             #self.complained.add("mu8ele17Prescale")
 *         else:
 *             self.mu8ele17Prescale_branch.SetAddress(<void*>&self.mu8ele17Prescale_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mu8ele17isoGroup"
 */
    __pyx_v_self->mu8ele17Prescale_branch->SetAddress(((void *)(&__pyx_v_self->mu8ele17Prescale_value)));
  }
  __pyx_L163:;

  /* "MuTauTree.pyx":2444
 * 
 *         #print "making mu8ele17isoGroup"
 *         self.mu8ele17isoGroup_branch = the_tree.GetBranch("mu8ele17isoGroup")             # <<<<<<<<<<<<<<
 *         #if not self.mu8ele17isoGroup_branch and "mu8ele17isoGroup" not in self.complained:
 *         if not self.mu8ele17isoGroup_branch and "mu8ele17isoGroup":
 */
  __pyx_v_self->mu8ele17isoGroup_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mu8ele17isoGroup);

  /* "MuTauTree.pyx":2446
 *         self.mu8ele17isoGroup_branch = the_tree.GetBranch("mu8ele17isoGroup")
 *         #if not self.mu8ele17isoGroup_branch and "mu8ele17isoGroup" not in self.complained:
 *         if not self.mu8ele17isoGroup_branch and "mu8ele17isoGroup":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mu8ele17isoGroup does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mu8ele17isoGroup")
 */
  __pyx_t_2 = (!(__pyx_v_self->mu8ele17isoGroup_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2447
 *         #if not self.mu8ele17isoGroup_branch and "mu8ele17isoGroup" not in self.complained:
 *         if not self.mu8ele17isoGroup_branch and "mu8ele17isoGroup":
 *             warnings.warn( "MuTauTree: Expected branch mu8ele17isoGroup does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mu8ele17isoGroup")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2447; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2447; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2447; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_181));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_181));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_181));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2447; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L164;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2450
 *             #self.complained.add("mu8ele17isoGroup")
 *         else:
 *             self.mu8ele17isoGroup_branch.SetAddress(<void*>&self.mu8ele17isoGroup_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mu8ele17isoPass"
 */
    __pyx_v_self->mu8ele17isoGroup_branch->SetAddress(((void *)(&__pyx_v_self->mu8ele17isoGroup_value)));
  }
  __pyx_L164:;

  /* "MuTauTree.pyx":2453
 * 
 *         #print "making mu8ele17isoPass"
 *         self.mu8ele17isoPass_branch = the_tree.GetBranch("mu8ele17isoPass")             # <<<<<<<<<<<<<<
 *         #if not self.mu8ele17isoPass_branch and "mu8ele17isoPass" not in self.complained:
 *         if not self.mu8ele17isoPass_branch and "mu8ele17isoPass":
 */
  __pyx_v_self->mu8ele17isoPass_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mu8ele17isoPass);

  /* "MuTauTree.pyx":2455
 *         self.mu8ele17isoPass_branch = the_tree.GetBranch("mu8ele17isoPass")
 *         #if not self.mu8ele17isoPass_branch and "mu8ele17isoPass" not in self.complained:
 *         if not self.mu8ele17isoPass_branch and "mu8ele17isoPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mu8ele17isoPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mu8ele17isoPass")
 */
  __pyx_t_1 = (!(__pyx_v_self->mu8ele17isoPass_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2456
 *         #if not self.mu8ele17isoPass_branch and "mu8ele17isoPass" not in self.complained:
 *         if not self.mu8ele17isoPass_branch and "mu8ele17isoPass":
 *             warnings.warn( "MuTauTree: Expected branch mu8ele17isoPass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mu8ele17isoPass")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2456; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2456; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2456; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_182));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_182));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_182));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2456; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L165;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2459
 *             #self.complained.add("mu8ele17isoPass")
 *         else:
 *             self.mu8ele17isoPass_branch.SetAddress(<void*>&self.mu8ele17isoPass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mu8ele17isoPrescale"
 */
    __pyx_v_self->mu8ele17isoPass_branch->SetAddress(((void *)(&__pyx_v_self->mu8ele17isoPass_value)));
  }
  __pyx_L165:;

  /* "MuTauTree.pyx":2462
 * 
 *         #print "making mu8ele17isoPrescale"
 *         self.mu8ele17isoPrescale_branch = the_tree.GetBranch("mu8ele17isoPrescale")             # <<<<<<<<<<<<<<
 *         #if not self.mu8ele17isoPrescale_branch and "mu8ele17isoPrescale" not in self.complained:
 *         if not self.mu8ele17isoPrescale_branch and "mu8ele17isoPrescale":
 */
  __pyx_v_self->mu8ele17isoPrescale_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mu8ele17isoPrescale);

  /* "MuTauTree.pyx":2464
 *         self.mu8ele17isoPrescale_branch = the_tree.GetBranch("mu8ele17isoPrescale")
 *         #if not self.mu8ele17isoPrescale_branch and "mu8ele17isoPrescale" not in self.complained:
 *         if not self.mu8ele17isoPrescale_branch and "mu8ele17isoPrescale":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mu8ele17isoPrescale does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mu8ele17isoPrescale")
 */
  __pyx_t_2 = (!(__pyx_v_self->mu8ele17isoPrescale_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2465
 *         #if not self.mu8ele17isoPrescale_branch and "mu8ele17isoPrescale" not in self.complained:
 *         if not self.mu8ele17isoPrescale_branch and "mu8ele17isoPrescale":
 *             warnings.warn( "MuTauTree: Expected branch mu8ele17isoPrescale does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mu8ele17isoPrescale")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2465; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2465; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2465; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_183));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_183));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_183));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2465; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L166;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2468
 *             #self.complained.add("mu8ele17isoPrescale")
 *         else:
 *             self.mu8ele17isoPrescale_branch.SetAddress(<void*>&self.mu8ele17isoPrescale_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making muGlbIsoVetoPt10"
 */
    __pyx_v_self->mu8ele17isoPrescale_branch->SetAddress(((void *)(&__pyx_v_self->mu8ele17isoPrescale_value)));
  }
  __pyx_L166:;

  /* "MuTauTree.pyx":2471
 * 
 *         #print "making muGlbIsoVetoPt10"
 *         self.muGlbIsoVetoPt10_branch = the_tree.GetBranch("muGlbIsoVetoPt10")             # <<<<<<<<<<<<<<
 *         #if not self.muGlbIsoVetoPt10_branch and "muGlbIsoVetoPt10" not in self.complained:
 *         if not self.muGlbIsoVetoPt10_branch and "muGlbIsoVetoPt10":
 */
  __pyx_v_self->muGlbIsoVetoPt10_branch = __pyx_v_the_tree->GetBranch(__pyx_k__muGlbIsoVetoPt10);

  /* "MuTauTree.pyx":2473
 *         self.muGlbIsoVetoPt10_branch = the_tree.GetBranch("muGlbIsoVetoPt10")
 *         #if not self.muGlbIsoVetoPt10_branch and "muGlbIsoVetoPt10" not in self.complained:
 *         if not self.muGlbIsoVetoPt10_branch and "muGlbIsoVetoPt10":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch muGlbIsoVetoPt10 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("muGlbIsoVetoPt10")
 */
  __pyx_t_1 = (!(__pyx_v_self->muGlbIsoVetoPt10_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2474
 *         #if not self.muGlbIsoVetoPt10_branch and "muGlbIsoVetoPt10" not in self.complained:
 *         if not self.muGlbIsoVetoPt10_branch and "muGlbIsoVetoPt10":
 *             warnings.warn( "MuTauTree: Expected branch muGlbIsoVetoPt10 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("muGlbIsoVetoPt10")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2474; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2474; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2474; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_184));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_184));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_184));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2474; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L167;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2477
 *             #self.complained.add("muGlbIsoVetoPt10")
 *         else:
 *             self.muGlbIsoVetoPt10_branch.SetAddress(<void*>&self.muGlbIsoVetoPt10_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making muTauGroup"
 */
    __pyx_v_self->muGlbIsoVetoPt10_branch->SetAddress(((void *)(&__pyx_v_self->muGlbIsoVetoPt10_value)));
  }
  __pyx_L167:;

  /* "MuTauTree.pyx":2480
 * 
 *         #print "making muTauGroup"
 *         self.muTauGroup_branch = the_tree.GetBranch("muTauGroup")             # <<<<<<<<<<<<<<
 *         #if not self.muTauGroup_branch and "muTauGroup" not in self.complained:
 *         if not self.muTauGroup_branch and "muTauGroup":
 */
  __pyx_v_self->muTauGroup_branch = __pyx_v_the_tree->GetBranch(__pyx_k__muTauGroup);

  /* "MuTauTree.pyx":2482
 *         self.muTauGroup_branch = the_tree.GetBranch("muTauGroup")
 *         #if not self.muTauGroup_branch and "muTauGroup" not in self.complained:
 *         if not self.muTauGroup_branch and "muTauGroup":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch muTauGroup does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("muTauGroup")
 */
  __pyx_t_2 = (!(__pyx_v_self->muTauGroup_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2483
 *         #if not self.muTauGroup_branch and "muTauGroup" not in self.complained:
 *         if not self.muTauGroup_branch and "muTauGroup":
 *             warnings.warn( "MuTauTree: Expected branch muTauGroup does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("muTauGroup")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2483; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2483; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2483; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_185));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_185));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_185));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2483; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L168;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2486
 *             #self.complained.add("muTauGroup")
 *         else:
 *             self.muTauGroup_branch.SetAddress(<void*>&self.muTauGroup_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making muTauPass"
 */
    __pyx_v_self->muTauGroup_branch->SetAddress(((void *)(&__pyx_v_self->muTauGroup_value)));
  }
  __pyx_L168:;

  /* "MuTauTree.pyx":2489
 * 
 *         #print "making muTauPass"
 *         self.muTauPass_branch = the_tree.GetBranch("muTauPass")             # <<<<<<<<<<<<<<
 *         #if not self.muTauPass_branch and "muTauPass" not in self.complained:
 *         if not self.muTauPass_branch and "muTauPass":
 */
  __pyx_v_self->muTauPass_branch = __pyx_v_the_tree->GetBranch(__pyx_k__muTauPass);

  /* "MuTauTree.pyx":2491
 *         self.muTauPass_branch = the_tree.GetBranch("muTauPass")
 *         #if not self.muTauPass_branch and "muTauPass" not in self.complained:
 *         if not self.muTauPass_branch and "muTauPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch muTauPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("muTauPass")
 */
  __pyx_t_1 = (!(__pyx_v_self->muTauPass_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2492
 *         #if not self.muTauPass_branch and "muTauPass" not in self.complained:
 *         if not self.muTauPass_branch and "muTauPass":
 *             warnings.warn( "MuTauTree: Expected branch muTauPass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("muTauPass")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2492; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2492; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2492; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_186));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_186));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_186));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2492; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L169;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2495
 *             #self.complained.add("muTauPass")
 *         else:
 *             self.muTauPass_branch.SetAddress(<void*>&self.muTauPass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making muTauPrescale"
 */
    __pyx_v_self->muTauPass_branch->SetAddress(((void *)(&__pyx_v_self->muTauPass_value)));
  }
  __pyx_L169:;

  /* "MuTauTree.pyx":2498
 * 
 *         #print "making muTauPrescale"
 *         self.muTauPrescale_branch = the_tree.GetBranch("muTauPrescale")             # <<<<<<<<<<<<<<
 *         #if not self.muTauPrescale_branch and "muTauPrescale" not in self.complained:
 *         if not self.muTauPrescale_branch and "muTauPrescale":
 */
  __pyx_v_self->muTauPrescale_branch = __pyx_v_the_tree->GetBranch(__pyx_k__muTauPrescale);

  /* "MuTauTree.pyx":2500
 *         self.muTauPrescale_branch = the_tree.GetBranch("muTauPrescale")
 *         #if not self.muTauPrescale_branch and "muTauPrescale" not in self.complained:
 *         if not self.muTauPrescale_branch and "muTauPrescale":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch muTauPrescale does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("muTauPrescale")
 */
  __pyx_t_2 = (!(__pyx_v_self->muTauPrescale_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2501
 *         #if not self.muTauPrescale_branch and "muTauPrescale" not in self.complained:
 *         if not self.muTauPrescale_branch and "muTauPrescale":
 *             warnings.warn( "MuTauTree: Expected branch muTauPrescale does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("muTauPrescale")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2501; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2501; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2501; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_187));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_187));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_187));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2501; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L170;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2504
 *             #self.complained.add("muTauPrescale")
 *         else:
 *             self.muTauPrescale_branch.SetAddress(<void*>&self.muTauPrescale_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making muTauTestGroup"
 */
    __pyx_v_self->muTauPrescale_branch->SetAddress(((void *)(&__pyx_v_self->muTauPrescale_value)));
  }
  __pyx_L170:;

  /* "MuTauTree.pyx":2507
 * 
 *         #print "making muTauTestGroup"
 *         self.muTauTestGroup_branch = the_tree.GetBranch("muTauTestGroup")             # <<<<<<<<<<<<<<
 *         #if not self.muTauTestGroup_branch and "muTauTestGroup" not in self.complained:
 *         if not self.muTauTestGroup_branch and "muTauTestGroup":
 */
  __pyx_v_self->muTauTestGroup_branch = __pyx_v_the_tree->GetBranch(__pyx_k__muTauTestGroup);

  /* "MuTauTree.pyx":2509
 *         self.muTauTestGroup_branch = the_tree.GetBranch("muTauTestGroup")
 *         #if not self.muTauTestGroup_branch and "muTauTestGroup" not in self.complained:
 *         if not self.muTauTestGroup_branch and "muTauTestGroup":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch muTauTestGroup does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("muTauTestGroup")
 */
  __pyx_t_1 = (!(__pyx_v_self->muTauTestGroup_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2510
 *         #if not self.muTauTestGroup_branch and "muTauTestGroup" not in self.complained:
 *         if not self.muTauTestGroup_branch and "muTauTestGroup":
 *             warnings.warn( "MuTauTree: Expected branch muTauTestGroup does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("muTauTestGroup")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2510; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2510; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2510; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_188));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_188));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_188));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2510; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L171;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2513
 *             #self.complained.add("muTauTestGroup")
 *         else:
 *             self.muTauTestGroup_branch.SetAddress(<void*>&self.muTauTestGroup_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making muTauTestPass"
 */
    __pyx_v_self->muTauTestGroup_branch->SetAddress(((void *)(&__pyx_v_self->muTauTestGroup_value)));
  }
  __pyx_L171:;

  /* "MuTauTree.pyx":2516
 * 
 *         #print "making muTauTestPass"
 *         self.muTauTestPass_branch = the_tree.GetBranch("muTauTestPass")             # <<<<<<<<<<<<<<
 *         #if not self.muTauTestPass_branch and "muTauTestPass" not in self.complained:
 *         if not self.muTauTestPass_branch and "muTauTestPass":
 */
  __pyx_v_self->muTauTestPass_branch = __pyx_v_the_tree->GetBranch(__pyx_k__muTauTestPass);

  /* "MuTauTree.pyx":2518
 *         self.muTauTestPass_branch = the_tree.GetBranch("muTauTestPass")
 *         #if not self.muTauTestPass_branch and "muTauTestPass" not in self.complained:
 *         if not self.muTauTestPass_branch and "muTauTestPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch muTauTestPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("muTauTestPass")
 */
  __pyx_t_2 = (!(__pyx_v_self->muTauTestPass_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2519
 *         #if not self.muTauTestPass_branch and "muTauTestPass" not in self.complained:
 *         if not self.muTauTestPass_branch and "muTauTestPass":
 *             warnings.warn( "MuTauTree: Expected branch muTauTestPass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("muTauTestPass")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2519; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2519; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2519; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_189));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_189));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_189));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2519; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L172;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2522
 *             #self.complained.add("muTauTestPass")
 *         else:
 *             self.muTauTestPass_branch.SetAddress(<void*>&self.muTauTestPass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making muTauTestPrescale"
 */
    __pyx_v_self->muTauTestPass_branch->SetAddress(((void *)(&__pyx_v_self->muTauTestPass_value)));
  }
  __pyx_L172:;

  /* "MuTauTree.pyx":2525
 * 
 *         #print "making muTauTestPrescale"
 *         self.muTauTestPrescale_branch = the_tree.GetBranch("muTauTestPrescale")             # <<<<<<<<<<<<<<
 *         #if not self.muTauTestPrescale_branch and "muTauTestPrescale" not in self.complained:
 *         if not self.muTauTestPrescale_branch and "muTauTestPrescale":
 */
  __pyx_v_self->muTauTestPrescale_branch = __pyx_v_the_tree->GetBranch(__pyx_k__muTauTestPrescale);

  /* "MuTauTree.pyx":2527
 *         self.muTauTestPrescale_branch = the_tree.GetBranch("muTauTestPrescale")
 *         #if not self.muTauTestPrescale_branch and "muTauTestPrescale" not in self.complained:
 *         if not self.muTauTestPrescale_branch and "muTauTestPrescale":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch muTauTestPrescale does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("muTauTestPrescale")
 */
  __pyx_t_1 = (!(__pyx_v_self->muTauTestPrescale_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2528
 *         #if not self.muTauTestPrescale_branch and "muTauTestPrescale" not in self.complained:
 *         if not self.muTauTestPrescale_branch and "muTauTestPrescale":
 *             warnings.warn( "MuTauTree: Expected branch muTauTestPrescale does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("muTauTestPrescale")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2528; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2528; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2528; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_190));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_190));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_190));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2528; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L173;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2531
 *             #self.complained.add("muTauTestPrescale")
 *         else:
 *             self.muTauTestPrescale_branch.SetAddress(<void*>&self.muTauTestPrescale_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making muVetoPt15IsoIdVtx"
 */
    __pyx_v_self->muTauTestPrescale_branch->SetAddress(((void *)(&__pyx_v_self->muTauTestPrescale_value)));
  }
  __pyx_L173:;

  /* "MuTauTree.pyx":2534
 * 
 *         #print "making muVetoPt15IsoIdVtx"
 *         self.muVetoPt15IsoIdVtx_branch = the_tree.GetBranch("muVetoPt15IsoIdVtx")             # <<<<<<<<<<<<<<
 *         #if not self.muVetoPt15IsoIdVtx_branch and "muVetoPt15IsoIdVtx" not in self.complained:
 *         if not self.muVetoPt15IsoIdVtx_branch and "muVetoPt15IsoIdVtx":
 */
  __pyx_v_self->muVetoPt15IsoIdVtx_branch = __pyx_v_the_tree->GetBranch(__pyx_k__muVetoPt15IsoIdVtx);

  /* "MuTauTree.pyx":2536
 *         self.muVetoPt15IsoIdVtx_branch = the_tree.GetBranch("muVetoPt15IsoIdVtx")
 *         #if not self.muVetoPt15IsoIdVtx_branch and "muVetoPt15IsoIdVtx" not in self.complained:
 *         if not self.muVetoPt15IsoIdVtx_branch and "muVetoPt15IsoIdVtx":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch muVetoPt15IsoIdVtx does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("muVetoPt15IsoIdVtx")
 */
  __pyx_t_2 = (!(__pyx_v_self->muVetoPt15IsoIdVtx_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2537
 *         #if not self.muVetoPt15IsoIdVtx_branch and "muVetoPt15IsoIdVtx" not in self.complained:
 *         if not self.muVetoPt15IsoIdVtx_branch and "muVetoPt15IsoIdVtx":
 *             warnings.warn( "MuTauTree: Expected branch muVetoPt15IsoIdVtx does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("muVetoPt15IsoIdVtx")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2537; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2537; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2537; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_191));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_191));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_191));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2537; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L174;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2540
 *             #self.complained.add("muVetoPt15IsoIdVtx")
 *         else:
 *             self.muVetoPt15IsoIdVtx_branch.SetAddress(<void*>&self.muVetoPt15IsoIdVtx_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making muVetoPt5"
 */
    __pyx_v_self->muVetoPt15IsoIdVtx_branch->SetAddress(((void *)(&__pyx_v_self->muVetoPt15IsoIdVtx_value)));
  }
  __pyx_L174:;

  /* "MuTauTree.pyx":2543
 * 
 *         #print "making muVetoPt5"
 *         self.muVetoPt5_branch = the_tree.GetBranch("muVetoPt5")             # <<<<<<<<<<<<<<
 *         #if not self.muVetoPt5_branch and "muVetoPt5" not in self.complained:
 *         if not self.muVetoPt5_branch and "muVetoPt5":
 */
  __pyx_v_self->muVetoPt5_branch = __pyx_v_the_tree->GetBranch(__pyx_k__muVetoPt5);

  /* "MuTauTree.pyx":2545
 *         self.muVetoPt5_branch = the_tree.GetBranch("muVetoPt5")
 *         #if not self.muVetoPt5_branch and "muVetoPt5" not in self.complained:
 *         if not self.muVetoPt5_branch and "muVetoPt5":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch muVetoPt5 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("muVetoPt5")
 */
  __pyx_t_1 = (!(__pyx_v_self->muVetoPt5_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2546
 *         #if not self.muVetoPt5_branch and "muVetoPt5" not in self.complained:
 *         if not self.muVetoPt5_branch and "muVetoPt5":
 *             warnings.warn( "MuTauTree: Expected branch muVetoPt5 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("muVetoPt5")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2546; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2546; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2546; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_192));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_192));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_192));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2546; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L175;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2549
 *             #self.complained.add("muVetoPt5")
 *         else:
 *             self.muVetoPt5_branch.SetAddress(<void*>&self.muVetoPt5_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making muVetoPt5IsoIdVtx"
 */
    __pyx_v_self->muVetoPt5_branch->SetAddress(((void *)(&__pyx_v_self->muVetoPt5_value)));
  }
  __pyx_L175:;

  /* "MuTauTree.pyx":2552
 * 
 *         #print "making muVetoPt5IsoIdVtx"
 *         self.muVetoPt5IsoIdVtx_branch = the_tree.GetBranch("muVetoPt5IsoIdVtx")             # <<<<<<<<<<<<<<
 *         #if not self.muVetoPt5IsoIdVtx_branch and "muVetoPt5IsoIdVtx" not in self.complained:
 *         if not self.muVetoPt5IsoIdVtx_branch and "muVetoPt5IsoIdVtx":
 */
  __pyx_v_self->muVetoPt5IsoIdVtx_branch = __pyx_v_the_tree->GetBranch(__pyx_k__muVetoPt5IsoIdVtx);

  /* "MuTauTree.pyx":2554
 *         self.muVetoPt5IsoIdVtx_branch = the_tree.GetBranch("muVetoPt5IsoIdVtx")
 *         #if not self.muVetoPt5IsoIdVtx_branch and "muVetoPt5IsoIdVtx" not in self.complained:
 *         if not self.muVetoPt5IsoIdVtx_branch and "muVetoPt5IsoIdVtx":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch muVetoPt5IsoIdVtx does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("muVetoPt5IsoIdVtx")
 */
  __pyx_t_2 = (!(__pyx_v_self->muVetoPt5IsoIdVtx_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2555
 *         #if not self.muVetoPt5IsoIdVtx_branch and "muVetoPt5IsoIdVtx" not in self.complained:
 *         if not self.muVetoPt5IsoIdVtx_branch and "muVetoPt5IsoIdVtx":
 *             warnings.warn( "MuTauTree: Expected branch muVetoPt5IsoIdVtx does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("muVetoPt5IsoIdVtx")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2555; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2555; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2555; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_193));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_193));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_193));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2555; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L176;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2558
 *             #self.complained.add("muVetoPt5IsoIdVtx")
 *         else:
 *             self.muVetoPt5IsoIdVtx_branch.SetAddress(<void*>&self.muVetoPt5IsoIdVtx_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mva_metEt"
 */
    __pyx_v_self->muVetoPt5IsoIdVtx_branch->SetAddress(((void *)(&__pyx_v_self->muVetoPt5IsoIdVtx_value)));
  }
  __pyx_L176:;

  /* "MuTauTree.pyx":2561
 * 
 *         #print "making mva_metEt"
 *         self.mva_metEt_branch = the_tree.GetBranch("mva_metEt")             # <<<<<<<<<<<<<<
 *         #if not self.mva_metEt_branch and "mva_metEt" not in self.complained:
 *         if not self.mva_metEt_branch and "mva_metEt":
 */
  __pyx_v_self->mva_metEt_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mva_metEt);

  /* "MuTauTree.pyx":2563
 *         self.mva_metEt_branch = the_tree.GetBranch("mva_metEt")
 *         #if not self.mva_metEt_branch and "mva_metEt" not in self.complained:
 *         if not self.mva_metEt_branch and "mva_metEt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mva_metEt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mva_metEt")
 */
  __pyx_t_1 = (!(__pyx_v_self->mva_metEt_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2564
 *         #if not self.mva_metEt_branch and "mva_metEt" not in self.complained:
 *         if not self.mva_metEt_branch and "mva_metEt":
 *             warnings.warn( "MuTauTree: Expected branch mva_metEt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mva_metEt")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2564; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2564; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2564; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_194));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_194));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_194));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2564; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L177;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2567
 *             #self.complained.add("mva_metEt")
 *         else:
 *             self.mva_metEt_branch.SetAddress(<void*>&self.mva_metEt_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making mva_metPhi"
 */
    __pyx_v_self->mva_metEt_branch->SetAddress(((void *)(&__pyx_v_self->mva_metEt_value)));
  }
  __pyx_L177:;

  /* "MuTauTree.pyx":2570
 * 
 *         #print "making mva_metPhi"
 *         self.mva_metPhi_branch = the_tree.GetBranch("mva_metPhi")             # <<<<<<<<<<<<<<
 *         #if not self.mva_metPhi_branch and "mva_metPhi" not in self.complained:
 *         if not self.mva_metPhi_branch and "mva_metPhi":
 */
  __pyx_v_self->mva_metPhi_branch = __pyx_v_the_tree->GetBranch(__pyx_k__mva_metPhi);

  /* "MuTauTree.pyx":2572
 *         self.mva_metPhi_branch = the_tree.GetBranch("mva_metPhi")
 *         #if not self.mva_metPhi_branch and "mva_metPhi" not in self.complained:
 *         if not self.mva_metPhi_branch and "mva_metPhi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch mva_metPhi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("mva_metPhi")
 */
  __pyx_t_2 = (!(__pyx_v_self->mva_metPhi_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2573
 *         #if not self.mva_metPhi_branch and "mva_metPhi" not in self.complained:
 *         if not self.mva_metPhi_branch and "mva_metPhi":
 *             warnings.warn( "MuTauTree: Expected branch mva_metPhi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("mva_metPhi")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2573; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2573; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2573; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_195));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_195));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_195));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2573; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L178;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2576
 *             #self.complained.add("mva_metPhi")
 *         else:
 *             self.mva_metPhi_branch.SetAddress(<void*>&self.mva_metPhi_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making nTruePU"
 */
    __pyx_v_self->mva_metPhi_branch->SetAddress(((void *)(&__pyx_v_self->mva_metPhi_value)));
  }
  __pyx_L178:;

  /* "MuTauTree.pyx":2579
 * 
 *         #print "making nTruePU"
 *         self.nTruePU_branch = the_tree.GetBranch("nTruePU")             # <<<<<<<<<<<<<<
 *         #if not self.nTruePU_branch and "nTruePU" not in self.complained:
 *         if not self.nTruePU_branch and "nTruePU":
 */
  __pyx_v_self->nTruePU_branch = __pyx_v_the_tree->GetBranch(__pyx_k__nTruePU);

  /* "MuTauTree.pyx":2581
 *         self.nTruePU_branch = the_tree.GetBranch("nTruePU")
 *         #if not self.nTruePU_branch and "nTruePU" not in self.complained:
 *         if not self.nTruePU_branch and "nTruePU":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch nTruePU does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("nTruePU")
 */
  __pyx_t_1 = (!(__pyx_v_self->nTruePU_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2582
 *         #if not self.nTruePU_branch and "nTruePU" not in self.complained:
 *         if not self.nTruePU_branch and "nTruePU":
 *             warnings.warn( "MuTauTree: Expected branch nTruePU does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("nTruePU")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2582; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2582; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2582; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_196));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_196));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_196));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2582; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L179;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2585
 *             #self.complained.add("nTruePU")
 *         else:
 *             self.nTruePU_branch.SetAddress(<void*>&self.nTruePU_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making nvtx"
 */
    __pyx_v_self->nTruePU_branch->SetAddress(((void *)(&__pyx_v_self->nTruePU_value)));
  }
  __pyx_L179:;

  /* "MuTauTree.pyx":2588
 * 
 *         #print "making nvtx"
 *         self.nvtx_branch = the_tree.GetBranch("nvtx")             # <<<<<<<<<<<<<<
 *         #if not self.nvtx_branch and "nvtx" not in self.complained:
 *         if not self.nvtx_branch and "nvtx":
 */
  __pyx_v_self->nvtx_branch = __pyx_v_the_tree->GetBranch(__pyx_k__nvtx);

  /* "MuTauTree.pyx":2590
 *         self.nvtx_branch = the_tree.GetBranch("nvtx")
 *         #if not self.nvtx_branch and "nvtx" not in self.complained:
 *         if not self.nvtx_branch and "nvtx":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch nvtx does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("nvtx")
 */
  __pyx_t_2 = (!(__pyx_v_self->nvtx_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2591
 *         #if not self.nvtx_branch and "nvtx" not in self.complained:
 *         if not self.nvtx_branch and "nvtx":
 *             warnings.warn( "MuTauTree: Expected branch nvtx does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("nvtx")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2591; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2591; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2591; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_197));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_197));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_197));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2591; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L180;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2594
 *             #self.complained.add("nvtx")
 *         else:
 *             self.nvtx_branch.SetAddress(<void*>&self.nvtx_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pfMetEt"
 */
    __pyx_v_self->nvtx_branch->SetAddress(((void *)(&__pyx_v_self->nvtx_value)));
  }
  __pyx_L180:;

  /* "MuTauTree.pyx":2597
 * 
 *         #print "making pfMetEt"
 *         self.pfMetEt_branch = the_tree.GetBranch("pfMetEt")             # <<<<<<<<<<<<<<
 *         #if not self.pfMetEt_branch and "pfMetEt" not in self.complained:
 *         if not self.pfMetEt_branch and "pfMetEt":
 */
  __pyx_v_self->pfMetEt_branch = __pyx_v_the_tree->GetBranch(__pyx_k__pfMetEt);

  /* "MuTauTree.pyx":2599
 *         self.pfMetEt_branch = the_tree.GetBranch("pfMetEt")
 *         #if not self.pfMetEt_branch and "pfMetEt" not in self.complained:
 *         if not self.pfMetEt_branch and "pfMetEt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pfMetEt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pfMetEt")
 */
  __pyx_t_1 = (!(__pyx_v_self->pfMetEt_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2600
 *         #if not self.pfMetEt_branch and "pfMetEt" not in self.complained:
 *         if not self.pfMetEt_branch and "pfMetEt":
 *             warnings.warn( "MuTauTree: Expected branch pfMetEt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pfMetEt")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2600; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2600; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2600; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_198));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_198));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_198));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2600; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L181;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2603
 *             #self.complained.add("pfMetEt")
 *         else:
 *             self.pfMetEt_branch.SetAddress(<void*>&self.pfMetEt_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pfMetPhi"
 */
    __pyx_v_self->pfMetEt_branch->SetAddress(((void *)(&__pyx_v_self->pfMetEt_value)));
  }
  __pyx_L181:;

  /* "MuTauTree.pyx":2606
 * 
 *         #print "making pfMetPhi"
 *         self.pfMetPhi_branch = the_tree.GetBranch("pfMetPhi")             # <<<<<<<<<<<<<<
 *         #if not self.pfMetPhi_branch and "pfMetPhi" not in self.complained:
 *         if not self.pfMetPhi_branch and "pfMetPhi":
 */
  __pyx_v_self->pfMetPhi_branch = __pyx_v_the_tree->GetBranch(__pyx_k__pfMetPhi);

  /* "MuTauTree.pyx":2608
 *         self.pfMetPhi_branch = the_tree.GetBranch("pfMetPhi")
 *         #if not self.pfMetPhi_branch and "pfMetPhi" not in self.complained:
 *         if not self.pfMetPhi_branch and "pfMetPhi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pfMetPhi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pfMetPhi")
 */
  __pyx_t_2 = (!(__pyx_v_self->pfMetPhi_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2609
 *         #if not self.pfMetPhi_branch and "pfMetPhi" not in self.complained:
 *         if not self.pfMetPhi_branch and "pfMetPhi":
 *             warnings.warn( "MuTauTree: Expected branch pfMetPhi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pfMetPhi")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2609; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2609; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2609; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_199));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_199));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_199));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2609; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L182;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2612
 *             #self.complained.add("pfMetPhi")
 *         else:
 *             self.pfMetPhi_branch.SetAddress(<void*>&self.pfMetPhi_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pfMet_jes_Et"
 */
    __pyx_v_self->pfMetPhi_branch->SetAddress(((void *)(&__pyx_v_self->pfMetPhi_value)));
  }
  __pyx_L182:;

  /* "MuTauTree.pyx":2615
 * 
 *         #print "making pfMet_jes_Et"
 *         self.pfMet_jes_Et_branch = the_tree.GetBranch("pfMet_jes_Et")             # <<<<<<<<<<<<<<
 *         #if not self.pfMet_jes_Et_branch and "pfMet_jes_Et" not in self.complained:
 *         if not self.pfMet_jes_Et_branch and "pfMet_jes_Et":
 */
  __pyx_v_self->pfMet_jes_Et_branch = __pyx_v_the_tree->GetBranch(__pyx_k__pfMet_jes_Et);

  /* "MuTauTree.pyx":2617
 *         self.pfMet_jes_Et_branch = the_tree.GetBranch("pfMet_jes_Et")
 *         #if not self.pfMet_jes_Et_branch and "pfMet_jes_Et" not in self.complained:
 *         if not self.pfMet_jes_Et_branch and "pfMet_jes_Et":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pfMet_jes_Et does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pfMet_jes_Et")
 */
  __pyx_t_1 = (!(__pyx_v_self->pfMet_jes_Et_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2618
 *         #if not self.pfMet_jes_Et_branch and "pfMet_jes_Et" not in self.complained:
 *         if not self.pfMet_jes_Et_branch and "pfMet_jes_Et":
 *             warnings.warn( "MuTauTree: Expected branch pfMet_jes_Et does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pfMet_jes_Et")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2618; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2618; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2618; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_200));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_200));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_200));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2618; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L183;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2621
 *             #self.complained.add("pfMet_jes_Et")
 *         else:
 *             self.pfMet_jes_Et_branch.SetAddress(<void*>&self.pfMet_jes_Et_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pfMet_jes_Phi"
 */
    __pyx_v_self->pfMet_jes_Et_branch->SetAddress(((void *)(&__pyx_v_self->pfMet_jes_Et_value)));
  }
  __pyx_L183:;

  /* "MuTauTree.pyx":2624
 * 
 *         #print "making pfMet_jes_Phi"
 *         self.pfMet_jes_Phi_branch = the_tree.GetBranch("pfMet_jes_Phi")             # <<<<<<<<<<<<<<
 *         #if not self.pfMet_jes_Phi_branch and "pfMet_jes_Phi" not in self.complained:
 *         if not self.pfMet_jes_Phi_branch and "pfMet_jes_Phi":
 */
  __pyx_v_self->pfMet_jes_Phi_branch = __pyx_v_the_tree->GetBranch(__pyx_k__pfMet_jes_Phi);

  /* "MuTauTree.pyx":2626
 *         self.pfMet_jes_Phi_branch = the_tree.GetBranch("pfMet_jes_Phi")
 *         #if not self.pfMet_jes_Phi_branch and "pfMet_jes_Phi" not in self.complained:
 *         if not self.pfMet_jes_Phi_branch and "pfMet_jes_Phi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pfMet_jes_Phi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pfMet_jes_Phi")
 */
  __pyx_t_2 = (!(__pyx_v_self->pfMet_jes_Phi_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2627
 *         #if not self.pfMet_jes_Phi_branch and "pfMet_jes_Phi" not in self.complained:
 *         if not self.pfMet_jes_Phi_branch and "pfMet_jes_Phi":
 *             warnings.warn( "MuTauTree: Expected branch pfMet_jes_Phi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pfMet_jes_Phi")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2627; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2627; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2627; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_201));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_201));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_201));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2627; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L184;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2630
 *             #self.complained.add("pfMet_jes_Phi")
 *         else:
 *             self.pfMet_jes_Phi_branch.SetAddress(<void*>&self.pfMet_jes_Phi_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pfMet_mes_Et"
 */
    __pyx_v_self->pfMet_jes_Phi_branch->SetAddress(((void *)(&__pyx_v_self->pfMet_jes_Phi_value)));
  }
  __pyx_L184:;

  /* "MuTauTree.pyx":2633
 * 
 *         #print "making pfMet_mes_Et"
 *         self.pfMet_mes_Et_branch = the_tree.GetBranch("pfMet_mes_Et")             # <<<<<<<<<<<<<<
 *         #if not self.pfMet_mes_Et_branch and "pfMet_mes_Et" not in self.complained:
 *         if not self.pfMet_mes_Et_branch and "pfMet_mes_Et":
 */
  __pyx_v_self->pfMet_mes_Et_branch = __pyx_v_the_tree->GetBranch(__pyx_k__pfMet_mes_Et);

  /* "MuTauTree.pyx":2635
 *         self.pfMet_mes_Et_branch = the_tree.GetBranch("pfMet_mes_Et")
 *         #if not self.pfMet_mes_Et_branch and "pfMet_mes_Et" not in self.complained:
 *         if not self.pfMet_mes_Et_branch and "pfMet_mes_Et":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pfMet_mes_Et does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pfMet_mes_Et")
 */
  __pyx_t_1 = (!(__pyx_v_self->pfMet_mes_Et_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2636
 *         #if not self.pfMet_mes_Et_branch and "pfMet_mes_Et" not in self.complained:
 *         if not self.pfMet_mes_Et_branch and "pfMet_mes_Et":
 *             warnings.warn( "MuTauTree: Expected branch pfMet_mes_Et does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pfMet_mes_Et")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2636; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2636; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2636; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_202));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_202));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_202));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2636; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L185;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2639
 *             #self.complained.add("pfMet_mes_Et")
 *         else:
 *             self.pfMet_mes_Et_branch.SetAddress(<void*>&self.pfMet_mes_Et_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pfMet_mes_Phi"
 */
    __pyx_v_self->pfMet_mes_Et_branch->SetAddress(((void *)(&__pyx_v_self->pfMet_mes_Et_value)));
  }
  __pyx_L185:;

  /* "MuTauTree.pyx":2642
 * 
 *         #print "making pfMet_mes_Phi"
 *         self.pfMet_mes_Phi_branch = the_tree.GetBranch("pfMet_mes_Phi")             # <<<<<<<<<<<<<<
 *         #if not self.pfMet_mes_Phi_branch and "pfMet_mes_Phi" not in self.complained:
 *         if not self.pfMet_mes_Phi_branch and "pfMet_mes_Phi":
 */
  __pyx_v_self->pfMet_mes_Phi_branch = __pyx_v_the_tree->GetBranch(__pyx_k__pfMet_mes_Phi);

  /* "MuTauTree.pyx":2644
 *         self.pfMet_mes_Phi_branch = the_tree.GetBranch("pfMet_mes_Phi")
 *         #if not self.pfMet_mes_Phi_branch and "pfMet_mes_Phi" not in self.complained:
 *         if not self.pfMet_mes_Phi_branch and "pfMet_mes_Phi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pfMet_mes_Phi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pfMet_mes_Phi")
 */
  __pyx_t_2 = (!(__pyx_v_self->pfMet_mes_Phi_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2645
 *         #if not self.pfMet_mes_Phi_branch and "pfMet_mes_Phi" not in self.complained:
 *         if not self.pfMet_mes_Phi_branch and "pfMet_mes_Phi":
 *             warnings.warn( "MuTauTree: Expected branch pfMet_mes_Phi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pfMet_mes_Phi")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2645; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2645; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2645; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_203));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_203));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_203));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2645; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L186;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2648
 *             #self.complained.add("pfMet_mes_Phi")
 *         else:
 *             self.pfMet_mes_Phi_branch.SetAddress(<void*>&self.pfMet_mes_Phi_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pfMet_tes_Et"
 */
    __pyx_v_self->pfMet_mes_Phi_branch->SetAddress(((void *)(&__pyx_v_self->pfMet_mes_Phi_value)));
  }
  __pyx_L186:;

  /* "MuTauTree.pyx":2651
 * 
 *         #print "making pfMet_tes_Et"
 *         self.pfMet_tes_Et_branch = the_tree.GetBranch("pfMet_tes_Et")             # <<<<<<<<<<<<<<
 *         #if not self.pfMet_tes_Et_branch and "pfMet_tes_Et" not in self.complained:
 *         if not self.pfMet_tes_Et_branch and "pfMet_tes_Et":
 */
  __pyx_v_self->pfMet_tes_Et_branch = __pyx_v_the_tree->GetBranch(__pyx_k__pfMet_tes_Et);

  /* "MuTauTree.pyx":2653
 *         self.pfMet_tes_Et_branch = the_tree.GetBranch("pfMet_tes_Et")
 *         #if not self.pfMet_tes_Et_branch and "pfMet_tes_Et" not in self.complained:
 *         if not self.pfMet_tes_Et_branch and "pfMet_tes_Et":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pfMet_tes_Et does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pfMet_tes_Et")
 */
  __pyx_t_1 = (!(__pyx_v_self->pfMet_tes_Et_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2654
 *         #if not self.pfMet_tes_Et_branch and "pfMet_tes_Et" not in self.complained:
 *         if not self.pfMet_tes_Et_branch and "pfMet_tes_Et":
 *             warnings.warn( "MuTauTree: Expected branch pfMet_tes_Et does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pfMet_tes_Et")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2654; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2654; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2654; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_204));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_204));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_204));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2654; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L187;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2657
 *             #self.complained.add("pfMet_tes_Et")
 *         else:
 *             self.pfMet_tes_Et_branch.SetAddress(<void*>&self.pfMet_tes_Et_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pfMet_tes_Phi"
 */
    __pyx_v_self->pfMet_tes_Et_branch->SetAddress(((void *)(&__pyx_v_self->pfMet_tes_Et_value)));
  }
  __pyx_L187:;

  /* "MuTauTree.pyx":2660
 * 
 *         #print "making pfMet_tes_Phi"
 *         self.pfMet_tes_Phi_branch = the_tree.GetBranch("pfMet_tes_Phi")             # <<<<<<<<<<<<<<
 *         #if not self.pfMet_tes_Phi_branch and "pfMet_tes_Phi" not in self.complained:
 *         if not self.pfMet_tes_Phi_branch and "pfMet_tes_Phi":
 */
  __pyx_v_self->pfMet_tes_Phi_branch = __pyx_v_the_tree->GetBranch(__pyx_k__pfMet_tes_Phi);

  /* "MuTauTree.pyx":2662
 *         self.pfMet_tes_Phi_branch = the_tree.GetBranch("pfMet_tes_Phi")
 *         #if not self.pfMet_tes_Phi_branch and "pfMet_tes_Phi" not in self.complained:
 *         if not self.pfMet_tes_Phi_branch and "pfMet_tes_Phi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pfMet_tes_Phi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pfMet_tes_Phi")
 */
  __pyx_t_2 = (!(__pyx_v_self->pfMet_tes_Phi_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2663
 *         #if not self.pfMet_tes_Phi_branch and "pfMet_tes_Phi" not in self.complained:
 *         if not self.pfMet_tes_Phi_branch and "pfMet_tes_Phi":
 *             warnings.warn( "MuTauTree: Expected branch pfMet_tes_Phi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pfMet_tes_Phi")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2663; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2663; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2663; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_205));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_205));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_205));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2663; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L188;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2666
 *             #self.complained.add("pfMet_tes_Phi")
 *         else:
 *             self.pfMet_tes_Phi_branch.SetAddress(<void*>&self.pfMet_tes_Phi_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pfMet_ues_Et"
 */
    __pyx_v_self->pfMet_tes_Phi_branch->SetAddress(((void *)(&__pyx_v_self->pfMet_tes_Phi_value)));
  }
  __pyx_L188:;

  /* "MuTauTree.pyx":2669
 * 
 *         #print "making pfMet_ues_Et"
 *         self.pfMet_ues_Et_branch = the_tree.GetBranch("pfMet_ues_Et")             # <<<<<<<<<<<<<<
 *         #if not self.pfMet_ues_Et_branch and "pfMet_ues_Et" not in self.complained:
 *         if not self.pfMet_ues_Et_branch and "pfMet_ues_Et":
 */
  __pyx_v_self->pfMet_ues_Et_branch = __pyx_v_the_tree->GetBranch(__pyx_k__pfMet_ues_Et);

  /* "MuTauTree.pyx":2671
 *         self.pfMet_ues_Et_branch = the_tree.GetBranch("pfMet_ues_Et")
 *         #if not self.pfMet_ues_Et_branch and "pfMet_ues_Et" not in self.complained:
 *         if not self.pfMet_ues_Et_branch and "pfMet_ues_Et":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pfMet_ues_Et does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pfMet_ues_Et")
 */
  __pyx_t_1 = (!(__pyx_v_self->pfMet_ues_Et_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2672
 *         #if not self.pfMet_ues_Et_branch and "pfMet_ues_Et" not in self.complained:
 *         if not self.pfMet_ues_Et_branch and "pfMet_ues_Et":
 *             warnings.warn( "MuTauTree: Expected branch pfMet_ues_Et does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pfMet_ues_Et")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2672; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2672; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2672; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_206));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_206));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_206));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2672; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L189;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2675
 *             #self.complained.add("pfMet_ues_Et")
 *         else:
 *             self.pfMet_ues_Et_branch.SetAddress(<void*>&self.pfMet_ues_Et_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pfMet_ues_Phi"
 */
    __pyx_v_self->pfMet_ues_Et_branch->SetAddress(((void *)(&__pyx_v_self->pfMet_ues_Et_value)));
  }
  __pyx_L189:;

  /* "MuTauTree.pyx":2678
 * 
 *         #print "making pfMet_ues_Phi"
 *         self.pfMet_ues_Phi_branch = the_tree.GetBranch("pfMet_ues_Phi")             # <<<<<<<<<<<<<<
 *         #if not self.pfMet_ues_Phi_branch and "pfMet_ues_Phi" not in self.complained:
 *         if not self.pfMet_ues_Phi_branch and "pfMet_ues_Phi":
 */
  __pyx_v_self->pfMet_ues_Phi_branch = __pyx_v_the_tree->GetBranch(__pyx_k__pfMet_ues_Phi);

  /* "MuTauTree.pyx":2680
 *         self.pfMet_ues_Phi_branch = the_tree.GetBranch("pfMet_ues_Phi")
 *         #if not self.pfMet_ues_Phi_branch and "pfMet_ues_Phi" not in self.complained:
 *         if not self.pfMet_ues_Phi_branch and "pfMet_ues_Phi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pfMet_ues_Phi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pfMet_ues_Phi")
 */
  __pyx_t_2 = (!(__pyx_v_self->pfMet_ues_Phi_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2681
 *         #if not self.pfMet_ues_Phi_branch and "pfMet_ues_Phi" not in self.complained:
 *         if not self.pfMet_ues_Phi_branch and "pfMet_ues_Phi":
 *             warnings.warn( "MuTauTree: Expected branch pfMet_ues_Phi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pfMet_ues_Phi")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2681; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2681; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2681; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_207));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_207));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_207));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2681; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L190;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2684
 *             #self.complained.add("pfMet_ues_Phi")
 *         else:
 *             self.pfMet_ues_Phi_branch.SetAddress(<void*>&self.pfMet_ues_Phi_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making processID"
 */
    __pyx_v_self->pfMet_ues_Phi_branch->SetAddress(((void *)(&__pyx_v_self->pfMet_ues_Phi_value)));
  }
  __pyx_L190:;

  /* "MuTauTree.pyx":2687
 * 
 *         #print "making processID"
 *         self.processID_branch = the_tree.GetBranch("processID")             # <<<<<<<<<<<<<<
 *         #if not self.processID_branch and "processID" not in self.complained:
 *         if not self.processID_branch and "processID":
 */
  __pyx_v_self->processID_branch = __pyx_v_the_tree->GetBranch(__pyx_k__processID);

  /* "MuTauTree.pyx":2689
 *         self.processID_branch = the_tree.GetBranch("processID")
 *         #if not self.processID_branch and "processID" not in self.complained:
 *         if not self.processID_branch and "processID":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch processID does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("processID")
 */
  __pyx_t_1 = (!(__pyx_v_self->processID_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2690
 *         #if not self.processID_branch and "processID" not in self.complained:
 *         if not self.processID_branch and "processID":
 *             warnings.warn( "MuTauTree: Expected branch processID does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("processID")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2690; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2690; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2690; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_208));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_208));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_208));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2690; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L191;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2693
 *             #self.complained.add("processID")
 *         else:
 *             self.processID_branch.SetAddress(<void*>&self.processID_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pvChi2"
 */
    __pyx_v_self->processID_branch->SetAddress(((void *)(&__pyx_v_self->processID_value)));
  }
  __pyx_L191:;

  /* "MuTauTree.pyx":2696
 * 
 *         #print "making pvChi2"
 *         self.pvChi2_branch = the_tree.GetBranch("pvChi2")             # <<<<<<<<<<<<<<
 *         #if not self.pvChi2_branch and "pvChi2" not in self.complained:
 *         if not self.pvChi2_branch and "pvChi2":
 */
  __pyx_v_self->pvChi2_branch = __pyx_v_the_tree->GetBranch(__pyx_k__pvChi2);

  /* "MuTauTree.pyx":2698
 *         self.pvChi2_branch = the_tree.GetBranch("pvChi2")
 *         #if not self.pvChi2_branch and "pvChi2" not in self.complained:
 *         if not self.pvChi2_branch and "pvChi2":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pvChi2 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvChi2")
 */
  __pyx_t_2 = (!(__pyx_v_self->pvChi2_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2699
 *         #if not self.pvChi2_branch and "pvChi2" not in self.complained:
 *         if not self.pvChi2_branch and "pvChi2":
 *             warnings.warn( "MuTauTree: Expected branch pvChi2 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pvChi2")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2699; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2699; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2699; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_209));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_209));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_209));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2699; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L192;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2702
 *             #self.complained.add("pvChi2")
 *         else:
 *             self.pvChi2_branch.SetAddress(<void*>&self.pvChi2_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pvDX"
 */
    __pyx_v_self->pvChi2_branch->SetAddress(((void *)(&__pyx_v_self->pvChi2_value)));
  }
  __pyx_L192:;

  /* "MuTauTree.pyx":2705
 * 
 *         #print "making pvDX"
 *         self.pvDX_branch = the_tree.GetBranch("pvDX")             # <<<<<<<<<<<<<<
 *         #if not self.pvDX_branch and "pvDX" not in self.complained:
 *         if not self.pvDX_branch and "pvDX":
 */
  __pyx_v_self->pvDX_branch = __pyx_v_the_tree->GetBranch(__pyx_k__pvDX);

  /* "MuTauTree.pyx":2707
 *         self.pvDX_branch = the_tree.GetBranch("pvDX")
 *         #if not self.pvDX_branch and "pvDX" not in self.complained:
 *         if not self.pvDX_branch and "pvDX":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pvDX does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvDX")
 */
  __pyx_t_1 = (!(__pyx_v_self->pvDX_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2708
 *         #if not self.pvDX_branch and "pvDX" not in self.complained:
 *         if not self.pvDX_branch and "pvDX":
 *             warnings.warn( "MuTauTree: Expected branch pvDX does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pvDX")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2708; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2708; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2708; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_210));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_210));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_210));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2708; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L193;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2711
 *             #self.complained.add("pvDX")
 *         else:
 *             self.pvDX_branch.SetAddress(<void*>&self.pvDX_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pvDY"
 */
    __pyx_v_self->pvDX_branch->SetAddress(((void *)(&__pyx_v_self->pvDX_value)));
  }
  __pyx_L193:;

  /* "MuTauTree.pyx":2714
 * 
 *         #print "making pvDY"
 *         self.pvDY_branch = the_tree.GetBranch("pvDY")             # <<<<<<<<<<<<<<
 *         #if not self.pvDY_branch and "pvDY" not in self.complained:
 *         if not self.pvDY_branch and "pvDY":
 */
  __pyx_v_self->pvDY_branch = __pyx_v_the_tree->GetBranch(__pyx_k__pvDY);

  /* "MuTauTree.pyx":2716
 *         self.pvDY_branch = the_tree.GetBranch("pvDY")
 *         #if not self.pvDY_branch and "pvDY" not in self.complained:
 *         if not self.pvDY_branch and "pvDY":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pvDY does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvDY")
 */
  __pyx_t_2 = (!(__pyx_v_self->pvDY_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2717
 *         #if not self.pvDY_branch and "pvDY" not in self.complained:
 *         if not self.pvDY_branch and "pvDY":
 *             warnings.warn( "MuTauTree: Expected branch pvDY does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pvDY")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2717; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2717; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2717; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_211));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_211));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_211));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2717; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L194;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2720
 *             #self.complained.add("pvDY")
 *         else:
 *             self.pvDY_branch.SetAddress(<void*>&self.pvDY_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pvDZ"
 */
    __pyx_v_self->pvDY_branch->SetAddress(((void *)(&__pyx_v_self->pvDY_value)));
  }
  __pyx_L194:;

  /* "MuTauTree.pyx":2723
 * 
 *         #print "making pvDZ"
 *         self.pvDZ_branch = the_tree.GetBranch("pvDZ")             # <<<<<<<<<<<<<<
 *         #if not self.pvDZ_branch and "pvDZ" not in self.complained:
 *         if not self.pvDZ_branch and "pvDZ":
 */
  __pyx_v_self->pvDZ_branch = __pyx_v_the_tree->GetBranch(__pyx_k__pvDZ);

  /* "MuTauTree.pyx":2725
 *         self.pvDZ_branch = the_tree.GetBranch("pvDZ")
 *         #if not self.pvDZ_branch and "pvDZ" not in self.complained:
 *         if not self.pvDZ_branch and "pvDZ":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pvDZ does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvDZ")
 */
  __pyx_t_1 = (!(__pyx_v_self->pvDZ_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2726
 *         #if not self.pvDZ_branch and "pvDZ" not in self.complained:
 *         if not self.pvDZ_branch and "pvDZ":
 *             warnings.warn( "MuTauTree: Expected branch pvDZ does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pvDZ")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2726; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2726; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2726; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_212));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_212));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_212));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2726; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L195;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2729
 *             #self.complained.add("pvDZ")
 *         else:
 *             self.pvDZ_branch.SetAddress(<void*>&self.pvDZ_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pvIsFake"
 */
    __pyx_v_self->pvDZ_branch->SetAddress(((void *)(&__pyx_v_self->pvDZ_value)));
  }
  __pyx_L195:;

  /* "MuTauTree.pyx":2732
 * 
 *         #print "making pvIsFake"
 *         self.pvIsFake_branch = the_tree.GetBranch("pvIsFake")             # <<<<<<<<<<<<<<
 *         #if not self.pvIsFake_branch and "pvIsFake" not in self.complained:
 *         if not self.pvIsFake_branch and "pvIsFake":
 */
  __pyx_v_self->pvIsFake_branch = __pyx_v_the_tree->GetBranch(__pyx_k__pvIsFake);

  /* "MuTauTree.pyx":2734
 *         self.pvIsFake_branch = the_tree.GetBranch("pvIsFake")
 *         #if not self.pvIsFake_branch and "pvIsFake" not in self.complained:
 *         if not self.pvIsFake_branch and "pvIsFake":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pvIsFake does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvIsFake")
 */
  __pyx_t_2 = (!(__pyx_v_self->pvIsFake_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2735
 *         #if not self.pvIsFake_branch and "pvIsFake" not in self.complained:
 *         if not self.pvIsFake_branch and "pvIsFake":
 *             warnings.warn( "MuTauTree: Expected branch pvIsFake does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pvIsFake")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2735; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2735; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2735; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_213));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_213));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_213));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2735; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L196;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2738
 *             #self.complained.add("pvIsFake")
 *         else:
 *             self.pvIsFake_branch.SetAddress(<void*>&self.pvIsFake_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pvIsValid"
 */
    __pyx_v_self->pvIsFake_branch->SetAddress(((void *)(&__pyx_v_self->pvIsFake_value)));
  }
  __pyx_L196:;

  /* "MuTauTree.pyx":2741
 * 
 *         #print "making pvIsValid"
 *         self.pvIsValid_branch = the_tree.GetBranch("pvIsValid")             # <<<<<<<<<<<<<<
 *         #if not self.pvIsValid_branch and "pvIsValid" not in self.complained:
 *         if not self.pvIsValid_branch and "pvIsValid":
 */
  __pyx_v_self->pvIsValid_branch = __pyx_v_the_tree->GetBranch(__pyx_k__pvIsValid);

  /* "MuTauTree.pyx":2743
 *         self.pvIsValid_branch = the_tree.GetBranch("pvIsValid")
 *         #if not self.pvIsValid_branch and "pvIsValid" not in self.complained:
 *         if not self.pvIsValid_branch and "pvIsValid":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pvIsValid does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvIsValid")
 */
  __pyx_t_1 = (!(__pyx_v_self->pvIsValid_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2744
 *         #if not self.pvIsValid_branch and "pvIsValid" not in self.complained:
 *         if not self.pvIsValid_branch and "pvIsValid":
 *             warnings.warn( "MuTauTree: Expected branch pvIsValid does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pvIsValid")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2744; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2744; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2744; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_214));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_214));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_214));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2744; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L197;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2747
 *             #self.complained.add("pvIsValid")
 *         else:
 *             self.pvIsValid_branch.SetAddress(<void*>&self.pvIsValid_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pvNormChi2"
 */
    __pyx_v_self->pvIsValid_branch->SetAddress(((void *)(&__pyx_v_self->pvIsValid_value)));
  }
  __pyx_L197:;

  /* "MuTauTree.pyx":2750
 * 
 *         #print "making pvNormChi2"
 *         self.pvNormChi2_branch = the_tree.GetBranch("pvNormChi2")             # <<<<<<<<<<<<<<
 *         #if not self.pvNormChi2_branch and "pvNormChi2" not in self.complained:
 *         if not self.pvNormChi2_branch and "pvNormChi2":
 */
  __pyx_v_self->pvNormChi2_branch = __pyx_v_the_tree->GetBranch(__pyx_k__pvNormChi2);

  /* "MuTauTree.pyx":2752
 *         self.pvNormChi2_branch = the_tree.GetBranch("pvNormChi2")
 *         #if not self.pvNormChi2_branch and "pvNormChi2" not in self.complained:
 *         if not self.pvNormChi2_branch and "pvNormChi2":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pvNormChi2 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvNormChi2")
 */
  __pyx_t_2 = (!(__pyx_v_self->pvNormChi2_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2753
 *         #if not self.pvNormChi2_branch and "pvNormChi2" not in self.complained:
 *         if not self.pvNormChi2_branch and "pvNormChi2":
 *             warnings.warn( "MuTauTree: Expected branch pvNormChi2 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pvNormChi2")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2753; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2753; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2753; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_215));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_215));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_215));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2753; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L198;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2756
 *             #self.complained.add("pvNormChi2")
 *         else:
 *             self.pvNormChi2_branch.SetAddress(<void*>&self.pvNormChi2_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pvX"
 */
    __pyx_v_self->pvNormChi2_branch->SetAddress(((void *)(&__pyx_v_self->pvNormChi2_value)));
  }
  __pyx_L198:;

  /* "MuTauTree.pyx":2759
 * 
 *         #print "making pvX"
 *         self.pvX_branch = the_tree.GetBranch("pvX")             # <<<<<<<<<<<<<<
 *         #if not self.pvX_branch and "pvX" not in self.complained:
 *         if not self.pvX_branch and "pvX":
 */
  __pyx_v_self->pvX_branch = __pyx_v_the_tree->GetBranch(__pyx_k__pvX);

  /* "MuTauTree.pyx":2761
 *         self.pvX_branch = the_tree.GetBranch("pvX")
 *         #if not self.pvX_branch and "pvX" not in self.complained:
 *         if not self.pvX_branch and "pvX":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pvX does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvX")
 */
  __pyx_t_1 = (!(__pyx_v_self->pvX_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2762
 *         #if not self.pvX_branch and "pvX" not in self.complained:
 *         if not self.pvX_branch and "pvX":
 *             warnings.warn( "MuTauTree: Expected branch pvX does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pvX")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2762; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2762; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2762; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_216));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_216));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_216));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2762; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L199;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2765
 *             #self.complained.add("pvX")
 *         else:
 *             self.pvX_branch.SetAddress(<void*>&self.pvX_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pvY"
 */
    __pyx_v_self->pvX_branch->SetAddress(((void *)(&__pyx_v_self->pvX_value)));
  }
  __pyx_L199:;

  /* "MuTauTree.pyx":2768
 * 
 *         #print "making pvY"
 *         self.pvY_branch = the_tree.GetBranch("pvY")             # <<<<<<<<<<<<<<
 *         #if not self.pvY_branch and "pvY" not in self.complained:
 *         if not self.pvY_branch and "pvY":
 */
  __pyx_v_self->pvY_branch = __pyx_v_the_tree->GetBranch(__pyx_k__pvY);

  /* "MuTauTree.pyx":2770
 *         self.pvY_branch = the_tree.GetBranch("pvY")
 *         #if not self.pvY_branch and "pvY" not in self.complained:
 *         if not self.pvY_branch and "pvY":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pvY does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvY")
 */
  __pyx_t_2 = (!(__pyx_v_self->pvY_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2771
 *         #if not self.pvY_branch and "pvY" not in self.complained:
 *         if not self.pvY_branch and "pvY":
 *             warnings.warn( "MuTauTree: Expected branch pvY does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pvY")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2771; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2771; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2771; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_217));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_217));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_217));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2771; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L200;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2774
 *             #self.complained.add("pvY")
 *         else:
 *             self.pvY_branch.SetAddress(<void*>&self.pvY_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pvZ"
 */
    __pyx_v_self->pvY_branch->SetAddress(((void *)(&__pyx_v_self->pvY_value)));
  }
  __pyx_L200:;

  /* "MuTauTree.pyx":2777
 * 
 *         #print "making pvZ"
 *         self.pvZ_branch = the_tree.GetBranch("pvZ")             # <<<<<<<<<<<<<<
 *         #if not self.pvZ_branch and "pvZ" not in self.complained:
 *         if not self.pvZ_branch and "pvZ":
 */
  __pyx_v_self->pvZ_branch = __pyx_v_the_tree->GetBranch(__pyx_k__pvZ);

  /* "MuTauTree.pyx":2779
 *         self.pvZ_branch = the_tree.GetBranch("pvZ")
 *         #if not self.pvZ_branch and "pvZ" not in self.complained:
 *         if not self.pvZ_branch and "pvZ":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pvZ does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvZ")
 */
  __pyx_t_1 = (!(__pyx_v_self->pvZ_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2780
 *         #if not self.pvZ_branch and "pvZ" not in self.complained:
 *         if not self.pvZ_branch and "pvZ":
 *             warnings.warn( "MuTauTree: Expected branch pvZ does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pvZ")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2780; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2780; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2780; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_218));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_218));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_218));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2780; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L201;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2783
 *             #self.complained.add("pvZ")
 *         else:
 *             self.pvZ_branch.SetAddress(<void*>&self.pvZ_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making pvndof"
 */
    __pyx_v_self->pvZ_branch->SetAddress(((void *)(&__pyx_v_self->pvZ_value)));
  }
  __pyx_L201:;

  /* "MuTauTree.pyx":2786
 * 
 *         #print "making pvndof"
 *         self.pvndof_branch = the_tree.GetBranch("pvndof")             # <<<<<<<<<<<<<<
 *         #if not self.pvndof_branch and "pvndof" not in self.complained:
 *         if not self.pvndof_branch and "pvndof":
 */
  __pyx_v_self->pvndof_branch = __pyx_v_the_tree->GetBranch(__pyx_k__pvndof);

  /* "MuTauTree.pyx":2788
 *         self.pvndof_branch = the_tree.GetBranch("pvndof")
 *         #if not self.pvndof_branch and "pvndof" not in self.complained:
 *         if not self.pvndof_branch and "pvndof":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch pvndof does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("pvndof")
 */
  __pyx_t_2 = (!(__pyx_v_self->pvndof_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2789
 *         #if not self.pvndof_branch and "pvndof" not in self.complained:
 *         if not self.pvndof_branch and "pvndof":
 *             warnings.warn( "MuTauTree: Expected branch pvndof does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("pvndof")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2789; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2789; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2789; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_219));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_219));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_219));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2789; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L202;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2792
 *             #self.complained.add("pvndof")
 *         else:
 *             self.pvndof_branch.SetAddress(<void*>&self.pvndof_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making recoilDaught"
 */
    __pyx_v_self->pvndof_branch->SetAddress(((void *)(&__pyx_v_self->pvndof_value)));
  }
  __pyx_L202:;

  /* "MuTauTree.pyx":2795
 * 
 *         #print "making recoilDaught"
 *         self.recoilDaught_branch = the_tree.GetBranch("recoilDaught")             # <<<<<<<<<<<<<<
 *         #if not self.recoilDaught_branch and "recoilDaught" not in self.complained:
 *         if not self.recoilDaught_branch and "recoilDaught":
 */
  __pyx_v_self->recoilDaught_branch = __pyx_v_the_tree->GetBranch(__pyx_k__recoilDaught);

  /* "MuTauTree.pyx":2797
 *         self.recoilDaught_branch = the_tree.GetBranch("recoilDaught")
 *         #if not self.recoilDaught_branch and "recoilDaught" not in self.complained:
 *         if not self.recoilDaught_branch and "recoilDaught":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch recoilDaught does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("recoilDaught")
 */
  __pyx_t_1 = (!(__pyx_v_self->recoilDaught_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2798
 *         #if not self.recoilDaught_branch and "recoilDaught" not in self.complained:
 *         if not self.recoilDaught_branch and "recoilDaught":
 *             warnings.warn( "MuTauTree: Expected branch recoilDaught does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("recoilDaught")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2798; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2798; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2798; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_220));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_220));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_220));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2798; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L203;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2801
 *             #self.complained.add("recoilDaught")
 *         else:
 *             self.recoilDaught_branch.SetAddress(<void*>&self.recoilDaught_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making recoilWithMet"
 */
    __pyx_v_self->recoilDaught_branch->SetAddress(((void *)(&__pyx_v_self->recoilDaught_value)));
  }
  __pyx_L203:;

  /* "MuTauTree.pyx":2804
 * 
 *         #print "making recoilWithMet"
 *         self.recoilWithMet_branch = the_tree.GetBranch("recoilWithMet")             # <<<<<<<<<<<<<<
 *         #if not self.recoilWithMet_branch and "recoilWithMet" not in self.complained:
 *         if not self.recoilWithMet_branch and "recoilWithMet":
 */
  __pyx_v_self->recoilWithMet_branch = __pyx_v_the_tree->GetBranch(__pyx_k__recoilWithMet);

  /* "MuTauTree.pyx":2806
 *         self.recoilWithMet_branch = the_tree.GetBranch("recoilWithMet")
 *         #if not self.recoilWithMet_branch and "recoilWithMet" not in self.complained:
 *         if not self.recoilWithMet_branch and "recoilWithMet":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch recoilWithMet does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("recoilWithMet")
 */
  __pyx_t_2 = (!(__pyx_v_self->recoilWithMet_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2807
 *         #if not self.recoilWithMet_branch and "recoilWithMet" not in self.complained:
 *         if not self.recoilWithMet_branch and "recoilWithMet":
 *             warnings.warn( "MuTauTree: Expected branch recoilWithMet does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("recoilWithMet")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2807; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2807; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2807; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_221));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_221));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_221));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2807; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L204;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2810
 *             #self.complained.add("recoilWithMet")
 *         else:
 *             self.recoilWithMet_branch.SetAddress(<void*>&self.recoilWithMet_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making rho"
 */
    __pyx_v_self->recoilWithMet_branch->SetAddress(((void *)(&__pyx_v_self->recoilWithMet_value)));
  }
  __pyx_L204:;

  /* "MuTauTree.pyx":2813
 * 
 *         #print "making rho"
 *         self.rho_branch = the_tree.GetBranch("rho")             # <<<<<<<<<<<<<<
 *         #if not self.rho_branch and "rho" not in self.complained:
 *         if not self.rho_branch and "rho":
 */
  __pyx_v_self->rho_branch = __pyx_v_the_tree->GetBranch(__pyx_k__rho);

  /* "MuTauTree.pyx":2815
 *         self.rho_branch = the_tree.GetBranch("rho")
 *         #if not self.rho_branch and "rho" not in self.complained:
 *         if not self.rho_branch and "rho":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch rho does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("rho")
 */
  __pyx_t_1 = (!(__pyx_v_self->rho_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2816
 *         #if not self.rho_branch and "rho" not in self.complained:
 *         if not self.rho_branch and "rho":
 *             warnings.warn( "MuTauTree: Expected branch rho does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("rho")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2816; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2816; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2816; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_222));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_222));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_222));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2816; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L205;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2819
 *             #self.complained.add("rho")
 *         else:
 *             self.rho_branch.SetAddress(<void*>&self.rho_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making run"
 */
    __pyx_v_self->rho_branch->SetAddress(((void *)(&__pyx_v_self->rho_value)));
  }
  __pyx_L205:;

  /* "MuTauTree.pyx":2822
 * 
 *         #print "making run"
 *         self.run_branch = the_tree.GetBranch("run")             # <<<<<<<<<<<<<<
 *         #if not self.run_branch and "run" not in self.complained:
 *         if not self.run_branch and "run":
 */
  __pyx_v_self->run_branch = __pyx_v_the_tree->GetBranch(__pyx_k__run);

  /* "MuTauTree.pyx":2824
 *         self.run_branch = the_tree.GetBranch("run")
 *         #if not self.run_branch and "run" not in self.complained:
 *         if not self.run_branch and "run":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch run does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("run")
 */
  __pyx_t_2 = (!(__pyx_v_self->run_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2825
 *         #if not self.run_branch and "run" not in self.complained:
 *         if not self.run_branch and "run":
 *             warnings.warn( "MuTauTree: Expected branch run does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("run")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2825; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2825; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2825; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_223));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_223));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_223));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2825; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L206;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2828
 *             #self.complained.add("run")
 *         else:
 *             self.run_branch.SetAddress(<void*>&self.run_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making singleEGroup"
 */
    __pyx_v_self->run_branch->SetAddress(((void *)(&__pyx_v_self->run_value)));
  }
  __pyx_L206:;

  /* "MuTauTree.pyx":2831
 * 
 *         #print "making singleEGroup"
 *         self.singleEGroup_branch = the_tree.GetBranch("singleEGroup")             # <<<<<<<<<<<<<<
 *         #if not self.singleEGroup_branch and "singleEGroup" not in self.complained:
 *         if not self.singleEGroup_branch and "singleEGroup":
 */
  __pyx_v_self->singleEGroup_branch = __pyx_v_the_tree->GetBranch(__pyx_k__singleEGroup);

  /* "MuTauTree.pyx":2833
 *         self.singleEGroup_branch = the_tree.GetBranch("singleEGroup")
 *         #if not self.singleEGroup_branch and "singleEGroup" not in self.complained:
 *         if not self.singleEGroup_branch and "singleEGroup":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleEGroup does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleEGroup")
 */
  __pyx_t_1 = (!(__pyx_v_self->singleEGroup_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2834
 *         #if not self.singleEGroup_branch and "singleEGroup" not in self.complained:
 *         if not self.singleEGroup_branch and "singleEGroup":
 *             warnings.warn( "MuTauTree: Expected branch singleEGroup does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("singleEGroup")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2834; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2834; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2834; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_224));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_224));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_224));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2834; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L207;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2837
 *             #self.complained.add("singleEGroup")
 *         else:
 *             self.singleEGroup_branch.SetAddress(<void*>&self.singleEGroup_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making singleEPFMTGroup"
 */
    __pyx_v_self->singleEGroup_branch->SetAddress(((void *)(&__pyx_v_self->singleEGroup_value)));
  }
  __pyx_L207:;

  /* "MuTauTree.pyx":2840
 * 
 *         #print "making singleEPFMTGroup"
 *         self.singleEPFMTGroup_branch = the_tree.GetBranch("singleEPFMTGroup")             # <<<<<<<<<<<<<<
 *         #if not self.singleEPFMTGroup_branch and "singleEPFMTGroup" not in self.complained:
 *         if not self.singleEPFMTGroup_branch and "singleEPFMTGroup":
 */
  __pyx_v_self->singleEPFMTGroup_branch = __pyx_v_the_tree->GetBranch(__pyx_k__singleEPFMTGroup);

  /* "MuTauTree.pyx":2842
 *         self.singleEPFMTGroup_branch = the_tree.GetBranch("singleEPFMTGroup")
 *         #if not self.singleEPFMTGroup_branch and "singleEPFMTGroup" not in self.complained:
 *         if not self.singleEPFMTGroup_branch and "singleEPFMTGroup":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleEPFMTGroup does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleEPFMTGroup")
 */
  __pyx_t_2 = (!(__pyx_v_self->singleEPFMTGroup_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2843
 *         #if not self.singleEPFMTGroup_branch and "singleEPFMTGroup" not in self.complained:
 *         if not self.singleEPFMTGroup_branch and "singleEPFMTGroup":
 *             warnings.warn( "MuTauTree: Expected branch singleEPFMTGroup does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("singleEPFMTGroup")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2843; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2843; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2843; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_225));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_225));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_225));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2843; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L208;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2846
 *             #self.complained.add("singleEPFMTGroup")
 *         else:
 *             self.singleEPFMTGroup_branch.SetAddress(<void*>&self.singleEPFMTGroup_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making singleEPFMTPass"
 */
    __pyx_v_self->singleEPFMTGroup_branch->SetAddress(((void *)(&__pyx_v_self->singleEPFMTGroup_value)));
  }
  __pyx_L208:;

  /* "MuTauTree.pyx":2849
 * 
 *         #print "making singleEPFMTPass"
 *         self.singleEPFMTPass_branch = the_tree.GetBranch("singleEPFMTPass")             # <<<<<<<<<<<<<<
 *         #if not self.singleEPFMTPass_branch and "singleEPFMTPass" not in self.complained:
 *         if not self.singleEPFMTPass_branch and "singleEPFMTPass":
 */
  __pyx_v_self->singleEPFMTPass_branch = __pyx_v_the_tree->GetBranch(__pyx_k__singleEPFMTPass);

  /* "MuTauTree.pyx":2851
 *         self.singleEPFMTPass_branch = the_tree.GetBranch("singleEPFMTPass")
 *         #if not self.singleEPFMTPass_branch and "singleEPFMTPass" not in self.complained:
 *         if not self.singleEPFMTPass_branch and "singleEPFMTPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleEPFMTPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleEPFMTPass")
 */
  __pyx_t_1 = (!(__pyx_v_self->singleEPFMTPass_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2852
 *         #if not self.singleEPFMTPass_branch and "singleEPFMTPass" not in self.complained:
 *         if not self.singleEPFMTPass_branch and "singleEPFMTPass":
 *             warnings.warn( "MuTauTree: Expected branch singleEPFMTPass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("singleEPFMTPass")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2852; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2852; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2852; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_226));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_226));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_226));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2852; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L209;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2855
 *             #self.complained.add("singleEPFMTPass")
 *         else:
 *             self.singleEPFMTPass_branch.SetAddress(<void*>&self.singleEPFMTPass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making singleEPFMTPrescale"
 */
    __pyx_v_self->singleEPFMTPass_branch->SetAddress(((void *)(&__pyx_v_self->singleEPFMTPass_value)));
  }
  __pyx_L209:;

  /* "MuTauTree.pyx":2858
 * 
 *         #print "making singleEPFMTPrescale"
 *         self.singleEPFMTPrescale_branch = the_tree.GetBranch("singleEPFMTPrescale")             # <<<<<<<<<<<<<<
 *         #if not self.singleEPFMTPrescale_branch and "singleEPFMTPrescale" not in self.complained:
 *         if not self.singleEPFMTPrescale_branch and "singleEPFMTPrescale":
 */
  __pyx_v_self->singleEPFMTPrescale_branch = __pyx_v_the_tree->GetBranch(__pyx_k__singleEPFMTPrescale);

  /* "MuTauTree.pyx":2860
 *         self.singleEPFMTPrescale_branch = the_tree.GetBranch("singleEPFMTPrescale")
 *         #if not self.singleEPFMTPrescale_branch and "singleEPFMTPrescale" not in self.complained:
 *         if not self.singleEPFMTPrescale_branch and "singleEPFMTPrescale":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleEPFMTPrescale does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleEPFMTPrescale")
 */
  __pyx_t_2 = (!(__pyx_v_self->singleEPFMTPrescale_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2861
 *         #if not self.singleEPFMTPrescale_branch and "singleEPFMTPrescale" not in self.complained:
 *         if not self.singleEPFMTPrescale_branch and "singleEPFMTPrescale":
 *             warnings.warn( "MuTauTree: Expected branch singleEPFMTPrescale does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("singleEPFMTPrescale")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2861; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2861; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2861; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_227));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_227));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_227));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2861; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L210;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2864
 *             #self.complained.add("singleEPFMTPrescale")
 *         else:
 *             self.singleEPFMTPrescale_branch.SetAddress(<void*>&self.singleEPFMTPrescale_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making singleEPass"
 */
    __pyx_v_self->singleEPFMTPrescale_branch->SetAddress(((void *)(&__pyx_v_self->singleEPFMTPrescale_value)));
  }
  __pyx_L210:;

  /* "MuTauTree.pyx":2867
 * 
 *         #print "making singleEPass"
 *         self.singleEPass_branch = the_tree.GetBranch("singleEPass")             # <<<<<<<<<<<<<<
 *         #if not self.singleEPass_branch and "singleEPass" not in self.complained:
 *         if not self.singleEPass_branch and "singleEPass":
 */
  __pyx_v_self->singleEPass_branch = __pyx_v_the_tree->GetBranch(__pyx_k__singleEPass);

  /* "MuTauTree.pyx":2869
 *         self.singleEPass_branch = the_tree.GetBranch("singleEPass")
 *         #if not self.singleEPass_branch and "singleEPass" not in self.complained:
 *         if not self.singleEPass_branch and "singleEPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleEPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleEPass")
 */
  __pyx_t_1 = (!(__pyx_v_self->singleEPass_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2870
 *         #if not self.singleEPass_branch and "singleEPass" not in self.complained:
 *         if not self.singleEPass_branch and "singleEPass":
 *             warnings.warn( "MuTauTree: Expected branch singleEPass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("singleEPass")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2870; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2870; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2870; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_228));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_228));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_228));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2870; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L211;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2873
 *             #self.complained.add("singleEPass")
 *         else:
 *             self.singleEPass_branch.SetAddress(<void*>&self.singleEPass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making singleEPrescale"
 */
    __pyx_v_self->singleEPass_branch->SetAddress(((void *)(&__pyx_v_self->singleEPass_value)));
  }
  __pyx_L211:;

  /* "MuTauTree.pyx":2876
 * 
 *         #print "making singleEPrescale"
 *         self.singleEPrescale_branch = the_tree.GetBranch("singleEPrescale")             # <<<<<<<<<<<<<<
 *         #if not self.singleEPrescale_branch and "singleEPrescale" not in self.complained:
 *         if not self.singleEPrescale_branch and "singleEPrescale":
 */
  __pyx_v_self->singleEPrescale_branch = __pyx_v_the_tree->GetBranch(__pyx_k__singleEPrescale);

  /* "MuTauTree.pyx":2878
 *         self.singleEPrescale_branch = the_tree.GetBranch("singleEPrescale")
 *         #if not self.singleEPrescale_branch and "singleEPrescale" not in self.complained:
 *         if not self.singleEPrescale_branch and "singleEPrescale":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleEPrescale does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleEPrescale")
 */
  __pyx_t_2 = (!(__pyx_v_self->singleEPrescale_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2879
 *         #if not self.singleEPrescale_branch and "singleEPrescale" not in self.complained:
 *         if not self.singleEPrescale_branch and "singleEPrescale":
 *             warnings.warn( "MuTauTree: Expected branch singleEPrescale does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("singleEPrescale")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2879; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2879; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2879; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_229));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_229));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_229));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2879; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L212;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2882
 *             #self.complained.add("singleEPrescale")
 *         else:
 *             self.singleEPrescale_branch.SetAddress(<void*>&self.singleEPrescale_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making singleMuGroup"
 */
    __pyx_v_self->singleEPrescale_branch->SetAddress(((void *)(&__pyx_v_self->singleEPrescale_value)));
  }
  __pyx_L212:;

  /* "MuTauTree.pyx":2885
 * 
 *         #print "making singleMuGroup"
 *         self.singleMuGroup_branch = the_tree.GetBranch("singleMuGroup")             # <<<<<<<<<<<<<<
 *         #if not self.singleMuGroup_branch and "singleMuGroup" not in self.complained:
 *         if not self.singleMuGroup_branch and "singleMuGroup":
 */
  __pyx_v_self->singleMuGroup_branch = __pyx_v_the_tree->GetBranch(__pyx_k__singleMuGroup);

  /* "MuTauTree.pyx":2887
 *         self.singleMuGroup_branch = the_tree.GetBranch("singleMuGroup")
 *         #if not self.singleMuGroup_branch and "singleMuGroup" not in self.complained:
 *         if not self.singleMuGroup_branch and "singleMuGroup":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleMuGroup does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleMuGroup")
 */
  __pyx_t_1 = (!(__pyx_v_self->singleMuGroup_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2888
 *         #if not self.singleMuGroup_branch and "singleMuGroup" not in self.complained:
 *         if not self.singleMuGroup_branch and "singleMuGroup":
 *             warnings.warn( "MuTauTree: Expected branch singleMuGroup does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("singleMuGroup")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2888; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2888; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2888; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_230));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_230));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_230));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2888; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L213;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2891
 *             #self.complained.add("singleMuGroup")
 *         else:
 *             self.singleMuGroup_branch.SetAddress(<void*>&self.singleMuGroup_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making singleMuPass"
 */
    __pyx_v_self->singleMuGroup_branch->SetAddress(((void *)(&__pyx_v_self->singleMuGroup_value)));
  }
  __pyx_L213:;

  /* "MuTauTree.pyx":2894
 * 
 *         #print "making singleMuPass"
 *         self.singleMuPass_branch = the_tree.GetBranch("singleMuPass")             # <<<<<<<<<<<<<<
 *         #if not self.singleMuPass_branch and "singleMuPass" not in self.complained:
 *         if not self.singleMuPass_branch and "singleMuPass":
 */
  __pyx_v_self->singleMuPass_branch = __pyx_v_the_tree->GetBranch(__pyx_k__singleMuPass);

  /* "MuTauTree.pyx":2896
 *         self.singleMuPass_branch = the_tree.GetBranch("singleMuPass")
 *         #if not self.singleMuPass_branch and "singleMuPass" not in self.complained:
 *         if not self.singleMuPass_branch and "singleMuPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleMuPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleMuPass")
 */
  __pyx_t_2 = (!(__pyx_v_self->singleMuPass_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2897
 *         #if not self.singleMuPass_branch and "singleMuPass" not in self.complained:
 *         if not self.singleMuPass_branch and "singleMuPass":
 *             warnings.warn( "MuTauTree: Expected branch singleMuPass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("singleMuPass")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2897; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2897; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2897; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_231));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_231));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_231));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2897; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L214;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2900
 *             #self.complained.add("singleMuPass")
 *         else:
 *             self.singleMuPass_branch.SetAddress(<void*>&self.singleMuPass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making singleMuPrescale"
 */
    __pyx_v_self->singleMuPass_branch->SetAddress(((void *)(&__pyx_v_self->singleMuPass_value)));
  }
  __pyx_L214:;

  /* "MuTauTree.pyx":2903
 * 
 *         #print "making singleMuPrescale"
 *         self.singleMuPrescale_branch = the_tree.GetBranch("singleMuPrescale")             # <<<<<<<<<<<<<<
 *         #if not self.singleMuPrescale_branch and "singleMuPrescale" not in self.complained:
 *         if not self.singleMuPrescale_branch and "singleMuPrescale":
 */
  __pyx_v_self->singleMuPrescale_branch = __pyx_v_the_tree->GetBranch(__pyx_k__singleMuPrescale);

  /* "MuTauTree.pyx":2905
 *         self.singleMuPrescale_branch = the_tree.GetBranch("singleMuPrescale")
 *         #if not self.singleMuPrescale_branch and "singleMuPrescale" not in self.complained:
 *         if not self.singleMuPrescale_branch and "singleMuPrescale":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singleMuPrescale does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singleMuPrescale")
 */
  __pyx_t_1 = (!(__pyx_v_self->singleMuPrescale_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2906
 *         #if not self.singleMuPrescale_branch and "singleMuPrescale" not in self.complained:
 *         if not self.singleMuPrescale_branch and "singleMuPrescale":
 *             warnings.warn( "MuTauTree: Expected branch singleMuPrescale does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("singleMuPrescale")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2906; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2906; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2906; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_232));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_232));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_232));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2906; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L215;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2909
 *             #self.complained.add("singleMuPrescale")
 *         else:
 *             self.singleMuPrescale_branch.SetAddress(<void*>&self.singleMuPrescale_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making singlePhoGroup"
 */
    __pyx_v_self->singleMuPrescale_branch->SetAddress(((void *)(&__pyx_v_self->singleMuPrescale_value)));
  }
  __pyx_L215:;

  /* "MuTauTree.pyx":2912
 * 
 *         #print "making singlePhoGroup"
 *         self.singlePhoGroup_branch = the_tree.GetBranch("singlePhoGroup")             # <<<<<<<<<<<<<<
 *         #if not self.singlePhoGroup_branch and "singlePhoGroup" not in self.complained:
 *         if not self.singlePhoGroup_branch and "singlePhoGroup":
 */
  __pyx_v_self->singlePhoGroup_branch = __pyx_v_the_tree->GetBranch(__pyx_k__singlePhoGroup);

  /* "MuTauTree.pyx":2914
 *         self.singlePhoGroup_branch = the_tree.GetBranch("singlePhoGroup")
 *         #if not self.singlePhoGroup_branch and "singlePhoGroup" not in self.complained:
 *         if not self.singlePhoGroup_branch and "singlePhoGroup":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singlePhoGroup does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singlePhoGroup")
 */
  __pyx_t_2 = (!(__pyx_v_self->singlePhoGroup_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2915
 *         #if not self.singlePhoGroup_branch and "singlePhoGroup" not in self.complained:
 *         if not self.singlePhoGroup_branch and "singlePhoGroup":
 *             warnings.warn( "MuTauTree: Expected branch singlePhoGroup does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("singlePhoGroup")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2915; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2915; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2915; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_233));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_233));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_233));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2915; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L216;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2918
 *             #self.complained.add("singlePhoGroup")
 *         else:
 *             self.singlePhoGroup_branch.SetAddress(<void*>&self.singlePhoGroup_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making singlePhoPass"
 */
    __pyx_v_self->singlePhoGroup_branch->SetAddress(((void *)(&__pyx_v_self->singlePhoGroup_value)));
  }
  __pyx_L216:;

  /* "MuTauTree.pyx":2921
 * 
 *         #print "making singlePhoPass"
 *         self.singlePhoPass_branch = the_tree.GetBranch("singlePhoPass")             # <<<<<<<<<<<<<<
 *         #if not self.singlePhoPass_branch and "singlePhoPass" not in self.complained:
 *         if not self.singlePhoPass_branch and "singlePhoPass":
 */
  __pyx_v_self->singlePhoPass_branch = __pyx_v_the_tree->GetBranch(__pyx_k__singlePhoPass);

  /* "MuTauTree.pyx":2923
 *         self.singlePhoPass_branch = the_tree.GetBranch("singlePhoPass")
 *         #if not self.singlePhoPass_branch and "singlePhoPass" not in self.complained:
 *         if not self.singlePhoPass_branch and "singlePhoPass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singlePhoPass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singlePhoPass")
 */
  __pyx_t_1 = (!(__pyx_v_self->singlePhoPass_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2924
 *         #if not self.singlePhoPass_branch and "singlePhoPass" not in self.complained:
 *         if not self.singlePhoPass_branch and "singlePhoPass":
 *             warnings.warn( "MuTauTree: Expected branch singlePhoPass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("singlePhoPass")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2924; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2924; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2924; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_234));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_234));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_234));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2924; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L217;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2927
 *             #self.complained.add("singlePhoPass")
 *         else:
 *             self.singlePhoPass_branch.SetAddress(<void*>&self.singlePhoPass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making singlePhoPrescale"
 */
    __pyx_v_self->singlePhoPass_branch->SetAddress(((void *)(&__pyx_v_self->singlePhoPass_value)));
  }
  __pyx_L217:;

  /* "MuTauTree.pyx":2930
 * 
 *         #print "making singlePhoPrescale"
 *         self.singlePhoPrescale_branch = the_tree.GetBranch("singlePhoPrescale")             # <<<<<<<<<<<<<<
 *         #if not self.singlePhoPrescale_branch and "singlePhoPrescale" not in self.complained:
 *         if not self.singlePhoPrescale_branch and "singlePhoPrescale":
 */
  __pyx_v_self->singlePhoPrescale_branch = __pyx_v_the_tree->GetBranch(__pyx_k__singlePhoPrescale);

  /* "MuTauTree.pyx":2932
 *         self.singlePhoPrescale_branch = the_tree.GetBranch("singlePhoPrescale")
 *         #if not self.singlePhoPrescale_branch and "singlePhoPrescale" not in self.complained:
 *         if not self.singlePhoPrescale_branch and "singlePhoPrescale":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch singlePhoPrescale does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("singlePhoPrescale")
 */
  __pyx_t_2 = (!(__pyx_v_self->singlePhoPrescale_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2933
 *         #if not self.singlePhoPrescale_branch and "singlePhoPrescale" not in self.complained:
 *         if not self.singlePhoPrescale_branch and "singlePhoPrescale":
 *             warnings.warn( "MuTauTree: Expected branch singlePhoPrescale does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("singlePhoPrescale")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2933; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2933; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2933; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_235));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_235));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_235));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2933; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L218;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2936
 *             #self.complained.add("singlePhoPrescale")
 *         else:
 *             self.singlePhoPrescale_branch.SetAddress(<void*>&self.singlePhoPrescale_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tAbsEta"
 */
    __pyx_v_self->singlePhoPrescale_branch->SetAddress(((void *)(&__pyx_v_self->singlePhoPrescale_value)));
  }
  __pyx_L218:;

  /* "MuTauTree.pyx":2939
 * 
 *         #print "making tAbsEta"
 *         self.tAbsEta_branch = the_tree.GetBranch("tAbsEta")             # <<<<<<<<<<<<<<
 *         #if not self.tAbsEta_branch and "tAbsEta" not in self.complained:
 *         if not self.tAbsEta_branch and "tAbsEta":
 */
  __pyx_v_self->tAbsEta_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tAbsEta);

  /* "MuTauTree.pyx":2941
 *         self.tAbsEta_branch = the_tree.GetBranch("tAbsEta")
 *         #if not self.tAbsEta_branch and "tAbsEta" not in self.complained:
 *         if not self.tAbsEta_branch and "tAbsEta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tAbsEta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tAbsEta")
 */
  __pyx_t_1 = (!(__pyx_v_self->tAbsEta_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2942
 *         #if not self.tAbsEta_branch and "tAbsEta" not in self.complained:
 *         if not self.tAbsEta_branch and "tAbsEta":
 *             warnings.warn( "MuTauTree: Expected branch tAbsEta does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tAbsEta")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2942; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2942; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2942; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_236));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_236));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_236));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2942; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L219;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2945
 *             #self.complained.add("tAbsEta")
 *         else:
 *             self.tAbsEta_branch.SetAddress(<void*>&self.tAbsEta_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tAntiElectronLoose"
 */
    __pyx_v_self->tAbsEta_branch->SetAddress(((void *)(&__pyx_v_self->tAbsEta_value)));
  }
  __pyx_L219:;

  /* "MuTauTree.pyx":2948
 * 
 *         #print "making tAntiElectronLoose"
 *         self.tAntiElectronLoose_branch = the_tree.GetBranch("tAntiElectronLoose")             # <<<<<<<<<<<<<<
 *         #if not self.tAntiElectronLoose_branch and "tAntiElectronLoose" not in self.complained:
 *         if not self.tAntiElectronLoose_branch and "tAntiElectronLoose":
 */
  __pyx_v_self->tAntiElectronLoose_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tAntiElectronLoose);

  /* "MuTauTree.pyx":2950
 *         self.tAntiElectronLoose_branch = the_tree.GetBranch("tAntiElectronLoose")
 *         #if not self.tAntiElectronLoose_branch and "tAntiElectronLoose" not in self.complained:
 *         if not self.tAntiElectronLoose_branch and "tAntiElectronLoose":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tAntiElectronLoose does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tAntiElectronLoose")
 */
  __pyx_t_2 = (!(__pyx_v_self->tAntiElectronLoose_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2951
 *         #if not self.tAntiElectronLoose_branch and "tAntiElectronLoose" not in self.complained:
 *         if not self.tAntiElectronLoose_branch and "tAntiElectronLoose":
 *             warnings.warn( "MuTauTree: Expected branch tAntiElectronLoose does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tAntiElectronLoose")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2951; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2951; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2951; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_237));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_237));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_237));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2951; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L220;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2954
 *             #self.complained.add("tAntiElectronLoose")
 *         else:
 *             self.tAntiElectronLoose_branch.SetAddress(<void*>&self.tAntiElectronLoose_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tAntiElectronMVA"
 */
    __pyx_v_self->tAntiElectronLoose_branch->SetAddress(((void *)(&__pyx_v_self->tAntiElectronLoose_value)));
  }
  __pyx_L220:;

  /* "MuTauTree.pyx":2957
 * 
 *         #print "making tAntiElectronMVA"
 *         self.tAntiElectronMVA_branch = the_tree.GetBranch("tAntiElectronMVA")             # <<<<<<<<<<<<<<
 *         #if not self.tAntiElectronMVA_branch and "tAntiElectronMVA" not in self.complained:
 *         if not self.tAntiElectronMVA_branch and "tAntiElectronMVA":
 */
  __pyx_v_self->tAntiElectronMVA_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tAntiElectronMVA);

  /* "MuTauTree.pyx":2959
 *         self.tAntiElectronMVA_branch = the_tree.GetBranch("tAntiElectronMVA")
 *         #if not self.tAntiElectronMVA_branch and "tAntiElectronMVA" not in self.complained:
 *         if not self.tAntiElectronMVA_branch and "tAntiElectronMVA":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tAntiElectronMVA does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tAntiElectronMVA")
 */
  __pyx_t_1 = (!(__pyx_v_self->tAntiElectronMVA_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2960
 *         #if not self.tAntiElectronMVA_branch and "tAntiElectronMVA" not in self.complained:
 *         if not self.tAntiElectronMVA_branch and "tAntiElectronMVA":
 *             warnings.warn( "MuTauTree: Expected branch tAntiElectronMVA does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tAntiElectronMVA")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2960; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2960; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2960; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_238));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_238));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_238));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2960; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L221;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2963
 *             #self.complained.add("tAntiElectronMVA")
 *         else:
 *             self.tAntiElectronMVA_branch.SetAddress(<void*>&self.tAntiElectronMVA_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tAntiElectronMVA2Loose"
 */
    __pyx_v_self->tAntiElectronMVA_branch->SetAddress(((void *)(&__pyx_v_self->tAntiElectronMVA_value)));
  }
  __pyx_L221:;

  /* "MuTauTree.pyx":2966
 * 
 *         #print "making tAntiElectronMVA2Loose"
 *         self.tAntiElectronMVA2Loose_branch = the_tree.GetBranch("tAntiElectronMVA2Loose")             # <<<<<<<<<<<<<<
 *         #if not self.tAntiElectronMVA2Loose_branch and "tAntiElectronMVA2Loose" not in self.complained:
 *         if not self.tAntiElectronMVA2Loose_branch and "tAntiElectronMVA2Loose":
 */
  __pyx_v_self->tAntiElectronMVA2Loose_branch = __pyx_v_the_tree->GetBranch(__pyx_k_239);

  /* "MuTauTree.pyx":2968
 *         self.tAntiElectronMVA2Loose_branch = the_tree.GetBranch("tAntiElectronMVA2Loose")
 *         #if not self.tAntiElectronMVA2Loose_branch and "tAntiElectronMVA2Loose" not in self.complained:
 *         if not self.tAntiElectronMVA2Loose_branch and "tAntiElectronMVA2Loose":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tAntiElectronMVA2Loose does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tAntiElectronMVA2Loose")
 */
  __pyx_t_2 = (!(__pyx_v_self->tAntiElectronMVA2Loose_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2969
 *         #if not self.tAntiElectronMVA2Loose_branch and "tAntiElectronMVA2Loose" not in self.complained:
 *         if not self.tAntiElectronMVA2Loose_branch and "tAntiElectronMVA2Loose":
 *             warnings.warn( "MuTauTree: Expected branch tAntiElectronMVA2Loose does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tAntiElectronMVA2Loose")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2969; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2969; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2969; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_240));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_240));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_240));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2969; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L222;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2972
 *             #self.complained.add("tAntiElectronMVA2Loose")
 *         else:
 *             self.tAntiElectronMVA2Loose_branch.SetAddress(<void*>&self.tAntiElectronMVA2Loose_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tAntiElectronMVA2Medium"
 */
    __pyx_v_self->tAntiElectronMVA2Loose_branch->SetAddress(((void *)(&__pyx_v_self->tAntiElectronMVA2Loose_value)));
  }
  __pyx_L222:;

  /* "MuTauTree.pyx":2975
 * 
 *         #print "making tAntiElectronMVA2Medium"
 *         self.tAntiElectronMVA2Medium_branch = the_tree.GetBranch("tAntiElectronMVA2Medium")             # <<<<<<<<<<<<<<
 *         #if not self.tAntiElectronMVA2Medium_branch and "tAntiElectronMVA2Medium" not in self.complained:
 *         if not self.tAntiElectronMVA2Medium_branch and "tAntiElectronMVA2Medium":
 */
  __pyx_v_self->tAntiElectronMVA2Medium_branch = __pyx_v_the_tree->GetBranch(__pyx_k_241);

  /* "MuTauTree.pyx":2977
 *         self.tAntiElectronMVA2Medium_branch = the_tree.GetBranch("tAntiElectronMVA2Medium")
 *         #if not self.tAntiElectronMVA2Medium_branch and "tAntiElectronMVA2Medium" not in self.complained:
 *         if not self.tAntiElectronMVA2Medium_branch and "tAntiElectronMVA2Medium":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tAntiElectronMVA2Medium does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tAntiElectronMVA2Medium")
 */
  __pyx_t_1 = (!(__pyx_v_self->tAntiElectronMVA2Medium_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2978
 *         #if not self.tAntiElectronMVA2Medium_branch and "tAntiElectronMVA2Medium" not in self.complained:
 *         if not self.tAntiElectronMVA2Medium_branch and "tAntiElectronMVA2Medium":
 *             warnings.warn( "MuTauTree: Expected branch tAntiElectronMVA2Medium does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tAntiElectronMVA2Medium")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2978; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2978; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2978; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_242));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_242));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_242));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2978; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L223;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2981
 *             #self.complained.add("tAntiElectronMVA2Medium")
 *         else:
 *             self.tAntiElectronMVA2Medium_branch.SetAddress(<void*>&self.tAntiElectronMVA2Medium_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tAntiElectronMVA2Tight"
 */
    __pyx_v_self->tAntiElectronMVA2Medium_branch->SetAddress(((void *)(&__pyx_v_self->tAntiElectronMVA2Medium_value)));
  }
  __pyx_L223:;

  /* "MuTauTree.pyx":2984
 * 
 *         #print "making tAntiElectronMVA2Tight"
 *         self.tAntiElectronMVA2Tight_branch = the_tree.GetBranch("tAntiElectronMVA2Tight")             # <<<<<<<<<<<<<<
 *         #if not self.tAntiElectronMVA2Tight_branch and "tAntiElectronMVA2Tight" not in self.complained:
 *         if not self.tAntiElectronMVA2Tight_branch and "tAntiElectronMVA2Tight":
 */
  __pyx_v_self->tAntiElectronMVA2Tight_branch = __pyx_v_the_tree->GetBranch(__pyx_k_243);

  /* "MuTauTree.pyx":2986
 *         self.tAntiElectronMVA2Tight_branch = the_tree.GetBranch("tAntiElectronMVA2Tight")
 *         #if not self.tAntiElectronMVA2Tight_branch and "tAntiElectronMVA2Tight" not in self.complained:
 *         if not self.tAntiElectronMVA2Tight_branch and "tAntiElectronMVA2Tight":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tAntiElectronMVA2Tight does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tAntiElectronMVA2Tight")
 */
  __pyx_t_2 = (!(__pyx_v_self->tAntiElectronMVA2Tight_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":2987
 *         #if not self.tAntiElectronMVA2Tight_branch and "tAntiElectronMVA2Tight" not in self.complained:
 *         if not self.tAntiElectronMVA2Tight_branch and "tAntiElectronMVA2Tight":
 *             warnings.warn( "MuTauTree: Expected branch tAntiElectronMVA2Tight does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tAntiElectronMVA2Tight")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2987; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2987; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2987; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_244));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_244));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_244));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2987; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L224;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2990
 *             #self.complained.add("tAntiElectronMVA2Tight")
 *         else:
 *             self.tAntiElectronMVA2Tight_branch.SetAddress(<void*>&self.tAntiElectronMVA2Tight_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tAntiElectronMVA2Vloose"
 */
    __pyx_v_self->tAntiElectronMVA2Tight_branch->SetAddress(((void *)(&__pyx_v_self->tAntiElectronMVA2Tight_value)));
  }
  __pyx_L224:;

  /* "MuTauTree.pyx":2993
 * 
 *         #print "making tAntiElectronMVA2Vloose"
 *         self.tAntiElectronMVA2Vloose_branch = the_tree.GetBranch("tAntiElectronMVA2Vloose")             # <<<<<<<<<<<<<<
 *         #if not self.tAntiElectronMVA2Vloose_branch and "tAntiElectronMVA2Vloose" not in self.complained:
 *         if not self.tAntiElectronMVA2Vloose_branch and "tAntiElectronMVA2Vloose":
 */
  __pyx_v_self->tAntiElectronMVA2Vloose_branch = __pyx_v_the_tree->GetBranch(__pyx_k_245);

  /* "MuTauTree.pyx":2995
 *         self.tAntiElectronMVA2Vloose_branch = the_tree.GetBranch("tAntiElectronMVA2Vloose")
 *         #if not self.tAntiElectronMVA2Vloose_branch and "tAntiElectronMVA2Vloose" not in self.complained:
 *         if not self.tAntiElectronMVA2Vloose_branch and "tAntiElectronMVA2Vloose":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tAntiElectronMVA2Vloose does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tAntiElectronMVA2Vloose")
 */
  __pyx_t_1 = (!(__pyx_v_self->tAntiElectronMVA2Vloose_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":2996
 *         #if not self.tAntiElectronMVA2Vloose_branch and "tAntiElectronMVA2Vloose" not in self.complained:
 *         if not self.tAntiElectronMVA2Vloose_branch and "tAntiElectronMVA2Vloose":
 *             warnings.warn( "MuTauTree: Expected branch tAntiElectronMVA2Vloose does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tAntiElectronMVA2Vloose")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2996; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2996; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2996; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_246));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_246));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_246));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 2996; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L225;
  }
  /*else*/ {

    /* "MuTauTree.pyx":2999
 *             #self.complained.add("tAntiElectronMVA2Vloose")
 *         else:
 *             self.tAntiElectronMVA2Vloose_branch.SetAddress(<void*>&self.tAntiElectronMVA2Vloose_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tAntiElectronMVA3Loose"
 */
    __pyx_v_self->tAntiElectronMVA2Vloose_branch->SetAddress(((void *)(&__pyx_v_self->tAntiElectronMVA2Vloose_value)));
  }
  __pyx_L225:;

  /* "MuTauTree.pyx":3002
 * 
 *         #print "making tAntiElectronMVA3Loose"
 *         self.tAntiElectronMVA3Loose_branch = the_tree.GetBranch("tAntiElectronMVA3Loose")             # <<<<<<<<<<<<<<
 *         #if not self.tAntiElectronMVA3Loose_branch and "tAntiElectronMVA3Loose" not in self.complained:
 *         if not self.tAntiElectronMVA3Loose_branch and "tAntiElectronMVA3Loose":
 */
  __pyx_v_self->tAntiElectronMVA3Loose_branch = __pyx_v_the_tree->GetBranch(__pyx_k_247);

  /* "MuTauTree.pyx":3004
 *         self.tAntiElectronMVA3Loose_branch = the_tree.GetBranch("tAntiElectronMVA3Loose")
 *         #if not self.tAntiElectronMVA3Loose_branch and "tAntiElectronMVA3Loose" not in self.complained:
 *         if not self.tAntiElectronMVA3Loose_branch and "tAntiElectronMVA3Loose":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tAntiElectronMVA3Loose does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tAntiElectronMVA3Loose")
 */
  __pyx_t_2 = (!(__pyx_v_self->tAntiElectronMVA3Loose_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3005
 *         #if not self.tAntiElectronMVA3Loose_branch and "tAntiElectronMVA3Loose" not in self.complained:
 *         if not self.tAntiElectronMVA3Loose_branch and "tAntiElectronMVA3Loose":
 *             warnings.warn( "MuTauTree: Expected branch tAntiElectronMVA3Loose does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tAntiElectronMVA3Loose")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3005; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3005; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3005; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_248));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_248));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_248));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3005; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L226;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3008
 *             #self.complained.add("tAntiElectronMVA3Loose")
 *         else:
 *             self.tAntiElectronMVA3Loose_branch.SetAddress(<void*>&self.tAntiElectronMVA3Loose_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tAntiElectronMVA3Medium"
 */
    __pyx_v_self->tAntiElectronMVA3Loose_branch->SetAddress(((void *)(&__pyx_v_self->tAntiElectronMVA3Loose_value)));
  }
  __pyx_L226:;

  /* "MuTauTree.pyx":3011
 * 
 *         #print "making tAntiElectronMVA3Medium"
 *         self.tAntiElectronMVA3Medium_branch = the_tree.GetBranch("tAntiElectronMVA3Medium")             # <<<<<<<<<<<<<<
 *         #if not self.tAntiElectronMVA3Medium_branch and "tAntiElectronMVA3Medium" not in self.complained:
 *         if not self.tAntiElectronMVA3Medium_branch and "tAntiElectronMVA3Medium":
 */
  __pyx_v_self->tAntiElectronMVA3Medium_branch = __pyx_v_the_tree->GetBranch(__pyx_k_249);

  /* "MuTauTree.pyx":3013
 *         self.tAntiElectronMVA3Medium_branch = the_tree.GetBranch("tAntiElectronMVA3Medium")
 *         #if not self.tAntiElectronMVA3Medium_branch and "tAntiElectronMVA3Medium" not in self.complained:
 *         if not self.tAntiElectronMVA3Medium_branch and "tAntiElectronMVA3Medium":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tAntiElectronMVA3Medium does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tAntiElectronMVA3Medium")
 */
  __pyx_t_1 = (!(__pyx_v_self->tAntiElectronMVA3Medium_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":3014
 *         #if not self.tAntiElectronMVA3Medium_branch and "tAntiElectronMVA3Medium" not in self.complained:
 *         if not self.tAntiElectronMVA3Medium_branch and "tAntiElectronMVA3Medium":
 *             warnings.warn( "MuTauTree: Expected branch tAntiElectronMVA3Medium does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tAntiElectronMVA3Medium")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3014; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3014; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3014; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_250));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_250));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_250));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3014; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L227;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3017
 *             #self.complained.add("tAntiElectronMVA3Medium")
 *         else:
 *             self.tAntiElectronMVA3Medium_branch.SetAddress(<void*>&self.tAntiElectronMVA3Medium_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tAntiElectronMVA3Tight"
 */
    __pyx_v_self->tAntiElectronMVA3Medium_branch->SetAddress(((void *)(&__pyx_v_self->tAntiElectronMVA3Medium_value)));
  }
  __pyx_L227:;

  /* "MuTauTree.pyx":3020
 * 
 *         #print "making tAntiElectronMVA3Tight"
 *         self.tAntiElectronMVA3Tight_branch = the_tree.GetBranch("tAntiElectronMVA3Tight")             # <<<<<<<<<<<<<<
 *         #if not self.tAntiElectronMVA3Tight_branch and "tAntiElectronMVA3Tight" not in self.complained:
 *         if not self.tAntiElectronMVA3Tight_branch and "tAntiElectronMVA3Tight":
 */
  __pyx_v_self->tAntiElectronMVA3Tight_branch = __pyx_v_the_tree->GetBranch(__pyx_k_251);

  /* "MuTauTree.pyx":3022
 *         self.tAntiElectronMVA3Tight_branch = the_tree.GetBranch("tAntiElectronMVA3Tight")
 *         #if not self.tAntiElectronMVA3Tight_branch and "tAntiElectronMVA3Tight" not in self.complained:
 *         if not self.tAntiElectronMVA3Tight_branch and "tAntiElectronMVA3Tight":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tAntiElectronMVA3Tight does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tAntiElectronMVA3Tight")
 */
  __pyx_t_2 = (!(__pyx_v_self->tAntiElectronMVA3Tight_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3023
 *         #if not self.tAntiElectronMVA3Tight_branch and "tAntiElectronMVA3Tight" not in self.complained:
 *         if not self.tAntiElectronMVA3Tight_branch and "tAntiElectronMVA3Tight":
 *             warnings.warn( "MuTauTree: Expected branch tAntiElectronMVA3Tight does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tAntiElectronMVA3Tight")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3023; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3023; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3023; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_252));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_252));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_252));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3023; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L228;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3026
 *             #self.complained.add("tAntiElectronMVA3Tight")
 *         else:
 *             self.tAntiElectronMVA3Tight_branch.SetAddress(<void*>&self.tAntiElectronMVA3Tight_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tAntiElectronMVA3VTight"
 */
    __pyx_v_self->tAntiElectronMVA3Tight_branch->SetAddress(((void *)(&__pyx_v_self->tAntiElectronMVA3Tight_value)));
  }
  __pyx_L228:;

  /* "MuTauTree.pyx":3029
 * 
 *         #print "making tAntiElectronMVA3VTight"
 *         self.tAntiElectronMVA3VTight_branch = the_tree.GetBranch("tAntiElectronMVA3VTight")             # <<<<<<<<<<<<<<
 *         #if not self.tAntiElectronMVA3VTight_branch and "tAntiElectronMVA3VTight" not in self.complained:
 *         if not self.tAntiElectronMVA3VTight_branch and "tAntiElectronMVA3VTight":
 */
  __pyx_v_self->tAntiElectronMVA3VTight_branch = __pyx_v_the_tree->GetBranch(__pyx_k_253);

  /* "MuTauTree.pyx":3031
 *         self.tAntiElectronMVA3VTight_branch = the_tree.GetBranch("tAntiElectronMVA3VTight")
 *         #if not self.tAntiElectronMVA3VTight_branch and "tAntiElectronMVA3VTight" not in self.complained:
 *         if not self.tAntiElectronMVA3VTight_branch and "tAntiElectronMVA3VTight":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tAntiElectronMVA3VTight does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tAntiElectronMVA3VTight")
 */
  __pyx_t_1 = (!(__pyx_v_self->tAntiElectronMVA3VTight_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":3032
 *         #if not self.tAntiElectronMVA3VTight_branch and "tAntiElectronMVA3VTight" not in self.complained:
 *         if not self.tAntiElectronMVA3VTight_branch and "tAntiElectronMVA3VTight":
 *             warnings.warn( "MuTauTree: Expected branch tAntiElectronMVA3VTight does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tAntiElectronMVA3VTight")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3032; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3032; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3032; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_254));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_254));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_254));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3032; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L229;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3035
 *             #self.complained.add("tAntiElectronMVA3VTight")
 *         else:
 *             self.tAntiElectronMVA3VTight_branch.SetAddress(<void*>&self.tAntiElectronMVA3VTight_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tAntiElectronMedium"
 */
    __pyx_v_self->tAntiElectronMVA3VTight_branch->SetAddress(((void *)(&__pyx_v_self->tAntiElectronMVA3VTight_value)));
  }
  __pyx_L229:;

  /* "MuTauTree.pyx":3038
 * 
 *         #print "making tAntiElectronMedium"
 *         self.tAntiElectronMedium_branch = the_tree.GetBranch("tAntiElectronMedium")             # <<<<<<<<<<<<<<
 *         #if not self.tAntiElectronMedium_branch and "tAntiElectronMedium" not in self.complained:
 *         if not self.tAntiElectronMedium_branch and "tAntiElectronMedium":
 */
  __pyx_v_self->tAntiElectronMedium_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tAntiElectronMedium);

  /* "MuTauTree.pyx":3040
 *         self.tAntiElectronMedium_branch = the_tree.GetBranch("tAntiElectronMedium")
 *         #if not self.tAntiElectronMedium_branch and "tAntiElectronMedium" not in self.complained:
 *         if not self.tAntiElectronMedium_branch and "tAntiElectronMedium":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tAntiElectronMedium does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tAntiElectronMedium")
 */
  __pyx_t_2 = (!(__pyx_v_self->tAntiElectronMedium_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3041
 *         #if not self.tAntiElectronMedium_branch and "tAntiElectronMedium" not in self.complained:
 *         if not self.tAntiElectronMedium_branch and "tAntiElectronMedium":
 *             warnings.warn( "MuTauTree: Expected branch tAntiElectronMedium does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tAntiElectronMedium")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3041; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3041; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3041; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_255));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_255));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_255));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3041; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L230;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3044
 *             #self.complained.add("tAntiElectronMedium")
 *         else:
 *             self.tAntiElectronMedium_branch.SetAddress(<void*>&self.tAntiElectronMedium_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tAntiElectronTight"
 */
    __pyx_v_self->tAntiElectronMedium_branch->SetAddress(((void *)(&__pyx_v_self->tAntiElectronMedium_value)));
  }
  __pyx_L230:;

  /* "MuTauTree.pyx":3047
 * 
 *         #print "making tAntiElectronTight"
 *         self.tAntiElectronTight_branch = the_tree.GetBranch("tAntiElectronTight")             # <<<<<<<<<<<<<<
 *         #if not self.tAntiElectronTight_branch and "tAntiElectronTight" not in self.complained:
 *         if not self.tAntiElectronTight_branch and "tAntiElectronTight":
 */
  __pyx_v_self->tAntiElectronTight_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tAntiElectronTight);

  /* "MuTauTree.pyx":3049
 *         self.tAntiElectronTight_branch = the_tree.GetBranch("tAntiElectronTight")
 *         #if not self.tAntiElectronTight_branch and "tAntiElectronTight" not in self.complained:
 *         if not self.tAntiElectronTight_branch and "tAntiElectronTight":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tAntiElectronTight does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tAntiElectronTight")
 */
  __pyx_t_1 = (!(__pyx_v_self->tAntiElectronTight_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":3050
 *         #if not self.tAntiElectronTight_branch and "tAntiElectronTight" not in self.complained:
 *         if not self.tAntiElectronTight_branch and "tAntiElectronTight":
 *             warnings.warn( "MuTauTree: Expected branch tAntiElectronTight does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tAntiElectronTight")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3050; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3050; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3050; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_256));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_256));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_256));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3050; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L231;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3053
 *             #self.complained.add("tAntiElectronTight")
 *         else:
 *             self.tAntiElectronTight_branch.SetAddress(<void*>&self.tAntiElectronTight_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tAntiMuonLoose"
 */
    __pyx_v_self->tAntiElectronTight_branch->SetAddress(((void *)(&__pyx_v_self->tAntiElectronTight_value)));
  }
  __pyx_L231:;

  /* "MuTauTree.pyx":3056
 * 
 *         #print "making tAntiMuonLoose"
 *         self.tAntiMuonLoose_branch = the_tree.GetBranch("tAntiMuonLoose")             # <<<<<<<<<<<<<<
 *         #if not self.tAntiMuonLoose_branch and "tAntiMuonLoose" not in self.complained:
 *         if not self.tAntiMuonLoose_branch and "tAntiMuonLoose":
 */
  __pyx_v_self->tAntiMuonLoose_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tAntiMuonLoose);

  /* "MuTauTree.pyx":3058
 *         self.tAntiMuonLoose_branch = the_tree.GetBranch("tAntiMuonLoose")
 *         #if not self.tAntiMuonLoose_branch and "tAntiMuonLoose" not in self.complained:
 *         if not self.tAntiMuonLoose_branch and "tAntiMuonLoose":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tAntiMuonLoose does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tAntiMuonLoose")
 */
  __pyx_t_2 = (!(__pyx_v_self->tAntiMuonLoose_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3059
 *         #if not self.tAntiMuonLoose_branch and "tAntiMuonLoose" not in self.complained:
 *         if not self.tAntiMuonLoose_branch and "tAntiMuonLoose":
 *             warnings.warn( "MuTauTree: Expected branch tAntiMuonLoose does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tAntiMuonLoose")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3059; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3059; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3059; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_257));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_257));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_257));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3059; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L232;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3062
 *             #self.complained.add("tAntiMuonLoose")
 *         else:
 *             self.tAntiMuonLoose_branch.SetAddress(<void*>&self.tAntiMuonLoose_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tAntiMuonLoose2"
 */
    __pyx_v_self->tAntiMuonLoose_branch->SetAddress(((void *)(&__pyx_v_self->tAntiMuonLoose_value)));
  }
  __pyx_L232:;

  /* "MuTauTree.pyx":3065
 * 
 *         #print "making tAntiMuonLoose2"
 *         self.tAntiMuonLoose2_branch = the_tree.GetBranch("tAntiMuonLoose2")             # <<<<<<<<<<<<<<
 *         #if not self.tAntiMuonLoose2_branch and "tAntiMuonLoose2" not in self.complained:
 *         if not self.tAntiMuonLoose2_branch and "tAntiMuonLoose2":
 */
  __pyx_v_self->tAntiMuonLoose2_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tAntiMuonLoose2);

  /* "MuTauTree.pyx":3067
 *         self.tAntiMuonLoose2_branch = the_tree.GetBranch("tAntiMuonLoose2")
 *         #if not self.tAntiMuonLoose2_branch and "tAntiMuonLoose2" not in self.complained:
 *         if not self.tAntiMuonLoose2_branch and "tAntiMuonLoose2":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tAntiMuonLoose2 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tAntiMuonLoose2")
 */
  __pyx_t_1 = (!(__pyx_v_self->tAntiMuonLoose2_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":3068
 *         #if not self.tAntiMuonLoose2_branch and "tAntiMuonLoose2" not in self.complained:
 *         if not self.tAntiMuonLoose2_branch and "tAntiMuonLoose2":
 *             warnings.warn( "MuTauTree: Expected branch tAntiMuonLoose2 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tAntiMuonLoose2")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3068; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3068; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3068; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_258));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_258));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_258));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3068; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L233;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3071
 *             #self.complained.add("tAntiMuonLoose2")
 *         else:
 *             self.tAntiMuonLoose2_branch.SetAddress(<void*>&self.tAntiMuonLoose2_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tAntiMuonMedium"
 */
    __pyx_v_self->tAntiMuonLoose2_branch->SetAddress(((void *)(&__pyx_v_self->tAntiMuonLoose2_value)));
  }
  __pyx_L233:;

  /* "MuTauTree.pyx":3074
 * 
 *         #print "making tAntiMuonMedium"
 *         self.tAntiMuonMedium_branch = the_tree.GetBranch("tAntiMuonMedium")             # <<<<<<<<<<<<<<
 *         #if not self.tAntiMuonMedium_branch and "tAntiMuonMedium" not in self.complained:
 *         if not self.tAntiMuonMedium_branch and "tAntiMuonMedium":
 */
  __pyx_v_self->tAntiMuonMedium_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tAntiMuonMedium);

  /* "MuTauTree.pyx":3076
 *         self.tAntiMuonMedium_branch = the_tree.GetBranch("tAntiMuonMedium")
 *         #if not self.tAntiMuonMedium_branch and "tAntiMuonMedium" not in self.complained:
 *         if not self.tAntiMuonMedium_branch and "tAntiMuonMedium":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tAntiMuonMedium does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tAntiMuonMedium")
 */
  __pyx_t_2 = (!(__pyx_v_self->tAntiMuonMedium_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3077
 *         #if not self.tAntiMuonMedium_branch and "tAntiMuonMedium" not in self.complained:
 *         if not self.tAntiMuonMedium_branch and "tAntiMuonMedium":
 *             warnings.warn( "MuTauTree: Expected branch tAntiMuonMedium does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tAntiMuonMedium")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3077; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3077; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3077; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_259));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_259));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_259));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3077; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L234;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3080
 *             #self.complained.add("tAntiMuonMedium")
 *         else:
 *             self.tAntiMuonMedium_branch.SetAddress(<void*>&self.tAntiMuonMedium_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tAntiMuonMedium2"
 */
    __pyx_v_self->tAntiMuonMedium_branch->SetAddress(((void *)(&__pyx_v_self->tAntiMuonMedium_value)));
  }
  __pyx_L234:;

  /* "MuTauTree.pyx":3083
 * 
 *         #print "making tAntiMuonMedium2"
 *         self.tAntiMuonMedium2_branch = the_tree.GetBranch("tAntiMuonMedium2")             # <<<<<<<<<<<<<<
 *         #if not self.tAntiMuonMedium2_branch and "tAntiMuonMedium2" not in self.complained:
 *         if not self.tAntiMuonMedium2_branch and "tAntiMuonMedium2":
 */
  __pyx_v_self->tAntiMuonMedium2_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tAntiMuonMedium2);

  /* "MuTauTree.pyx":3085
 *         self.tAntiMuonMedium2_branch = the_tree.GetBranch("tAntiMuonMedium2")
 *         #if not self.tAntiMuonMedium2_branch and "tAntiMuonMedium2" not in self.complained:
 *         if not self.tAntiMuonMedium2_branch and "tAntiMuonMedium2":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tAntiMuonMedium2 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tAntiMuonMedium2")
 */
  __pyx_t_1 = (!(__pyx_v_self->tAntiMuonMedium2_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":3086
 *         #if not self.tAntiMuonMedium2_branch and "tAntiMuonMedium2" not in self.complained:
 *         if not self.tAntiMuonMedium2_branch and "tAntiMuonMedium2":
 *             warnings.warn( "MuTauTree: Expected branch tAntiMuonMedium2 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tAntiMuonMedium2")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3086; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3086; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3086; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_260));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_260));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_260));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3086; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L235;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3089
 *             #self.complained.add("tAntiMuonMedium2")
 *         else:
 *             self.tAntiMuonMedium2_branch.SetAddress(<void*>&self.tAntiMuonMedium2_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tAntiMuonTight"
 */
    __pyx_v_self->tAntiMuonMedium2_branch->SetAddress(((void *)(&__pyx_v_self->tAntiMuonMedium2_value)));
  }
  __pyx_L235:;

  /* "MuTauTree.pyx":3092
 * 
 *         #print "making tAntiMuonTight"
 *         self.tAntiMuonTight_branch = the_tree.GetBranch("tAntiMuonTight")             # <<<<<<<<<<<<<<
 *         #if not self.tAntiMuonTight_branch and "tAntiMuonTight" not in self.complained:
 *         if not self.tAntiMuonTight_branch and "tAntiMuonTight":
 */
  __pyx_v_self->tAntiMuonTight_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tAntiMuonTight);

  /* "MuTauTree.pyx":3094
 *         self.tAntiMuonTight_branch = the_tree.GetBranch("tAntiMuonTight")
 *         #if not self.tAntiMuonTight_branch and "tAntiMuonTight" not in self.complained:
 *         if not self.tAntiMuonTight_branch and "tAntiMuonTight":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tAntiMuonTight does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tAntiMuonTight")
 */
  __pyx_t_2 = (!(__pyx_v_self->tAntiMuonTight_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3095
 *         #if not self.tAntiMuonTight_branch and "tAntiMuonTight" not in self.complained:
 *         if not self.tAntiMuonTight_branch and "tAntiMuonTight":
 *             warnings.warn( "MuTauTree: Expected branch tAntiMuonTight does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tAntiMuonTight")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3095; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3095; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3095; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_261));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_261));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_261));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3095; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L236;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3098
 *             #self.complained.add("tAntiMuonTight")
 *         else:
 *             self.tAntiMuonTight_branch.SetAddress(<void*>&self.tAntiMuonTight_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tAntiMuonTight2"
 */
    __pyx_v_self->tAntiMuonTight_branch->SetAddress(((void *)(&__pyx_v_self->tAntiMuonTight_value)));
  }
  __pyx_L236:;

  /* "MuTauTree.pyx":3101
 * 
 *         #print "making tAntiMuonTight2"
 *         self.tAntiMuonTight2_branch = the_tree.GetBranch("tAntiMuonTight2")             # <<<<<<<<<<<<<<
 *         #if not self.tAntiMuonTight2_branch and "tAntiMuonTight2" not in self.complained:
 *         if not self.tAntiMuonTight2_branch and "tAntiMuonTight2":
 */
  __pyx_v_self->tAntiMuonTight2_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tAntiMuonTight2);

  /* "MuTauTree.pyx":3103
 *         self.tAntiMuonTight2_branch = the_tree.GetBranch("tAntiMuonTight2")
 *         #if not self.tAntiMuonTight2_branch and "tAntiMuonTight2" not in self.complained:
 *         if not self.tAntiMuonTight2_branch and "tAntiMuonTight2":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tAntiMuonTight2 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tAntiMuonTight2")
 */
  __pyx_t_1 = (!(__pyx_v_self->tAntiMuonTight2_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":3104
 *         #if not self.tAntiMuonTight2_branch and "tAntiMuonTight2" not in self.complained:
 *         if not self.tAntiMuonTight2_branch and "tAntiMuonTight2":
 *             warnings.warn( "MuTauTree: Expected branch tAntiMuonTight2 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tAntiMuonTight2")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3104; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3104; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3104; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_262));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_262));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_262));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3104; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L237;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3107
 *             #self.complained.add("tAntiMuonTight2")
 *         else:
 *             self.tAntiMuonTight2_branch.SetAddress(<void*>&self.tAntiMuonTight2_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tCharge"
 */
    __pyx_v_self->tAntiMuonTight2_branch->SetAddress(((void *)(&__pyx_v_self->tAntiMuonTight2_value)));
  }
  __pyx_L237:;

  /* "MuTauTree.pyx":3110
 * 
 *         #print "making tCharge"
 *         self.tCharge_branch = the_tree.GetBranch("tCharge")             # <<<<<<<<<<<<<<
 *         #if not self.tCharge_branch and "tCharge" not in self.complained:
 *         if not self.tCharge_branch and "tCharge":
 */
  __pyx_v_self->tCharge_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tCharge);

  /* "MuTauTree.pyx":3112
 *         self.tCharge_branch = the_tree.GetBranch("tCharge")
 *         #if not self.tCharge_branch and "tCharge" not in self.complained:
 *         if not self.tCharge_branch and "tCharge":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tCharge does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tCharge")
 */
  __pyx_t_2 = (!(__pyx_v_self->tCharge_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3113
 *         #if not self.tCharge_branch and "tCharge" not in self.complained:
 *         if not self.tCharge_branch and "tCharge":
 *             warnings.warn( "MuTauTree: Expected branch tCharge does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tCharge")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3113; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3113; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3113; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_263));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_263));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_263));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3113; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L238;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3116
 *             #self.complained.add("tCharge")
 *         else:
 *             self.tCharge_branch.SetAddress(<void*>&self.tCharge_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tCiCTightElecOverlap"
 */
    __pyx_v_self->tCharge_branch->SetAddress(((void *)(&__pyx_v_self->tCharge_value)));
  }
  __pyx_L238:;

  /* "MuTauTree.pyx":3119
 * 
 *         #print "making tCiCTightElecOverlap"
 *         self.tCiCTightElecOverlap_branch = the_tree.GetBranch("tCiCTightElecOverlap")             # <<<<<<<<<<<<<<
 *         #if not self.tCiCTightElecOverlap_branch and "tCiCTightElecOverlap" not in self.complained:
 *         if not self.tCiCTightElecOverlap_branch and "tCiCTightElecOverlap":
 */
  __pyx_v_self->tCiCTightElecOverlap_branch = __pyx_v_the_tree->GetBranch(__pyx_k_264);

  /* "MuTauTree.pyx":3121
 *         self.tCiCTightElecOverlap_branch = the_tree.GetBranch("tCiCTightElecOverlap")
 *         #if not self.tCiCTightElecOverlap_branch and "tCiCTightElecOverlap" not in self.complained:
 *         if not self.tCiCTightElecOverlap_branch and "tCiCTightElecOverlap":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tCiCTightElecOverlap does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tCiCTightElecOverlap")
 */
  __pyx_t_1 = (!(__pyx_v_self->tCiCTightElecOverlap_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":3122
 *         #if not self.tCiCTightElecOverlap_branch and "tCiCTightElecOverlap" not in self.complained:
 *         if not self.tCiCTightElecOverlap_branch and "tCiCTightElecOverlap":
 *             warnings.warn( "MuTauTree: Expected branch tCiCTightElecOverlap does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tCiCTightElecOverlap")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3122; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3122; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3122; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_265));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_265));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_265));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3122; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L239;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3125
 *             #self.complained.add("tCiCTightElecOverlap")
 *         else:
 *             self.tCiCTightElecOverlap_branch.SetAddress(<void*>&self.tCiCTightElecOverlap_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tDZ"
 */
    __pyx_v_self->tCiCTightElecOverlap_branch->SetAddress(((void *)(&__pyx_v_self->tCiCTightElecOverlap_value)));
  }
  __pyx_L239:;

  /* "MuTauTree.pyx":3128
 * 
 *         #print "making tDZ"
 *         self.tDZ_branch = the_tree.GetBranch("tDZ")             # <<<<<<<<<<<<<<
 *         #if not self.tDZ_branch and "tDZ" not in self.complained:
 *         if not self.tDZ_branch and "tDZ":
 */
  __pyx_v_self->tDZ_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tDZ);

  /* "MuTauTree.pyx":3130
 *         self.tDZ_branch = the_tree.GetBranch("tDZ")
 *         #if not self.tDZ_branch and "tDZ" not in self.complained:
 *         if not self.tDZ_branch and "tDZ":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tDZ does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tDZ")
 */
  __pyx_t_2 = (!(__pyx_v_self->tDZ_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3131
 *         #if not self.tDZ_branch and "tDZ" not in self.complained:
 *         if not self.tDZ_branch and "tDZ":
 *             warnings.warn( "MuTauTree: Expected branch tDZ does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tDZ")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3131; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3131; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3131; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_266));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_266));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_266));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3131; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L240;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3134
 *             #self.complained.add("tDZ")
 *         else:
 *             self.tDZ_branch.SetAddress(<void*>&self.tDZ_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tDecayFinding"
 */
    __pyx_v_self->tDZ_branch->SetAddress(((void *)(&__pyx_v_self->tDZ_value)));
  }
  __pyx_L240:;

  /* "MuTauTree.pyx":3137
 * 
 *         #print "making tDecayFinding"
 *         self.tDecayFinding_branch = the_tree.GetBranch("tDecayFinding")             # <<<<<<<<<<<<<<
 *         #if not self.tDecayFinding_branch and "tDecayFinding" not in self.complained:
 *         if not self.tDecayFinding_branch and "tDecayFinding":
 */
  __pyx_v_self->tDecayFinding_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tDecayFinding);

  /* "MuTauTree.pyx":3139
 *         self.tDecayFinding_branch = the_tree.GetBranch("tDecayFinding")
 *         #if not self.tDecayFinding_branch and "tDecayFinding" not in self.complained:
 *         if not self.tDecayFinding_branch and "tDecayFinding":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tDecayFinding does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tDecayFinding")
 */
  __pyx_t_1 = (!(__pyx_v_self->tDecayFinding_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":3140
 *         #if not self.tDecayFinding_branch and "tDecayFinding" not in self.complained:
 *         if not self.tDecayFinding_branch and "tDecayFinding":
 *             warnings.warn( "MuTauTree: Expected branch tDecayFinding does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tDecayFinding")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3140; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3140; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3140; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_267));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_267));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_267));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3140; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L241;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3143
 *             #self.complained.add("tDecayFinding")
 *         else:
 *             self.tDecayFinding_branch.SetAddress(<void*>&self.tDecayFinding_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tDecayMode"
 */
    __pyx_v_self->tDecayFinding_branch->SetAddress(((void *)(&__pyx_v_self->tDecayFinding_value)));
  }
  __pyx_L241:;

  /* "MuTauTree.pyx":3146
 * 
 *         #print "making tDecayMode"
 *         self.tDecayMode_branch = the_tree.GetBranch("tDecayMode")             # <<<<<<<<<<<<<<
 *         #if not self.tDecayMode_branch and "tDecayMode" not in self.complained:
 *         if not self.tDecayMode_branch and "tDecayMode":
 */
  __pyx_v_self->tDecayMode_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tDecayMode);

  /* "MuTauTree.pyx":3148
 *         self.tDecayMode_branch = the_tree.GetBranch("tDecayMode")
 *         #if not self.tDecayMode_branch and "tDecayMode" not in self.complained:
 *         if not self.tDecayMode_branch and "tDecayMode":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tDecayMode does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tDecayMode")
 */
  __pyx_t_2 = (!(__pyx_v_self->tDecayMode_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3149
 *         #if not self.tDecayMode_branch and "tDecayMode" not in self.complained:
 *         if not self.tDecayMode_branch and "tDecayMode":
 *             warnings.warn( "MuTauTree: Expected branch tDecayMode does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tDecayMode")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3149; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3149; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3149; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_268));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_268));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_268));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3149; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L242;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3152
 *             #self.complained.add("tDecayMode")
 *         else:
 *             self.tDecayMode_branch.SetAddress(<void*>&self.tDecayMode_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tElecOverlap"
 */
    __pyx_v_self->tDecayMode_branch->SetAddress(((void *)(&__pyx_v_self->tDecayMode_value)));
  }
  __pyx_L242:;

  /* "MuTauTree.pyx":3155
 * 
 *         #print "making tElecOverlap"
 *         self.tElecOverlap_branch = the_tree.GetBranch("tElecOverlap")             # <<<<<<<<<<<<<<
 *         #if not self.tElecOverlap_branch and "tElecOverlap" not in self.complained:
 *         if not self.tElecOverlap_branch and "tElecOverlap":
 */
  __pyx_v_self->tElecOverlap_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tElecOverlap);

  /* "MuTauTree.pyx":3157
 *         self.tElecOverlap_branch = the_tree.GetBranch("tElecOverlap")
 *         #if not self.tElecOverlap_branch and "tElecOverlap" not in self.complained:
 *         if not self.tElecOverlap_branch and "tElecOverlap":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tElecOverlap does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tElecOverlap")
 */
  __pyx_t_1 = (!(__pyx_v_self->tElecOverlap_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":3158
 *         #if not self.tElecOverlap_branch and "tElecOverlap" not in self.complained:
 *         if not self.tElecOverlap_branch and "tElecOverlap":
 *             warnings.warn( "MuTauTree: Expected branch tElecOverlap does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tElecOverlap")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3158; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3158; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3158; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_269));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_269));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_269));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3158; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L243;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3161
 *             #self.complained.add("tElecOverlap")
 *         else:
 *             self.tElecOverlap_branch.SetAddress(<void*>&self.tElecOverlap_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tEta"
 */
    __pyx_v_self->tElecOverlap_branch->SetAddress(((void *)(&__pyx_v_self->tElecOverlap_value)));
  }
  __pyx_L243:;

  /* "MuTauTree.pyx":3164
 * 
 *         #print "making tEta"
 *         self.tEta_branch = the_tree.GetBranch("tEta")             # <<<<<<<<<<<<<<
 *         #if not self.tEta_branch and "tEta" not in self.complained:
 *         if not self.tEta_branch and "tEta":
 */
  __pyx_v_self->tEta_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tEta);

  /* "MuTauTree.pyx":3166
 *         self.tEta_branch = the_tree.GetBranch("tEta")
 *         #if not self.tEta_branch and "tEta" not in self.complained:
 *         if not self.tEta_branch and "tEta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tEta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tEta")
 */
  __pyx_t_2 = (!(__pyx_v_self->tEta_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3167
 *         #if not self.tEta_branch and "tEta" not in self.complained:
 *         if not self.tEta_branch and "tEta":
 *             warnings.warn( "MuTauTree: Expected branch tEta does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tEta")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3167; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3167; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3167; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_270));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_270));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_270));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3167; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L244;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3170
 *             #self.complained.add("tEta")
 *         else:
 *             self.tEta_branch.SetAddress(<void*>&self.tEta_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tGenDecayMode"
 */
    __pyx_v_self->tEta_branch->SetAddress(((void *)(&__pyx_v_self->tEta_value)));
  }
  __pyx_L244:;

  /* "MuTauTree.pyx":3173
 * 
 *         #print "making tGenDecayMode"
 *         self.tGenDecayMode_branch = the_tree.GetBranch("tGenDecayMode")             # <<<<<<<<<<<<<<
 *         #if not self.tGenDecayMode_branch and "tGenDecayMode" not in self.complained:
 *         if not self.tGenDecayMode_branch and "tGenDecayMode":
 */
  __pyx_v_self->tGenDecayMode_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tGenDecayMode);

  /* "MuTauTree.pyx":3175
 *         self.tGenDecayMode_branch = the_tree.GetBranch("tGenDecayMode")
 *         #if not self.tGenDecayMode_branch and "tGenDecayMode" not in self.complained:
 *         if not self.tGenDecayMode_branch and "tGenDecayMode":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tGenDecayMode does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tGenDecayMode")
 */
  __pyx_t_1 = (!(__pyx_v_self->tGenDecayMode_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":3176
 *         #if not self.tGenDecayMode_branch and "tGenDecayMode" not in self.complained:
 *         if not self.tGenDecayMode_branch and "tGenDecayMode":
 *             warnings.warn( "MuTauTree: Expected branch tGenDecayMode does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tGenDecayMode")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3176; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3176; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3176; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_271));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_271));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_271));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3176; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L245;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3179
 *             #self.complained.add("tGenDecayMode")
 *         else:
 *             self.tGenDecayMode_branch.SetAddress(<void*>&self.tGenDecayMode_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tIP3DS"
 */
    __pyx_v_self->tGenDecayMode_branch->SetAddress(((void *)(&__pyx_v_self->tGenDecayMode_value)));
  }
  __pyx_L245:;

  /* "MuTauTree.pyx":3182
 * 
 *         #print "making tIP3DS"
 *         self.tIP3DS_branch = the_tree.GetBranch("tIP3DS")             # <<<<<<<<<<<<<<
 *         #if not self.tIP3DS_branch and "tIP3DS" not in self.complained:
 *         if not self.tIP3DS_branch and "tIP3DS":
 */
  __pyx_v_self->tIP3DS_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tIP3DS);

  /* "MuTauTree.pyx":3184
 *         self.tIP3DS_branch = the_tree.GetBranch("tIP3DS")
 *         #if not self.tIP3DS_branch and "tIP3DS" not in self.complained:
 *         if not self.tIP3DS_branch and "tIP3DS":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tIP3DS does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tIP3DS")
 */
  __pyx_t_2 = (!(__pyx_v_self->tIP3DS_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3185
 *         #if not self.tIP3DS_branch and "tIP3DS" not in self.complained:
 *         if not self.tIP3DS_branch and "tIP3DS":
 *             warnings.warn( "MuTauTree: Expected branch tIP3DS does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tIP3DS")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3185; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3185; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3185; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_272));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_272));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_272));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3185; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L246;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3188
 *             #self.complained.add("tIP3DS")
 *         else:
 *             self.tIP3DS_branch.SetAddress(<void*>&self.tIP3DS_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tJetArea"
 */
    __pyx_v_self->tIP3DS_branch->SetAddress(((void *)(&__pyx_v_self->tIP3DS_value)));
  }
  __pyx_L246:;

  /* "MuTauTree.pyx":3191
 * 
 *         #print "making tJetArea"
 *         self.tJetArea_branch = the_tree.GetBranch("tJetArea")             # <<<<<<<<<<<<<<
 *         #if not self.tJetArea_branch and "tJetArea" not in self.complained:
 *         if not self.tJetArea_branch and "tJetArea":
 */
  __pyx_v_self->tJetArea_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tJetArea);

  /* "MuTauTree.pyx":3193
 *         self.tJetArea_branch = the_tree.GetBranch("tJetArea")
 *         #if not self.tJetArea_branch and "tJetArea" not in self.complained:
 *         if not self.tJetArea_branch and "tJetArea":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tJetArea does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tJetArea")
 */
  __pyx_t_1 = (!(__pyx_v_self->tJetArea_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":3194
 *         #if not self.tJetArea_branch and "tJetArea" not in self.complained:
 *         if not self.tJetArea_branch and "tJetArea":
 *             warnings.warn( "MuTauTree: Expected branch tJetArea does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tJetArea")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3194; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3194; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3194; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_273));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_273));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_273));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3194; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L247;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3197
 *             #self.complained.add("tJetArea")
 *         else:
 *             self.tJetArea_branch.SetAddress(<void*>&self.tJetArea_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tJetBtag"
 */
    __pyx_v_self->tJetArea_branch->SetAddress(((void *)(&__pyx_v_self->tJetArea_value)));
  }
  __pyx_L247:;

  /* "MuTauTree.pyx":3200
 * 
 *         #print "making tJetBtag"
 *         self.tJetBtag_branch = the_tree.GetBranch("tJetBtag")             # <<<<<<<<<<<<<<
 *         #if not self.tJetBtag_branch and "tJetBtag" not in self.complained:
 *         if not self.tJetBtag_branch and "tJetBtag":
 */
  __pyx_v_self->tJetBtag_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tJetBtag);

  /* "MuTauTree.pyx":3202
 *         self.tJetBtag_branch = the_tree.GetBranch("tJetBtag")
 *         #if not self.tJetBtag_branch and "tJetBtag" not in self.complained:
 *         if not self.tJetBtag_branch and "tJetBtag":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tJetBtag does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tJetBtag")
 */
  __pyx_t_2 = (!(__pyx_v_self->tJetBtag_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3203
 *         #if not self.tJetBtag_branch and "tJetBtag" not in self.complained:
 *         if not self.tJetBtag_branch and "tJetBtag":
 *             warnings.warn( "MuTauTree: Expected branch tJetBtag does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tJetBtag")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3203; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3203; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3203; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_274));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_274));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_274));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3203; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L248;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3206
 *             #self.complained.add("tJetBtag")
 *         else:
 *             self.tJetBtag_branch.SetAddress(<void*>&self.tJetBtag_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tJetCSVBtag"
 */
    __pyx_v_self->tJetBtag_branch->SetAddress(((void *)(&__pyx_v_self->tJetBtag_value)));
  }
  __pyx_L248:;

  /* "MuTauTree.pyx":3209
 * 
 *         #print "making tJetCSVBtag"
 *         self.tJetCSVBtag_branch = the_tree.GetBranch("tJetCSVBtag")             # <<<<<<<<<<<<<<
 *         #if not self.tJetCSVBtag_branch and "tJetCSVBtag" not in self.complained:
 *         if not self.tJetCSVBtag_branch and "tJetCSVBtag":
 */
  __pyx_v_self->tJetCSVBtag_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tJetCSVBtag);

  /* "MuTauTree.pyx":3211
 *         self.tJetCSVBtag_branch = the_tree.GetBranch("tJetCSVBtag")
 *         #if not self.tJetCSVBtag_branch and "tJetCSVBtag" not in self.complained:
 *         if not self.tJetCSVBtag_branch and "tJetCSVBtag":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tJetCSVBtag does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tJetCSVBtag")
 */
  __pyx_t_1 = (!(__pyx_v_self->tJetCSVBtag_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":3212
 *         #if not self.tJetCSVBtag_branch and "tJetCSVBtag" not in self.complained:
 *         if not self.tJetCSVBtag_branch and "tJetCSVBtag":
 *             warnings.warn( "MuTauTree: Expected branch tJetCSVBtag does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tJetCSVBtag")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3212; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3212; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3212; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_275));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_275));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_275));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3212; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L249;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3215
 *             #self.complained.add("tJetCSVBtag")
 *         else:
 *             self.tJetCSVBtag_branch.SetAddress(<void*>&self.tJetCSVBtag_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tJetEtaEtaMoment"
 */
    __pyx_v_self->tJetCSVBtag_branch->SetAddress(((void *)(&__pyx_v_self->tJetCSVBtag_value)));
  }
  __pyx_L249:;

  /* "MuTauTree.pyx":3218
 * 
 *         #print "making tJetEtaEtaMoment"
 *         self.tJetEtaEtaMoment_branch = the_tree.GetBranch("tJetEtaEtaMoment")             # <<<<<<<<<<<<<<
 *         #if not self.tJetEtaEtaMoment_branch and "tJetEtaEtaMoment" not in self.complained:
 *         if not self.tJetEtaEtaMoment_branch and "tJetEtaEtaMoment":
 */
  __pyx_v_self->tJetEtaEtaMoment_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tJetEtaEtaMoment);

  /* "MuTauTree.pyx":3220
 *         self.tJetEtaEtaMoment_branch = the_tree.GetBranch("tJetEtaEtaMoment")
 *         #if not self.tJetEtaEtaMoment_branch and "tJetEtaEtaMoment" not in self.complained:
 *         if not self.tJetEtaEtaMoment_branch and "tJetEtaEtaMoment":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tJetEtaEtaMoment does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tJetEtaEtaMoment")
 */
  __pyx_t_2 = (!(__pyx_v_self->tJetEtaEtaMoment_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3221
 *         #if not self.tJetEtaEtaMoment_branch and "tJetEtaEtaMoment" not in self.complained:
 *         if not self.tJetEtaEtaMoment_branch and "tJetEtaEtaMoment":
 *             warnings.warn( "MuTauTree: Expected branch tJetEtaEtaMoment does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tJetEtaEtaMoment")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3221; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3221; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3221; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_276));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_276));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_276));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3221; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L250;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3224
 *             #self.complained.add("tJetEtaEtaMoment")
 *         else:
 *             self.tJetEtaEtaMoment_branch.SetAddress(<void*>&self.tJetEtaEtaMoment_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tJetEtaPhiMoment"
 */
    __pyx_v_self->tJetEtaEtaMoment_branch->SetAddress(((void *)(&__pyx_v_self->tJetEtaEtaMoment_value)));
  }
  __pyx_L250:;

  /* "MuTauTree.pyx":3227
 * 
 *         #print "making tJetEtaPhiMoment"
 *         self.tJetEtaPhiMoment_branch = the_tree.GetBranch("tJetEtaPhiMoment")             # <<<<<<<<<<<<<<
 *         #if not self.tJetEtaPhiMoment_branch and "tJetEtaPhiMoment" not in self.complained:
 *         if not self.tJetEtaPhiMoment_branch and "tJetEtaPhiMoment":
 */
  __pyx_v_self->tJetEtaPhiMoment_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tJetEtaPhiMoment);

  /* "MuTauTree.pyx":3229
 *         self.tJetEtaPhiMoment_branch = the_tree.GetBranch("tJetEtaPhiMoment")
 *         #if not self.tJetEtaPhiMoment_branch and "tJetEtaPhiMoment" not in self.complained:
 *         if not self.tJetEtaPhiMoment_branch and "tJetEtaPhiMoment":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tJetEtaPhiMoment does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tJetEtaPhiMoment")
 */
  __pyx_t_1 = (!(__pyx_v_self->tJetEtaPhiMoment_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":3230
 *         #if not self.tJetEtaPhiMoment_branch and "tJetEtaPhiMoment" not in self.complained:
 *         if not self.tJetEtaPhiMoment_branch and "tJetEtaPhiMoment":
 *             warnings.warn( "MuTauTree: Expected branch tJetEtaPhiMoment does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tJetEtaPhiMoment")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3230; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3230; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3230; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_277));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_277));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_277));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3230; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L251;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3233
 *             #self.complained.add("tJetEtaPhiMoment")
 *         else:
 *             self.tJetEtaPhiMoment_branch.SetAddress(<void*>&self.tJetEtaPhiMoment_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tJetEtaPhiSpread"
 */
    __pyx_v_self->tJetEtaPhiMoment_branch->SetAddress(((void *)(&__pyx_v_self->tJetEtaPhiMoment_value)));
  }
  __pyx_L251:;

  /* "MuTauTree.pyx":3236
 * 
 *         #print "making tJetEtaPhiSpread"
 *         self.tJetEtaPhiSpread_branch = the_tree.GetBranch("tJetEtaPhiSpread")             # <<<<<<<<<<<<<<
 *         #if not self.tJetEtaPhiSpread_branch and "tJetEtaPhiSpread" not in self.complained:
 *         if not self.tJetEtaPhiSpread_branch and "tJetEtaPhiSpread":
 */
  __pyx_v_self->tJetEtaPhiSpread_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tJetEtaPhiSpread);

  /* "MuTauTree.pyx":3238
 *         self.tJetEtaPhiSpread_branch = the_tree.GetBranch("tJetEtaPhiSpread")
 *         #if not self.tJetEtaPhiSpread_branch and "tJetEtaPhiSpread" not in self.complained:
 *         if not self.tJetEtaPhiSpread_branch and "tJetEtaPhiSpread":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tJetEtaPhiSpread does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tJetEtaPhiSpread")
 */
  __pyx_t_2 = (!(__pyx_v_self->tJetEtaPhiSpread_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3239
 *         #if not self.tJetEtaPhiSpread_branch and "tJetEtaPhiSpread" not in self.complained:
 *         if not self.tJetEtaPhiSpread_branch and "tJetEtaPhiSpread":
 *             warnings.warn( "MuTauTree: Expected branch tJetEtaPhiSpread does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tJetEtaPhiSpread")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3239; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3239; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3239; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_278));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_278));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_278));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3239; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L252;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3242
 *             #self.complained.add("tJetEtaPhiSpread")
 *         else:
 *             self.tJetEtaPhiSpread_branch.SetAddress(<void*>&self.tJetEtaPhiSpread_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tJetPhiPhiMoment"
 */
    __pyx_v_self->tJetEtaPhiSpread_branch->SetAddress(((void *)(&__pyx_v_self->tJetEtaPhiSpread_value)));
  }
  __pyx_L252:;

  /* "MuTauTree.pyx":3245
 * 
 *         #print "making tJetPhiPhiMoment"
 *         self.tJetPhiPhiMoment_branch = the_tree.GetBranch("tJetPhiPhiMoment")             # <<<<<<<<<<<<<<
 *         #if not self.tJetPhiPhiMoment_branch and "tJetPhiPhiMoment" not in self.complained:
 *         if not self.tJetPhiPhiMoment_branch and "tJetPhiPhiMoment":
 */
  __pyx_v_self->tJetPhiPhiMoment_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tJetPhiPhiMoment);

  /* "MuTauTree.pyx":3247
 *         self.tJetPhiPhiMoment_branch = the_tree.GetBranch("tJetPhiPhiMoment")
 *         #if not self.tJetPhiPhiMoment_branch and "tJetPhiPhiMoment" not in self.complained:
 *         if not self.tJetPhiPhiMoment_branch and "tJetPhiPhiMoment":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tJetPhiPhiMoment does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tJetPhiPhiMoment")
 */
  __pyx_t_1 = (!(__pyx_v_self->tJetPhiPhiMoment_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":3248
 *         #if not self.tJetPhiPhiMoment_branch and "tJetPhiPhiMoment" not in self.complained:
 *         if not self.tJetPhiPhiMoment_branch and "tJetPhiPhiMoment":
 *             warnings.warn( "MuTauTree: Expected branch tJetPhiPhiMoment does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tJetPhiPhiMoment")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3248; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3248; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3248; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_279));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_279));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_279));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3248; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L253;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3251
 *             #self.complained.add("tJetPhiPhiMoment")
 *         else:
 *             self.tJetPhiPhiMoment_branch.SetAddress(<void*>&self.tJetPhiPhiMoment_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tJetPt"
 */
    __pyx_v_self->tJetPhiPhiMoment_branch->SetAddress(((void *)(&__pyx_v_self->tJetPhiPhiMoment_value)));
  }
  __pyx_L253:;

  /* "MuTauTree.pyx":3254
 * 
 *         #print "making tJetPt"
 *         self.tJetPt_branch = the_tree.GetBranch("tJetPt")             # <<<<<<<<<<<<<<
 *         #if not self.tJetPt_branch and "tJetPt" not in self.complained:
 *         if not self.tJetPt_branch and "tJetPt":
 */
  __pyx_v_self->tJetPt_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tJetPt);

  /* "MuTauTree.pyx":3256
 *         self.tJetPt_branch = the_tree.GetBranch("tJetPt")
 *         #if not self.tJetPt_branch and "tJetPt" not in self.complained:
 *         if not self.tJetPt_branch and "tJetPt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tJetPt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tJetPt")
 */
  __pyx_t_2 = (!(__pyx_v_self->tJetPt_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3257
 *         #if not self.tJetPt_branch and "tJetPt" not in self.complained:
 *         if not self.tJetPt_branch and "tJetPt":
 *             warnings.warn( "MuTauTree: Expected branch tJetPt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tJetPt")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3257; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3257; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3257; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_280));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_280));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_280));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3257; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L254;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3260
 *             #self.complained.add("tJetPt")
 *         else:
 *             self.tJetPt_branch.SetAddress(<void*>&self.tJetPt_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tLeadTrackPt"
 */
    __pyx_v_self->tJetPt_branch->SetAddress(((void *)(&__pyx_v_self->tJetPt_value)));
  }
  __pyx_L254:;

  /* "MuTauTree.pyx":3263
 * 
 *         #print "making tLeadTrackPt"
 *         self.tLeadTrackPt_branch = the_tree.GetBranch("tLeadTrackPt")             # <<<<<<<<<<<<<<
 *         #if not self.tLeadTrackPt_branch and "tLeadTrackPt" not in self.complained:
 *         if not self.tLeadTrackPt_branch and "tLeadTrackPt":
 */
  __pyx_v_self->tLeadTrackPt_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tLeadTrackPt);

  /* "MuTauTree.pyx":3265
 *         self.tLeadTrackPt_branch = the_tree.GetBranch("tLeadTrackPt")
 *         #if not self.tLeadTrackPt_branch and "tLeadTrackPt" not in self.complained:
 *         if not self.tLeadTrackPt_branch and "tLeadTrackPt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tLeadTrackPt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tLeadTrackPt")
 */
  __pyx_t_1 = (!(__pyx_v_self->tLeadTrackPt_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":3266
 *         #if not self.tLeadTrackPt_branch and "tLeadTrackPt" not in self.complained:
 *         if not self.tLeadTrackPt_branch and "tLeadTrackPt":
 *             warnings.warn( "MuTauTree: Expected branch tLeadTrackPt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tLeadTrackPt")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3266; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3266; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3266; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_281));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_281));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_281));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3266; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L255;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3269
 *             #self.complained.add("tLeadTrackPt")
 *         else:
 *             self.tLeadTrackPt_branch.SetAddress(<void*>&self.tLeadTrackPt_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tLooseIso"
 */
    __pyx_v_self->tLeadTrackPt_branch->SetAddress(((void *)(&__pyx_v_self->tLeadTrackPt_value)));
  }
  __pyx_L255:;

  /* "MuTauTree.pyx":3272
 * 
 *         #print "making tLooseIso"
 *         self.tLooseIso_branch = the_tree.GetBranch("tLooseIso")             # <<<<<<<<<<<<<<
 *         #if not self.tLooseIso_branch and "tLooseIso" not in self.complained:
 *         if not self.tLooseIso_branch and "tLooseIso":
 */
  __pyx_v_self->tLooseIso_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tLooseIso);

  /* "MuTauTree.pyx":3274
 *         self.tLooseIso_branch = the_tree.GetBranch("tLooseIso")
 *         #if not self.tLooseIso_branch and "tLooseIso" not in self.complained:
 *         if not self.tLooseIso_branch and "tLooseIso":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tLooseIso does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tLooseIso")
 */
  __pyx_t_2 = (!(__pyx_v_self->tLooseIso_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3275
 *         #if not self.tLooseIso_branch and "tLooseIso" not in self.complained:
 *         if not self.tLooseIso_branch and "tLooseIso":
 *             warnings.warn( "MuTauTree: Expected branch tLooseIso does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tLooseIso")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3275; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3275; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3275; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_282));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_282));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_282));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3275; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L256;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3278
 *             #self.complained.add("tLooseIso")
 *         else:
 *             self.tLooseIso_branch.SetAddress(<void*>&self.tLooseIso_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tLooseIso3Hits"
 */
    __pyx_v_self->tLooseIso_branch->SetAddress(((void *)(&__pyx_v_self->tLooseIso_value)));
  }
  __pyx_L256:;

  /* "MuTauTree.pyx":3281
 * 
 *         #print "making tLooseIso3Hits"
 *         self.tLooseIso3Hits_branch = the_tree.GetBranch("tLooseIso3Hits")             # <<<<<<<<<<<<<<
 *         #if not self.tLooseIso3Hits_branch and "tLooseIso3Hits" not in self.complained:
 *         if not self.tLooseIso3Hits_branch and "tLooseIso3Hits":
 */
  __pyx_v_self->tLooseIso3Hits_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tLooseIso3Hits);

  /* "MuTauTree.pyx":3283
 *         self.tLooseIso3Hits_branch = the_tree.GetBranch("tLooseIso3Hits")
 *         #if not self.tLooseIso3Hits_branch and "tLooseIso3Hits" not in self.complained:
 *         if not self.tLooseIso3Hits_branch and "tLooseIso3Hits":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tLooseIso3Hits does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tLooseIso3Hits")
 */
  __pyx_t_1 = (!(__pyx_v_self->tLooseIso3Hits_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":3284
 *         #if not self.tLooseIso3Hits_branch and "tLooseIso3Hits" not in self.complained:
 *         if not self.tLooseIso3Hits_branch and "tLooseIso3Hits":
 *             warnings.warn( "MuTauTree: Expected branch tLooseIso3Hits does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tLooseIso3Hits")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3284; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3284; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3284; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_283));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_283));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_283));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3284; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L257;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3287
 *             #self.complained.add("tLooseIso3Hits")
 *         else:
 *             self.tLooseIso3Hits_branch.SetAddress(<void*>&self.tLooseIso3Hits_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tLooseMVA2Iso"
 */
    __pyx_v_self->tLooseIso3Hits_branch->SetAddress(((void *)(&__pyx_v_self->tLooseIso3Hits_value)));
  }
  __pyx_L257:;

  /* "MuTauTree.pyx":3290
 * 
 *         #print "making tLooseMVA2Iso"
 *         self.tLooseMVA2Iso_branch = the_tree.GetBranch("tLooseMVA2Iso")             # <<<<<<<<<<<<<<
 *         #if not self.tLooseMVA2Iso_branch and "tLooseMVA2Iso" not in self.complained:
 *         if not self.tLooseMVA2Iso_branch and "tLooseMVA2Iso":
 */
  __pyx_v_self->tLooseMVA2Iso_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tLooseMVA2Iso);

  /* "MuTauTree.pyx":3292
 *         self.tLooseMVA2Iso_branch = the_tree.GetBranch("tLooseMVA2Iso")
 *         #if not self.tLooseMVA2Iso_branch and "tLooseMVA2Iso" not in self.complained:
 *         if not self.tLooseMVA2Iso_branch and "tLooseMVA2Iso":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tLooseMVA2Iso does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tLooseMVA2Iso")
 */
  __pyx_t_2 = (!(__pyx_v_self->tLooseMVA2Iso_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3293
 *         #if not self.tLooseMVA2Iso_branch and "tLooseMVA2Iso" not in self.complained:
 *         if not self.tLooseMVA2Iso_branch and "tLooseMVA2Iso":
 *             warnings.warn( "MuTauTree: Expected branch tLooseMVA2Iso does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tLooseMVA2Iso")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3293; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3293; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3293; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_284));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_284));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_284));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3293; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L258;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3296
 *             #self.complained.add("tLooseMVA2Iso")
 *         else:
 *             self.tLooseMVA2Iso_branch.SetAddress(<void*>&self.tLooseMVA2Iso_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tLooseMVAIso"
 */
    __pyx_v_self->tLooseMVA2Iso_branch->SetAddress(((void *)(&__pyx_v_self->tLooseMVA2Iso_value)));
  }
  __pyx_L258:;

  /* "MuTauTree.pyx":3299
 * 
 *         #print "making tLooseMVAIso"
 *         self.tLooseMVAIso_branch = the_tree.GetBranch("tLooseMVAIso")             # <<<<<<<<<<<<<<
 *         #if not self.tLooseMVAIso_branch and "tLooseMVAIso" not in self.complained:
 *         if not self.tLooseMVAIso_branch and "tLooseMVAIso":
 */
  __pyx_v_self->tLooseMVAIso_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tLooseMVAIso);

  /* "MuTauTree.pyx":3301
 *         self.tLooseMVAIso_branch = the_tree.GetBranch("tLooseMVAIso")
 *         #if not self.tLooseMVAIso_branch and "tLooseMVAIso" not in self.complained:
 *         if not self.tLooseMVAIso_branch and "tLooseMVAIso":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tLooseMVAIso does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tLooseMVAIso")
 */
  __pyx_t_1 = (!(__pyx_v_self->tLooseMVAIso_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":3302
 *         #if not self.tLooseMVAIso_branch and "tLooseMVAIso" not in self.complained:
 *         if not self.tLooseMVAIso_branch and "tLooseMVAIso":
 *             warnings.warn( "MuTauTree: Expected branch tLooseMVAIso does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tLooseMVAIso")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3302; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3302; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3302; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_285));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_285));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_285));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3302; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L259;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3305
 *             #self.complained.add("tLooseMVAIso")
 *         else:
 *             self.tLooseMVAIso_branch.SetAddress(<void*>&self.tLooseMVAIso_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tMass"
 */
    __pyx_v_self->tLooseMVAIso_branch->SetAddress(((void *)(&__pyx_v_self->tLooseMVAIso_value)));
  }
  __pyx_L259:;

  /* "MuTauTree.pyx":3308
 * 
 *         #print "making tMass"
 *         self.tMass_branch = the_tree.GetBranch("tMass")             # <<<<<<<<<<<<<<
 *         #if not self.tMass_branch and "tMass" not in self.complained:
 *         if not self.tMass_branch and "tMass":
 */
  __pyx_v_self->tMass_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tMass);

  /* "MuTauTree.pyx":3310
 *         self.tMass_branch = the_tree.GetBranch("tMass")
 *         #if not self.tMass_branch and "tMass" not in self.complained:
 *         if not self.tMass_branch and "tMass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tMass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tMass")
 */
  __pyx_t_2 = (!(__pyx_v_self->tMass_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3311
 *         #if not self.tMass_branch and "tMass" not in self.complained:
 *         if not self.tMass_branch and "tMass":
 *             warnings.warn( "MuTauTree: Expected branch tMass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tMass")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3311; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3311; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3311; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_286));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_286));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_286));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3311; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L260;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3314
 *             #self.complained.add("tMass")
 *         else:
 *             self.tMass_branch.SetAddress(<void*>&self.tMass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tMediumIso"
 */
    __pyx_v_self->tMass_branch->SetAddress(((void *)(&__pyx_v_self->tMass_value)));
  }
  __pyx_L260:;

  /* "MuTauTree.pyx":3317
 * 
 *         #print "making tMediumIso"
 *         self.tMediumIso_branch = the_tree.GetBranch("tMediumIso")             # <<<<<<<<<<<<<<
 *         #if not self.tMediumIso_branch and "tMediumIso" not in self.complained:
 *         if not self.tMediumIso_branch and "tMediumIso":
 */
  __pyx_v_self->tMediumIso_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tMediumIso);

  /* "MuTauTree.pyx":3319
 *         self.tMediumIso_branch = the_tree.GetBranch("tMediumIso")
 *         #if not self.tMediumIso_branch and "tMediumIso" not in self.complained:
 *         if not self.tMediumIso_branch and "tMediumIso":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tMediumIso does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tMediumIso")
 */
  __pyx_t_1 = (!(__pyx_v_self->tMediumIso_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":3320
 *         #if not self.tMediumIso_branch and "tMediumIso" not in self.complained:
 *         if not self.tMediumIso_branch and "tMediumIso":
 *             warnings.warn( "MuTauTree: Expected branch tMediumIso does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tMediumIso")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_287));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_287));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_287));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L261;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3323
 *             #self.complained.add("tMediumIso")
 *         else:
 *             self.tMediumIso_branch.SetAddress(<void*>&self.tMediumIso_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tMediumIso3Hits"
 */
    __pyx_v_self->tMediumIso_branch->SetAddress(((void *)(&__pyx_v_self->tMediumIso_value)));
  }
  __pyx_L261:;

  /* "MuTauTree.pyx":3326
 * 
 *         #print "making tMediumIso3Hits"
 *         self.tMediumIso3Hits_branch = the_tree.GetBranch("tMediumIso3Hits")             # <<<<<<<<<<<<<<
 *         #if not self.tMediumIso3Hits_branch and "tMediumIso3Hits" not in self.complained:
 *         if not self.tMediumIso3Hits_branch and "tMediumIso3Hits":
 */
  __pyx_v_self->tMediumIso3Hits_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tMediumIso3Hits);

  /* "MuTauTree.pyx":3328
 *         self.tMediumIso3Hits_branch = the_tree.GetBranch("tMediumIso3Hits")
 *         #if not self.tMediumIso3Hits_branch and "tMediumIso3Hits" not in self.complained:
 *         if not self.tMediumIso3Hits_branch and "tMediumIso3Hits":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tMediumIso3Hits does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tMediumIso3Hits")
 */
  __pyx_t_2 = (!(__pyx_v_self->tMediumIso3Hits_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3329
 *         #if not self.tMediumIso3Hits_branch and "tMediumIso3Hits" not in self.complained:
 *         if not self.tMediumIso3Hits_branch and "tMediumIso3Hits":
 *             warnings.warn( "MuTauTree: Expected branch tMediumIso3Hits does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tMediumIso3Hits")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_288));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_288));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_288));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L262;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3332
 *             #self.complained.add("tMediumIso3Hits")
 *         else:
 *             self.tMediumIso3Hits_branch.SetAddress(<void*>&self.tMediumIso3Hits_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tMediumMVA2Iso"
 */
    __pyx_v_self->tMediumIso3Hits_branch->SetAddress(((void *)(&__pyx_v_self->tMediumIso3Hits_value)));
  }
  __pyx_L262:;

  /* "MuTauTree.pyx":3335
 * 
 *         #print "making tMediumMVA2Iso"
 *         self.tMediumMVA2Iso_branch = the_tree.GetBranch("tMediumMVA2Iso")             # <<<<<<<<<<<<<<
 *         #if not self.tMediumMVA2Iso_branch and "tMediumMVA2Iso" not in self.complained:
 *         if not self.tMediumMVA2Iso_branch and "tMediumMVA2Iso":
 */
  __pyx_v_self->tMediumMVA2Iso_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tMediumMVA2Iso);

  /* "MuTauTree.pyx":3337
 *         self.tMediumMVA2Iso_branch = the_tree.GetBranch("tMediumMVA2Iso")
 *         #if not self.tMediumMVA2Iso_branch and "tMediumMVA2Iso" not in self.complained:
 *         if not self.tMediumMVA2Iso_branch and "tMediumMVA2Iso":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tMediumMVA2Iso does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tMediumMVA2Iso")
 */
  __pyx_t_1 = (!(__pyx_v_self->tMediumMVA2Iso_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":3338
 *         #if not self.tMediumMVA2Iso_branch and "tMediumMVA2Iso" not in self.complained:
 *         if not self.tMediumMVA2Iso_branch and "tMediumMVA2Iso":
 *             warnings.warn( "MuTauTree: Expected branch tMediumMVA2Iso does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tMediumMVA2Iso")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3338; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3338; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3338; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_289));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_289));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_289));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3338; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L263;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3341
 *             #self.complained.add("tMediumMVA2Iso")
 *         else:
 *             self.tMediumMVA2Iso_branch.SetAddress(<void*>&self.tMediumMVA2Iso_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tMediumMVAIso"
 */
    __pyx_v_self->tMediumMVA2Iso_branch->SetAddress(((void *)(&__pyx_v_self->tMediumMVA2Iso_value)));
  }
  __pyx_L263:;

  /* "MuTauTree.pyx":3344
 * 
 *         #print "making tMediumMVAIso"
 *         self.tMediumMVAIso_branch = the_tree.GetBranch("tMediumMVAIso")             # <<<<<<<<<<<<<<
 *         #if not self.tMediumMVAIso_branch and "tMediumMVAIso" not in self.complained:
 *         if not self.tMediumMVAIso_branch and "tMediumMVAIso":
 */
  __pyx_v_self->tMediumMVAIso_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tMediumMVAIso);

  /* "MuTauTree.pyx":3346
 *         self.tMediumMVAIso_branch = the_tree.GetBranch("tMediumMVAIso")
 *         #if not self.tMediumMVAIso_branch and "tMediumMVAIso" not in self.complained:
 *         if not self.tMediumMVAIso_branch and "tMediumMVAIso":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tMediumMVAIso does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tMediumMVAIso")
 */
  __pyx_t_2 = (!(__pyx_v_self->tMediumMVAIso_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3347
 *         #if not self.tMediumMVAIso_branch and "tMediumMVAIso" not in self.complained:
 *         if not self.tMediumMVAIso_branch and "tMediumMVAIso":
 *             warnings.warn( "MuTauTree: Expected branch tMediumMVAIso does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tMediumMVAIso")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3347; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3347; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3347; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_290));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_290));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_290));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3347; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L264;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3350
 *             #self.complained.add("tMediumMVAIso")
 *         else:
 *             self.tMediumMVAIso_branch.SetAddress(<void*>&self.tMediumMVAIso_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tMtToMET"
 */
    __pyx_v_self->tMediumMVAIso_branch->SetAddress(((void *)(&__pyx_v_self->tMediumMVAIso_value)));
  }
  __pyx_L264:;

  /* "MuTauTree.pyx":3353
 * 
 *         #print "making tMtToMET"
 *         self.tMtToMET_branch = the_tree.GetBranch("tMtToMET")             # <<<<<<<<<<<<<<
 *         #if not self.tMtToMET_branch and "tMtToMET" not in self.complained:
 *         if not self.tMtToMET_branch and "tMtToMET":
 */
  __pyx_v_self->tMtToMET_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tMtToMET);

  /* "MuTauTree.pyx":3355
 *         self.tMtToMET_branch = the_tree.GetBranch("tMtToMET")
 *         #if not self.tMtToMET_branch and "tMtToMET" not in self.complained:
 *         if not self.tMtToMET_branch and "tMtToMET":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tMtToMET does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tMtToMET")
 */
  __pyx_t_1 = (!(__pyx_v_self->tMtToMET_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":3356
 *         #if not self.tMtToMET_branch and "tMtToMET" not in self.complained:
 *         if not self.tMtToMET_branch and "tMtToMET":
 *             warnings.warn( "MuTauTree: Expected branch tMtToMET does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tMtToMET")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3356; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3356; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3356; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_291));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_291));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_291));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3356; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L265;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3359
 *             #self.complained.add("tMtToMET")
 *         else:
 *             self.tMtToMET_branch.SetAddress(<void*>&self.tMtToMET_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tMtToMVAMET"
 */
    __pyx_v_self->tMtToMET_branch->SetAddress(((void *)(&__pyx_v_self->tMtToMET_value)));
  }
  __pyx_L265:;

  /* "MuTauTree.pyx":3362
 * 
 *         #print "making tMtToMVAMET"
 *         self.tMtToMVAMET_branch = the_tree.GetBranch("tMtToMVAMET")             # <<<<<<<<<<<<<<
 *         #if not self.tMtToMVAMET_branch and "tMtToMVAMET" not in self.complained:
 *         if not self.tMtToMVAMET_branch and "tMtToMVAMET":
 */
  __pyx_v_self->tMtToMVAMET_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tMtToMVAMET);

  /* "MuTauTree.pyx":3364
 *         self.tMtToMVAMET_branch = the_tree.GetBranch("tMtToMVAMET")
 *         #if not self.tMtToMVAMET_branch and "tMtToMVAMET" not in self.complained:
 *         if not self.tMtToMVAMET_branch and "tMtToMVAMET":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tMtToMVAMET does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tMtToMVAMET")
 */
  __pyx_t_2 = (!(__pyx_v_self->tMtToMVAMET_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3365
 *         #if not self.tMtToMVAMET_branch and "tMtToMVAMET" not in self.complained:
 *         if not self.tMtToMVAMET_branch and "tMtToMVAMET":
 *             warnings.warn( "MuTauTree: Expected branch tMtToMVAMET does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tMtToMVAMET")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3365; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3365; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3365; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_292));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_292));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_292));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3365; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L266;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3368
 *             #self.complained.add("tMtToMVAMET")
 *         else:
 *             self.tMtToMVAMET_branch.SetAddress(<void*>&self.tMtToMVAMET_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tMtToPFMET"
 */
    __pyx_v_self->tMtToMVAMET_branch->SetAddress(((void *)(&__pyx_v_self->tMtToMVAMET_value)));
  }
  __pyx_L266:;

  /* "MuTauTree.pyx":3371
 * 
 *         #print "making tMtToPFMET"
 *         self.tMtToPFMET_branch = the_tree.GetBranch("tMtToPFMET")             # <<<<<<<<<<<<<<
 *         #if not self.tMtToPFMET_branch and "tMtToPFMET" not in self.complained:
 *         if not self.tMtToPFMET_branch and "tMtToPFMET":
 */
  __pyx_v_self->tMtToPFMET_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tMtToPFMET);

  /* "MuTauTree.pyx":3373
 *         self.tMtToPFMET_branch = the_tree.GetBranch("tMtToPFMET")
 *         #if not self.tMtToPFMET_branch and "tMtToPFMET" not in self.complained:
 *         if not self.tMtToPFMET_branch and "tMtToPFMET":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tMtToPFMET does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tMtToPFMET")
 */
  __pyx_t_1 = (!(__pyx_v_self->tMtToPFMET_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":3374
 *         #if not self.tMtToPFMET_branch and "tMtToPFMET" not in self.complained:
 *         if not self.tMtToPFMET_branch and "tMtToPFMET":
 *             warnings.warn( "MuTauTree: Expected branch tMtToPFMET does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tMtToPFMET")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3374; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3374; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3374; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_293));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_293));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_293));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3374; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L267;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3377
 *             #self.complained.add("tMtToPFMET")
 *         else:
 *             self.tMtToPFMET_branch.SetAddress(<void*>&self.tMtToPFMET_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tMtToPfMet_Ty1"
 */
    __pyx_v_self->tMtToPFMET_branch->SetAddress(((void *)(&__pyx_v_self->tMtToPFMET_value)));
  }
  __pyx_L267:;

  /* "MuTauTree.pyx":3380
 * 
 *         #print "making tMtToPfMet_Ty1"
 *         self.tMtToPfMet_Ty1_branch = the_tree.GetBranch("tMtToPfMet_Ty1")             # <<<<<<<<<<<<<<
 *         #if not self.tMtToPfMet_Ty1_branch and "tMtToPfMet_Ty1" not in self.complained:
 *         if not self.tMtToPfMet_Ty1_branch and "tMtToPfMet_Ty1":
 */
  __pyx_v_self->tMtToPfMet_Ty1_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tMtToPfMet_Ty1);

  /* "MuTauTree.pyx":3382
 *         self.tMtToPfMet_Ty1_branch = the_tree.GetBranch("tMtToPfMet_Ty1")
 *         #if not self.tMtToPfMet_Ty1_branch and "tMtToPfMet_Ty1" not in self.complained:
 *         if not self.tMtToPfMet_Ty1_branch and "tMtToPfMet_Ty1":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tMtToPfMet_Ty1 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tMtToPfMet_Ty1")
 */
  __pyx_t_2 = (!(__pyx_v_self->tMtToPfMet_Ty1_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3383
 *         #if not self.tMtToPfMet_Ty1_branch and "tMtToPfMet_Ty1" not in self.complained:
 *         if not self.tMtToPfMet_Ty1_branch and "tMtToPfMet_Ty1":
 *             warnings.warn( "MuTauTree: Expected branch tMtToPfMet_Ty1 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tMtToPfMet_Ty1")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3383; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3383; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3383; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_294));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_294));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_294));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3383; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L268;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3386
 *             #self.complained.add("tMtToPfMet_Ty1")
 *         else:
 *             self.tMtToPfMet_Ty1_branch.SetAddress(<void*>&self.tMtToPfMet_Ty1_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tMtToPfMet_jes"
 */
    __pyx_v_self->tMtToPfMet_Ty1_branch->SetAddress(((void *)(&__pyx_v_self->tMtToPfMet_Ty1_value)));
  }
  __pyx_L268:;

  /* "MuTauTree.pyx":3389
 * 
 *         #print "making tMtToPfMet_jes"
 *         self.tMtToPfMet_jes_branch = the_tree.GetBranch("tMtToPfMet_jes")             # <<<<<<<<<<<<<<
 *         #if not self.tMtToPfMet_jes_branch and "tMtToPfMet_jes" not in self.complained:
 *         if not self.tMtToPfMet_jes_branch and "tMtToPfMet_jes":
 */
  __pyx_v_self->tMtToPfMet_jes_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tMtToPfMet_jes);

  /* "MuTauTree.pyx":3391
 *         self.tMtToPfMet_jes_branch = the_tree.GetBranch("tMtToPfMet_jes")
 *         #if not self.tMtToPfMet_jes_branch and "tMtToPfMet_jes" not in self.complained:
 *         if not self.tMtToPfMet_jes_branch and "tMtToPfMet_jes":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tMtToPfMet_jes does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tMtToPfMet_jes")
 */
  __pyx_t_1 = (!(__pyx_v_self->tMtToPfMet_jes_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":3392
 *         #if not self.tMtToPfMet_jes_branch and "tMtToPfMet_jes" not in self.complained:
 *         if not self.tMtToPfMet_jes_branch and "tMtToPfMet_jes":
 *             warnings.warn( "MuTauTree: Expected branch tMtToPfMet_jes does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tMtToPfMet_jes")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3392; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3392; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3392; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_295));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_295));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_295));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3392; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L269;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3395
 *             #self.complained.add("tMtToPfMet_jes")
 *         else:
 *             self.tMtToPfMet_jes_branch.SetAddress(<void*>&self.tMtToPfMet_jes_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tMtToPfMet_mes"
 */
    __pyx_v_self->tMtToPfMet_jes_branch->SetAddress(((void *)(&__pyx_v_self->tMtToPfMet_jes_value)));
  }
  __pyx_L269:;

  /* "MuTauTree.pyx":3398
 * 
 *         #print "making tMtToPfMet_mes"
 *         self.tMtToPfMet_mes_branch = the_tree.GetBranch("tMtToPfMet_mes")             # <<<<<<<<<<<<<<
 *         #if not self.tMtToPfMet_mes_branch and "tMtToPfMet_mes" not in self.complained:
 *         if not self.tMtToPfMet_mes_branch and "tMtToPfMet_mes":
 */
  __pyx_v_self->tMtToPfMet_mes_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tMtToPfMet_mes);

  /* "MuTauTree.pyx":3400
 *         self.tMtToPfMet_mes_branch = the_tree.GetBranch("tMtToPfMet_mes")
 *         #if not self.tMtToPfMet_mes_branch and "tMtToPfMet_mes" not in self.complained:
 *         if not self.tMtToPfMet_mes_branch and "tMtToPfMet_mes":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tMtToPfMet_mes does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tMtToPfMet_mes")
 */
  __pyx_t_2 = (!(__pyx_v_self->tMtToPfMet_mes_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3401
 *         #if not self.tMtToPfMet_mes_branch and "tMtToPfMet_mes" not in self.complained:
 *         if not self.tMtToPfMet_mes_branch and "tMtToPfMet_mes":
 *             warnings.warn( "MuTauTree: Expected branch tMtToPfMet_mes does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tMtToPfMet_mes")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3401; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3401; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3401; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_296));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_296));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_296));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3401; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L270;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3404
 *             #self.complained.add("tMtToPfMet_mes")
 *         else:
 *             self.tMtToPfMet_mes_branch.SetAddress(<void*>&self.tMtToPfMet_mes_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tMtToPfMet_tes"
 */
    __pyx_v_self->tMtToPfMet_mes_branch->SetAddress(((void *)(&__pyx_v_self->tMtToPfMet_mes_value)));
  }
  __pyx_L270:;

  /* "MuTauTree.pyx":3407
 * 
 *         #print "making tMtToPfMet_tes"
 *         self.tMtToPfMet_tes_branch = the_tree.GetBranch("tMtToPfMet_tes")             # <<<<<<<<<<<<<<
 *         #if not self.tMtToPfMet_tes_branch and "tMtToPfMet_tes" not in self.complained:
 *         if not self.tMtToPfMet_tes_branch and "tMtToPfMet_tes":
 */
  __pyx_v_self->tMtToPfMet_tes_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tMtToPfMet_tes);

  /* "MuTauTree.pyx":3409
 *         self.tMtToPfMet_tes_branch = the_tree.GetBranch("tMtToPfMet_tes")
 *         #if not self.tMtToPfMet_tes_branch and "tMtToPfMet_tes" not in self.complained:
 *         if not self.tMtToPfMet_tes_branch and "tMtToPfMet_tes":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tMtToPfMet_tes does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tMtToPfMet_tes")
 */
  __pyx_t_1 = (!(__pyx_v_self->tMtToPfMet_tes_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":3410
 *         #if not self.tMtToPfMet_tes_branch and "tMtToPfMet_tes" not in self.complained:
 *         if not self.tMtToPfMet_tes_branch and "tMtToPfMet_tes":
 *             warnings.warn( "MuTauTree: Expected branch tMtToPfMet_tes does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tMtToPfMet_tes")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3410; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3410; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3410; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_297));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_297));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_297));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3410; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L271;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3413
 *             #self.complained.add("tMtToPfMet_tes")
 *         else:
 *             self.tMtToPfMet_tes_branch.SetAddress(<void*>&self.tMtToPfMet_tes_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tMtToPfMet_ues"
 */
    __pyx_v_self->tMtToPfMet_tes_branch->SetAddress(((void *)(&__pyx_v_self->tMtToPfMet_tes_value)));
  }
  __pyx_L271:;

  /* "MuTauTree.pyx":3416
 * 
 *         #print "making tMtToPfMet_ues"
 *         self.tMtToPfMet_ues_branch = the_tree.GetBranch("tMtToPfMet_ues")             # <<<<<<<<<<<<<<
 *         #if not self.tMtToPfMet_ues_branch and "tMtToPfMet_ues" not in self.complained:
 *         if not self.tMtToPfMet_ues_branch and "tMtToPfMet_ues":
 */
  __pyx_v_self->tMtToPfMet_ues_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tMtToPfMet_ues);

  /* "MuTauTree.pyx":3418
 *         self.tMtToPfMet_ues_branch = the_tree.GetBranch("tMtToPfMet_ues")
 *         #if not self.tMtToPfMet_ues_branch and "tMtToPfMet_ues" not in self.complained:
 *         if not self.tMtToPfMet_ues_branch and "tMtToPfMet_ues":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tMtToPfMet_ues does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tMtToPfMet_ues")
 */
  __pyx_t_2 = (!(__pyx_v_self->tMtToPfMet_ues_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3419
 *         #if not self.tMtToPfMet_ues_branch and "tMtToPfMet_ues" not in self.complained:
 *         if not self.tMtToPfMet_ues_branch and "tMtToPfMet_ues":
 *             warnings.warn( "MuTauTree: Expected branch tMtToPfMet_ues does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tMtToPfMet_ues")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3419; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3419; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3419; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_298));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_298));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_298));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3419; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L272;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3422
 *             #self.complained.add("tMtToPfMet_ues")
 *         else:
 *             self.tMtToPfMet_ues_branch.SetAddress(<void*>&self.tMtToPfMet_ues_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tMuOverlap"
 */
    __pyx_v_self->tMtToPfMet_ues_branch->SetAddress(((void *)(&__pyx_v_self->tMtToPfMet_ues_value)));
  }
  __pyx_L272:;

  /* "MuTauTree.pyx":3425
 * 
 *         #print "making tMuOverlap"
 *         self.tMuOverlap_branch = the_tree.GetBranch("tMuOverlap")             # <<<<<<<<<<<<<<
 *         #if not self.tMuOverlap_branch and "tMuOverlap" not in self.complained:
 *         if not self.tMuOverlap_branch and "tMuOverlap":
 */
  __pyx_v_self->tMuOverlap_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tMuOverlap);

  /* "MuTauTree.pyx":3427
 *         self.tMuOverlap_branch = the_tree.GetBranch("tMuOverlap")
 *         #if not self.tMuOverlap_branch and "tMuOverlap" not in self.complained:
 *         if not self.tMuOverlap_branch and "tMuOverlap":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tMuOverlap does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tMuOverlap")
 */
  __pyx_t_1 = (!(__pyx_v_self->tMuOverlap_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":3428
 *         #if not self.tMuOverlap_branch and "tMuOverlap" not in self.complained:
 *         if not self.tMuOverlap_branch and "tMuOverlap":
 *             warnings.warn( "MuTauTree: Expected branch tMuOverlap does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tMuOverlap")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3428; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3428; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3428; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_299));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_299));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_299));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3428; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L273;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3431
 *             #self.complained.add("tMuOverlap")
 *         else:
 *             self.tMuOverlap_branch.SetAddress(<void*>&self.tMuOverlap_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tPhi"
 */
    __pyx_v_self->tMuOverlap_branch->SetAddress(((void *)(&__pyx_v_self->tMuOverlap_value)));
  }
  __pyx_L273:;

  /* "MuTauTree.pyx":3434
 * 
 *         #print "making tPhi"
 *         self.tPhi_branch = the_tree.GetBranch("tPhi")             # <<<<<<<<<<<<<<
 *         #if not self.tPhi_branch and "tPhi" not in self.complained:
 *         if not self.tPhi_branch and "tPhi":
 */
  __pyx_v_self->tPhi_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tPhi);

  /* "MuTauTree.pyx":3436
 *         self.tPhi_branch = the_tree.GetBranch("tPhi")
 *         #if not self.tPhi_branch and "tPhi" not in self.complained:
 *         if not self.tPhi_branch and "tPhi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tPhi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tPhi")
 */
  __pyx_t_2 = (!(__pyx_v_self->tPhi_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3437
 *         #if not self.tPhi_branch and "tPhi" not in self.complained:
 *         if not self.tPhi_branch and "tPhi":
 *             warnings.warn( "MuTauTree: Expected branch tPhi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tPhi")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3437; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3437; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3437; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_300));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_300));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_300));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3437; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L274;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3440
 *             #self.complained.add("tPhi")
 *         else:
 *             self.tPhi_branch.SetAddress(<void*>&self.tPhi_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tPt"
 */
    __pyx_v_self->tPhi_branch->SetAddress(((void *)(&__pyx_v_self->tPhi_value)));
  }
  __pyx_L274:;

  /* "MuTauTree.pyx":3443
 * 
 *         #print "making tPt"
 *         self.tPt_branch = the_tree.GetBranch("tPt")             # <<<<<<<<<<<<<<
 *         #if not self.tPt_branch and "tPt" not in self.complained:
 *         if not self.tPt_branch and "tPt":
 */
  __pyx_v_self->tPt_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tPt);

  /* "MuTauTree.pyx":3445
 *         self.tPt_branch = the_tree.GetBranch("tPt")
 *         #if not self.tPt_branch and "tPt" not in self.complained:
 *         if not self.tPt_branch and "tPt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tPt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tPt")
 */
  __pyx_t_1 = (!(__pyx_v_self->tPt_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":3446
 *         #if not self.tPt_branch and "tPt" not in self.complained:
 *         if not self.tPt_branch and "tPt":
 *             warnings.warn( "MuTauTree: Expected branch tPt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tPt")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3446; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3446; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3446; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_301));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_301));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_301));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3446; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L275;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3449
 *             #self.complained.add("tPt")
 *         else:
 *             self.tPt_branch.SetAddress(<void*>&self.tPt_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tTNPId"
 */
    __pyx_v_self->tPt_branch->SetAddress(((void *)(&__pyx_v_self->tPt_value)));
  }
  __pyx_L275:;

  /* "MuTauTree.pyx":3452
 * 
 *         #print "making tTNPId"
 *         self.tTNPId_branch = the_tree.GetBranch("tTNPId")             # <<<<<<<<<<<<<<
 *         #if not self.tTNPId_branch and "tTNPId" not in self.complained:
 *         if not self.tTNPId_branch and "tTNPId":
 */
  __pyx_v_self->tTNPId_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tTNPId);

  /* "MuTauTree.pyx":3454
 *         self.tTNPId_branch = the_tree.GetBranch("tTNPId")
 *         #if not self.tTNPId_branch and "tTNPId" not in self.complained:
 *         if not self.tTNPId_branch and "tTNPId":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tTNPId does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tTNPId")
 */
  __pyx_t_2 = (!(__pyx_v_self->tTNPId_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3455
 *         #if not self.tTNPId_branch and "tTNPId" not in self.complained:
 *         if not self.tTNPId_branch and "tTNPId":
 *             warnings.warn( "MuTauTree: Expected branch tTNPId does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tTNPId")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3455; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3455; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3455; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_302));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_302));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_302));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3455; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L276;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3458
 *             #self.complained.add("tTNPId")
 *         else:
 *             self.tTNPId_branch.SetAddress(<void*>&self.tTNPId_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tTightIso"
 */
    __pyx_v_self->tTNPId_branch->SetAddress(((void *)(&__pyx_v_self->tTNPId_value)));
  }
  __pyx_L276:;

  /* "MuTauTree.pyx":3461
 * 
 *         #print "making tTightIso"
 *         self.tTightIso_branch = the_tree.GetBranch("tTightIso")             # <<<<<<<<<<<<<<
 *         #if not self.tTightIso_branch and "tTightIso" not in self.complained:
 *         if not self.tTightIso_branch and "tTightIso":
 */
  __pyx_v_self->tTightIso_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tTightIso);

  /* "MuTauTree.pyx":3463
 *         self.tTightIso_branch = the_tree.GetBranch("tTightIso")
 *         #if not self.tTightIso_branch and "tTightIso" not in self.complained:
 *         if not self.tTightIso_branch and "tTightIso":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tTightIso does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tTightIso")
 */
  __pyx_t_1 = (!(__pyx_v_self->tTightIso_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":3464
 *         #if not self.tTightIso_branch and "tTightIso" not in self.complained:
 *         if not self.tTightIso_branch and "tTightIso":
 *             warnings.warn( "MuTauTree: Expected branch tTightIso does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tTightIso")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3464; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3464; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3464; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_303));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_303));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_303));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3464; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L277;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3467
 *             #self.complained.add("tTightIso")
 *         else:
 *             self.tTightIso_branch.SetAddress(<void*>&self.tTightIso_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tTightIso3Hits"
 */
    __pyx_v_self->tTightIso_branch->SetAddress(((void *)(&__pyx_v_self->tTightIso_value)));
  }
  __pyx_L277:;

  /* "MuTauTree.pyx":3470
 * 
 *         #print "making tTightIso3Hits"
 *         self.tTightIso3Hits_branch = the_tree.GetBranch("tTightIso3Hits")             # <<<<<<<<<<<<<<
 *         #if not self.tTightIso3Hits_branch and "tTightIso3Hits" not in self.complained:
 *         if not self.tTightIso3Hits_branch and "tTightIso3Hits":
 */
  __pyx_v_self->tTightIso3Hits_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tTightIso3Hits);

  /* "MuTauTree.pyx":3472
 *         self.tTightIso3Hits_branch = the_tree.GetBranch("tTightIso3Hits")
 *         #if not self.tTightIso3Hits_branch and "tTightIso3Hits" not in self.complained:
 *         if not self.tTightIso3Hits_branch and "tTightIso3Hits":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tTightIso3Hits does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tTightIso3Hits")
 */
  __pyx_t_2 = (!(__pyx_v_self->tTightIso3Hits_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3473
 *         #if not self.tTightIso3Hits_branch and "tTightIso3Hits" not in self.complained:
 *         if not self.tTightIso3Hits_branch and "tTightIso3Hits":
 *             warnings.warn( "MuTauTree: Expected branch tTightIso3Hits does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tTightIso3Hits")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3473; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3473; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3473; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_304));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_304));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_304));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3473; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L278;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3476
 *             #self.complained.add("tTightIso3Hits")
 *         else:
 *             self.tTightIso3Hits_branch.SetAddress(<void*>&self.tTightIso3Hits_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tTightMVA2Iso"
 */
    __pyx_v_self->tTightIso3Hits_branch->SetAddress(((void *)(&__pyx_v_self->tTightIso3Hits_value)));
  }
  __pyx_L278:;

  /* "MuTauTree.pyx":3479
 * 
 *         #print "making tTightMVA2Iso"
 *         self.tTightMVA2Iso_branch = the_tree.GetBranch("tTightMVA2Iso")             # <<<<<<<<<<<<<<
 *         #if not self.tTightMVA2Iso_branch and "tTightMVA2Iso" not in self.complained:
 *         if not self.tTightMVA2Iso_branch and "tTightMVA2Iso":
 */
  __pyx_v_self->tTightMVA2Iso_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tTightMVA2Iso);

  /* "MuTauTree.pyx":3481
 *         self.tTightMVA2Iso_branch = the_tree.GetBranch("tTightMVA2Iso")
 *         #if not self.tTightMVA2Iso_branch and "tTightMVA2Iso" not in self.complained:
 *         if not self.tTightMVA2Iso_branch and "tTightMVA2Iso":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tTightMVA2Iso does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tTightMVA2Iso")
 */
  __pyx_t_1 = (!(__pyx_v_self->tTightMVA2Iso_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":3482
 *         #if not self.tTightMVA2Iso_branch and "tTightMVA2Iso" not in self.complained:
 *         if not self.tTightMVA2Iso_branch and "tTightMVA2Iso":
 *             warnings.warn( "MuTauTree: Expected branch tTightMVA2Iso does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tTightMVA2Iso")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3482; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3482; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3482; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_305));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_305));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_305));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3482; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L279;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3485
 *             #self.complained.add("tTightMVA2Iso")
 *         else:
 *             self.tTightMVA2Iso_branch.SetAddress(<void*>&self.tTightMVA2Iso_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tTightMVAIso"
 */
    __pyx_v_self->tTightMVA2Iso_branch->SetAddress(((void *)(&__pyx_v_self->tTightMVA2Iso_value)));
  }
  __pyx_L279:;

  /* "MuTauTree.pyx":3488
 * 
 *         #print "making tTightMVAIso"
 *         self.tTightMVAIso_branch = the_tree.GetBranch("tTightMVAIso")             # <<<<<<<<<<<<<<
 *         #if not self.tTightMVAIso_branch and "tTightMVAIso" not in self.complained:
 *         if not self.tTightMVAIso_branch and "tTightMVAIso":
 */
  __pyx_v_self->tTightMVAIso_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tTightMVAIso);

  /* "MuTauTree.pyx":3490
 *         self.tTightMVAIso_branch = the_tree.GetBranch("tTightMVAIso")
 *         #if not self.tTightMVAIso_branch and "tTightMVAIso" not in self.complained:
 *         if not self.tTightMVAIso_branch and "tTightMVAIso":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tTightMVAIso does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tTightMVAIso")
 */
  __pyx_t_2 = (!(__pyx_v_self->tTightMVAIso_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3491
 *         #if not self.tTightMVAIso_branch and "tTightMVAIso" not in self.complained:
 *         if not self.tTightMVAIso_branch and "tTightMVAIso":
 *             warnings.warn( "MuTauTree: Expected branch tTightMVAIso does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tTightMVAIso")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3491; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3491; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3491; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_306));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_306));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_306));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3491; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L280;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3494
 *             #self.complained.add("tTightMVAIso")
 *         else:
 *             self.tTightMVAIso_branch.SetAddress(<void*>&self.tTightMVAIso_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tToMETDPhi"
 */
    __pyx_v_self->tTightMVAIso_branch->SetAddress(((void *)(&__pyx_v_self->tTightMVAIso_value)));
  }
  __pyx_L280:;

  /* "MuTauTree.pyx":3497
 * 
 *         #print "making tToMETDPhi"
 *         self.tToMETDPhi_branch = the_tree.GetBranch("tToMETDPhi")             # <<<<<<<<<<<<<<
 *         #if not self.tToMETDPhi_branch and "tToMETDPhi" not in self.complained:
 *         if not self.tToMETDPhi_branch and "tToMETDPhi":
 */
  __pyx_v_self->tToMETDPhi_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tToMETDPhi);

  /* "MuTauTree.pyx":3499
 *         self.tToMETDPhi_branch = the_tree.GetBranch("tToMETDPhi")
 *         #if not self.tToMETDPhi_branch and "tToMETDPhi" not in self.complained:
 *         if not self.tToMETDPhi_branch and "tToMETDPhi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tToMETDPhi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tToMETDPhi")
 */
  __pyx_t_1 = (!(__pyx_v_self->tToMETDPhi_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":3500
 *         #if not self.tToMETDPhi_branch and "tToMETDPhi" not in self.complained:
 *         if not self.tToMETDPhi_branch and "tToMETDPhi":
 *             warnings.warn( "MuTauTree: Expected branch tToMETDPhi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tToMETDPhi")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3500; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3500; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3500; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_307));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_307));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_307));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3500; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L281;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3503
 *             #self.complained.add("tToMETDPhi")
 *         else:
 *             self.tToMETDPhi_branch.SetAddress(<void*>&self.tToMETDPhi_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tVLooseIso"
 */
    __pyx_v_self->tToMETDPhi_branch->SetAddress(((void *)(&__pyx_v_self->tToMETDPhi_value)));
  }
  __pyx_L281:;

  /* "MuTauTree.pyx":3506
 * 
 *         #print "making tVLooseIso"
 *         self.tVLooseIso_branch = the_tree.GetBranch("tVLooseIso")             # <<<<<<<<<<<<<<
 *         #if not self.tVLooseIso_branch and "tVLooseIso" not in self.complained:
 *         if not self.tVLooseIso_branch and "tVLooseIso":
 */
  __pyx_v_self->tVLooseIso_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tVLooseIso);

  /* "MuTauTree.pyx":3508
 *         self.tVLooseIso_branch = the_tree.GetBranch("tVLooseIso")
 *         #if not self.tVLooseIso_branch and "tVLooseIso" not in self.complained:
 *         if not self.tVLooseIso_branch and "tVLooseIso":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tVLooseIso does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tVLooseIso")
 */
  __pyx_t_2 = (!(__pyx_v_self->tVLooseIso_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3509
 *         #if not self.tVLooseIso_branch and "tVLooseIso" not in self.complained:
 *         if not self.tVLooseIso_branch and "tVLooseIso":
 *             warnings.warn( "MuTauTree: Expected branch tVLooseIso does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tVLooseIso")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3509; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3509; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3509; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_308));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_308));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_308));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3509; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L282;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3512
 *             #self.complained.add("tVLooseIso")
 *         else:
 *             self.tVLooseIso_branch.SetAddress(<void*>&self.tVLooseIso_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tVZ"
 */
    __pyx_v_self->tVLooseIso_branch->SetAddress(((void *)(&__pyx_v_self->tVLooseIso_value)));
  }
  __pyx_L282:;

  /* "MuTauTree.pyx":3515
 * 
 *         #print "making tVZ"
 *         self.tVZ_branch = the_tree.GetBranch("tVZ")             # <<<<<<<<<<<<<<
 *         #if not self.tVZ_branch and "tVZ" not in self.complained:
 *         if not self.tVZ_branch and "tVZ":
 */
  __pyx_v_self->tVZ_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tVZ);

  /* "MuTauTree.pyx":3517
 *         self.tVZ_branch = the_tree.GetBranch("tVZ")
 *         #if not self.tVZ_branch and "tVZ" not in self.complained:
 *         if not self.tVZ_branch and "tVZ":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tVZ does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tVZ")
 */
  __pyx_t_1 = (!(__pyx_v_self->tVZ_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":3518
 *         #if not self.tVZ_branch and "tVZ" not in self.complained:
 *         if not self.tVZ_branch and "tVZ":
 *             warnings.warn( "MuTauTree: Expected branch tVZ does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tVZ")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3518; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3518; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3518; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_309));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_309));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_309));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3518; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L283;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3521
 *             #self.complained.add("tVZ")
 *         else:
 *             self.tVZ_branch.SetAddress(<void*>&self.tVZ_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tauHpsVetoPt20"
 */
    __pyx_v_self->tVZ_branch->SetAddress(((void *)(&__pyx_v_self->tVZ_value)));
  }
  __pyx_L283:;

  /* "MuTauTree.pyx":3524
 * 
 *         #print "making tauHpsVetoPt20"
 *         self.tauHpsVetoPt20_branch = the_tree.GetBranch("tauHpsVetoPt20")             # <<<<<<<<<<<<<<
 *         #if not self.tauHpsVetoPt20_branch and "tauHpsVetoPt20" not in self.complained:
 *         if not self.tauHpsVetoPt20_branch and "tauHpsVetoPt20":
 */
  __pyx_v_self->tauHpsVetoPt20_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tauHpsVetoPt20);

  /* "MuTauTree.pyx":3526
 *         self.tauHpsVetoPt20_branch = the_tree.GetBranch("tauHpsVetoPt20")
 *         #if not self.tauHpsVetoPt20_branch and "tauHpsVetoPt20" not in self.complained:
 *         if not self.tauHpsVetoPt20_branch and "tauHpsVetoPt20":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tauHpsVetoPt20 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tauHpsVetoPt20")
 */
  __pyx_t_2 = (!(__pyx_v_self->tauHpsVetoPt20_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3527
 *         #if not self.tauHpsVetoPt20_branch and "tauHpsVetoPt20" not in self.complained:
 *         if not self.tauHpsVetoPt20_branch and "tauHpsVetoPt20":
 *             warnings.warn( "MuTauTree: Expected branch tauHpsVetoPt20 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tauHpsVetoPt20")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3527; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3527; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3527; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_310));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_310));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_310));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3527; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L284;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3530
 *             #self.complained.add("tauHpsVetoPt20")
 *         else:
 *             self.tauHpsVetoPt20_branch.SetAddress(<void*>&self.tauHpsVetoPt20_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tauVetoPt20"
 */
    __pyx_v_self->tauHpsVetoPt20_branch->SetAddress(((void *)(&__pyx_v_self->tauHpsVetoPt20_value)));
  }
  __pyx_L284:;

  /* "MuTauTree.pyx":3533
 * 
 *         #print "making tauVetoPt20"
 *         self.tauVetoPt20_branch = the_tree.GetBranch("tauVetoPt20")             # <<<<<<<<<<<<<<
 *         #if not self.tauVetoPt20_branch and "tauVetoPt20" not in self.complained:
 *         if not self.tauVetoPt20_branch and "tauVetoPt20":
 */
  __pyx_v_self->tauVetoPt20_branch = __pyx_v_the_tree->GetBranch(__pyx_k__tauVetoPt20);

  /* "MuTauTree.pyx":3535
 *         self.tauVetoPt20_branch = the_tree.GetBranch("tauVetoPt20")
 *         #if not self.tauVetoPt20_branch and "tauVetoPt20" not in self.complained:
 *         if not self.tauVetoPt20_branch and "tauVetoPt20":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tauVetoPt20 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tauVetoPt20")
 */
  __pyx_t_1 = (!(__pyx_v_self->tauVetoPt20_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":3536
 *         #if not self.tauVetoPt20_branch and "tauVetoPt20" not in self.complained:
 *         if not self.tauVetoPt20_branch and "tauVetoPt20":
 *             warnings.warn( "MuTauTree: Expected branch tauVetoPt20 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tauVetoPt20")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3536; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3536; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3536; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_311));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_311));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_311));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3536; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L285;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3539
 *             #self.complained.add("tauVetoPt20")
 *         else:
 *             self.tauVetoPt20_branch.SetAddress(<void*>&self.tauVetoPt20_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tauVetoPt20Loose3HitsVtx"
 */
    __pyx_v_self->tauVetoPt20_branch->SetAddress(((void *)(&__pyx_v_self->tauVetoPt20_value)));
  }
  __pyx_L285:;

  /* "MuTauTree.pyx":3542
 * 
 *         #print "making tauVetoPt20Loose3HitsVtx"
 *         self.tauVetoPt20Loose3HitsVtx_branch = the_tree.GetBranch("tauVetoPt20Loose3HitsVtx")             # <<<<<<<<<<<<<<
 *         #if not self.tauVetoPt20Loose3HitsVtx_branch and "tauVetoPt20Loose3HitsVtx" not in self.complained:
 *         if not self.tauVetoPt20Loose3HitsVtx_branch and "tauVetoPt20Loose3HitsVtx":
 */
  __pyx_v_self->tauVetoPt20Loose3HitsVtx_branch = __pyx_v_the_tree->GetBranch(__pyx_k_312);

  /* "MuTauTree.pyx":3544
 *         self.tauVetoPt20Loose3HitsVtx_branch = the_tree.GetBranch("tauVetoPt20Loose3HitsVtx")
 *         #if not self.tauVetoPt20Loose3HitsVtx_branch and "tauVetoPt20Loose3HitsVtx" not in self.complained:
 *         if not self.tauVetoPt20Loose3HitsVtx_branch and "tauVetoPt20Loose3HitsVtx":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tauVetoPt20Loose3HitsVtx does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tauVetoPt20Loose3HitsVtx")
 */
  __pyx_t_2 = (!(__pyx_v_self->tauVetoPt20Loose3HitsVtx_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3545
 *         #if not self.tauVetoPt20Loose3HitsVtx_branch and "tauVetoPt20Loose3HitsVtx" not in self.complained:
 *         if not self.tauVetoPt20Loose3HitsVtx_branch and "tauVetoPt20Loose3HitsVtx":
 *             warnings.warn( "MuTauTree: Expected branch tauVetoPt20Loose3HitsVtx does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tauVetoPt20Loose3HitsVtx")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3545; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3545; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3545; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_313));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_313));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_313));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3545; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L286;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3548
 *             #self.complained.add("tauVetoPt20Loose3HitsVtx")
 *         else:
 *             self.tauVetoPt20Loose3HitsVtx_branch.SetAddress(<void*>&self.tauVetoPt20Loose3HitsVtx_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tauVetoPt20LooseMVA2Vtx"
 */
    __pyx_v_self->tauVetoPt20Loose3HitsVtx_branch->SetAddress(((void *)(&__pyx_v_self->tauVetoPt20Loose3HitsVtx_value)));
  }
  __pyx_L286:;

  /* "MuTauTree.pyx":3551
 * 
 *         #print "making tauVetoPt20LooseMVA2Vtx"
 *         self.tauVetoPt20LooseMVA2Vtx_branch = the_tree.GetBranch("tauVetoPt20LooseMVA2Vtx")             # <<<<<<<<<<<<<<
 *         #if not self.tauVetoPt20LooseMVA2Vtx_branch and "tauVetoPt20LooseMVA2Vtx" not in self.complained:
 *         if not self.tauVetoPt20LooseMVA2Vtx_branch and "tauVetoPt20LooseMVA2Vtx":
 */
  __pyx_v_self->tauVetoPt20LooseMVA2Vtx_branch = __pyx_v_the_tree->GetBranch(__pyx_k_314);

  /* "MuTauTree.pyx":3553
 *         self.tauVetoPt20LooseMVA2Vtx_branch = the_tree.GetBranch("tauVetoPt20LooseMVA2Vtx")
 *         #if not self.tauVetoPt20LooseMVA2Vtx_branch and "tauVetoPt20LooseMVA2Vtx" not in self.complained:
 *         if not self.tauVetoPt20LooseMVA2Vtx_branch and "tauVetoPt20LooseMVA2Vtx":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tauVetoPt20LooseMVA2Vtx does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tauVetoPt20LooseMVA2Vtx")
 */
  __pyx_t_1 = (!(__pyx_v_self->tauVetoPt20LooseMVA2Vtx_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":3554
 *         #if not self.tauVetoPt20LooseMVA2Vtx_branch and "tauVetoPt20LooseMVA2Vtx" not in self.complained:
 *         if not self.tauVetoPt20LooseMVA2Vtx_branch and "tauVetoPt20LooseMVA2Vtx":
 *             warnings.warn( "MuTauTree: Expected branch tauVetoPt20LooseMVA2Vtx does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tauVetoPt20LooseMVA2Vtx")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3554; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3554; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3554; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_315));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_315));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_315));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3554; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L287;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3557
 *             #self.complained.add("tauVetoPt20LooseMVA2Vtx")
 *         else:
 *             self.tauVetoPt20LooseMVA2Vtx_branch.SetAddress(<void*>&self.tauVetoPt20LooseMVA2Vtx_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tauVetoPt20LooseMVAVtx"
 */
    __pyx_v_self->tauVetoPt20LooseMVA2Vtx_branch->SetAddress(((void *)(&__pyx_v_self->tauVetoPt20LooseMVA2Vtx_value)));
  }
  __pyx_L287:;

  /* "MuTauTree.pyx":3560
 * 
 *         #print "making tauVetoPt20LooseMVAVtx"
 *         self.tauVetoPt20LooseMVAVtx_branch = the_tree.GetBranch("tauVetoPt20LooseMVAVtx")             # <<<<<<<<<<<<<<
 *         #if not self.tauVetoPt20LooseMVAVtx_branch and "tauVetoPt20LooseMVAVtx" not in self.complained:
 *         if not self.tauVetoPt20LooseMVAVtx_branch and "tauVetoPt20LooseMVAVtx":
 */
  __pyx_v_self->tauVetoPt20LooseMVAVtx_branch = __pyx_v_the_tree->GetBranch(__pyx_k_316);

  /* "MuTauTree.pyx":3562
 *         self.tauVetoPt20LooseMVAVtx_branch = the_tree.GetBranch("tauVetoPt20LooseMVAVtx")
 *         #if not self.tauVetoPt20LooseMVAVtx_branch and "tauVetoPt20LooseMVAVtx" not in self.complained:
 *         if not self.tauVetoPt20LooseMVAVtx_branch and "tauVetoPt20LooseMVAVtx":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tauVetoPt20LooseMVAVtx does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tauVetoPt20LooseMVAVtx")
 */
  __pyx_t_2 = (!(__pyx_v_self->tauVetoPt20LooseMVAVtx_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3563
 *         #if not self.tauVetoPt20LooseMVAVtx_branch and "tauVetoPt20LooseMVAVtx" not in self.complained:
 *         if not self.tauVetoPt20LooseMVAVtx_branch and "tauVetoPt20LooseMVAVtx":
 *             warnings.warn( "MuTauTree: Expected branch tauVetoPt20LooseMVAVtx does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tauVetoPt20LooseMVAVtx")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3563; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3563; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3563; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_317));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_317));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_317));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3563; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L288;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3566
 *             #self.complained.add("tauVetoPt20LooseMVAVtx")
 *         else:
 *             self.tauVetoPt20LooseMVAVtx_branch.SetAddress(<void*>&self.tauVetoPt20LooseMVAVtx_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making tauVetoPt20VLooseHPSVtx"
 */
    __pyx_v_self->tauVetoPt20LooseMVAVtx_branch->SetAddress(((void *)(&__pyx_v_self->tauVetoPt20LooseMVAVtx_value)));
  }
  __pyx_L288:;

  /* "MuTauTree.pyx":3569
 * 
 *         #print "making tauVetoPt20VLooseHPSVtx"
 *         self.tauVetoPt20VLooseHPSVtx_branch = the_tree.GetBranch("tauVetoPt20VLooseHPSVtx")             # <<<<<<<<<<<<<<
 *         #if not self.tauVetoPt20VLooseHPSVtx_branch and "tauVetoPt20VLooseHPSVtx" not in self.complained:
 *         if not self.tauVetoPt20VLooseHPSVtx_branch and "tauVetoPt20VLooseHPSVtx":
 */
  __pyx_v_self->tauVetoPt20VLooseHPSVtx_branch = __pyx_v_the_tree->GetBranch(__pyx_k_318);

  /* "MuTauTree.pyx":3571
 *         self.tauVetoPt20VLooseHPSVtx_branch = the_tree.GetBranch("tauVetoPt20VLooseHPSVtx")
 *         #if not self.tauVetoPt20VLooseHPSVtx_branch and "tauVetoPt20VLooseHPSVtx" not in self.complained:
 *         if not self.tauVetoPt20VLooseHPSVtx_branch and "tauVetoPt20VLooseHPSVtx":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch tauVetoPt20VLooseHPSVtx does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("tauVetoPt20VLooseHPSVtx")
 */
  __pyx_t_1 = (!(__pyx_v_self->tauVetoPt20VLooseHPSVtx_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":3572
 *         #if not self.tauVetoPt20VLooseHPSVtx_branch and "tauVetoPt20VLooseHPSVtx" not in self.complained:
 *         if not self.tauVetoPt20VLooseHPSVtx_branch and "tauVetoPt20VLooseHPSVtx":
 *             warnings.warn( "MuTauTree: Expected branch tauVetoPt20VLooseHPSVtx does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("tauVetoPt20VLooseHPSVtx")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3572; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3572; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3572; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_319));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_319));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_319));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3572; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L289;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3575
 *             #self.complained.add("tauVetoPt20VLooseHPSVtx")
 *         else:
 *             self.tauVetoPt20VLooseHPSVtx_branch.SetAddress(<void*>&self.tauVetoPt20VLooseHPSVtx_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMetEt"
 */
    __pyx_v_self->tauVetoPt20VLooseHPSVtx_branch->SetAddress(((void *)(&__pyx_v_self->tauVetoPt20VLooseHPSVtx_value)));
  }
  __pyx_L289:;

  /* "MuTauTree.pyx":3578
 * 
 *         #print "making type1_pfMetEt"
 *         self.type1_pfMetEt_branch = the_tree.GetBranch("type1_pfMetEt")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMetEt_branch and "type1_pfMetEt" not in self.complained:
 *         if not self.type1_pfMetEt_branch and "type1_pfMetEt":
 */
  __pyx_v_self->type1_pfMetEt_branch = __pyx_v_the_tree->GetBranch(__pyx_k__type1_pfMetEt);

  /* "MuTauTree.pyx":3580
 *         self.type1_pfMetEt_branch = the_tree.GetBranch("type1_pfMetEt")
 *         #if not self.type1_pfMetEt_branch and "type1_pfMetEt" not in self.complained:
 *         if not self.type1_pfMetEt_branch and "type1_pfMetEt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch type1_pfMetEt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMetEt")
 */
  __pyx_t_2 = (!(__pyx_v_self->type1_pfMetEt_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3581
 *         #if not self.type1_pfMetEt_branch and "type1_pfMetEt" not in self.complained:
 *         if not self.type1_pfMetEt_branch and "type1_pfMetEt":
 *             warnings.warn( "MuTauTree: Expected branch type1_pfMetEt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMetEt")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3581; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3581; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3581; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_320));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_320));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_320));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3581; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L290;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3584
 *             #self.complained.add("type1_pfMetEt")
 *         else:
 *             self.type1_pfMetEt_branch.SetAddress(<void*>&self.type1_pfMetEt_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making type1_pfMetPhi"
 */
    __pyx_v_self->type1_pfMetEt_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMetEt_value)));
  }
  __pyx_L290:;

  /* "MuTauTree.pyx":3587
 * 
 *         #print "making type1_pfMetPhi"
 *         self.type1_pfMetPhi_branch = the_tree.GetBranch("type1_pfMetPhi")             # <<<<<<<<<<<<<<
 *         #if not self.type1_pfMetPhi_branch and "type1_pfMetPhi" not in self.complained:
 *         if not self.type1_pfMetPhi_branch and "type1_pfMetPhi":
 */
  __pyx_v_self->type1_pfMetPhi_branch = __pyx_v_the_tree->GetBranch(__pyx_k__type1_pfMetPhi);

  /* "MuTauTree.pyx":3589
 *         self.type1_pfMetPhi_branch = the_tree.GetBranch("type1_pfMetPhi")
 *         #if not self.type1_pfMetPhi_branch and "type1_pfMetPhi" not in self.complained:
 *         if not self.type1_pfMetPhi_branch and "type1_pfMetPhi":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch type1_pfMetPhi does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("type1_pfMetPhi")
 */
  __pyx_t_1 = (!(__pyx_v_self->type1_pfMetPhi_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":3590
 *         #if not self.type1_pfMetPhi_branch and "type1_pfMetPhi" not in self.complained:
 *         if not self.type1_pfMetPhi_branch and "type1_pfMetPhi":
 *             warnings.warn( "MuTauTree: Expected branch type1_pfMetPhi does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("type1_pfMetPhi")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3590; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3590; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3590; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_321));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_321));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_321));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3590; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L291;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3593
 *             #self.complained.add("type1_pfMetPhi")
 *         else:
 *             self.type1_pfMetPhi_branch.SetAddress(<void*>&self.type1_pfMetPhi_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfDeta"
 */
    __pyx_v_self->type1_pfMetPhi_branch->SetAddress(((void *)(&__pyx_v_self->type1_pfMetPhi_value)));
  }
  __pyx_L291:;

  /* "MuTauTree.pyx":3596
 * 
 *         #print "making vbfDeta"
 *         self.vbfDeta_branch = the_tree.GetBranch("vbfDeta")             # <<<<<<<<<<<<<<
 *         #if not self.vbfDeta_branch and "vbfDeta" not in self.complained:
 *         if not self.vbfDeta_branch and "vbfDeta":
 */
  __pyx_v_self->vbfDeta_branch = __pyx_v_the_tree->GetBranch(__pyx_k__vbfDeta);

  /* "MuTauTree.pyx":3598
 *         self.vbfDeta_branch = the_tree.GetBranch("vbfDeta")
 *         #if not self.vbfDeta_branch and "vbfDeta" not in self.complained:
 *         if not self.vbfDeta_branch and "vbfDeta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch vbfDeta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfDeta")
 */
  __pyx_t_2 = (!(__pyx_v_self->vbfDeta_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3599
 *         #if not self.vbfDeta_branch and "vbfDeta" not in self.complained:
 *         if not self.vbfDeta_branch and "vbfDeta":
 *             warnings.warn( "MuTauTree: Expected branch vbfDeta does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfDeta")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3599; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3599; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3599; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_322));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_322));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_322));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3599; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L292;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3602
 *             #self.complained.add("vbfDeta")
 *         else:
 *             self.vbfDeta_branch.SetAddress(<void*>&self.vbfDeta_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfDijetrap"
 */
    __pyx_v_self->vbfDeta_branch->SetAddress(((void *)(&__pyx_v_self->vbfDeta_value)));
  }
  __pyx_L292:;

  /* "MuTauTree.pyx":3605
 * 
 *         #print "making vbfDijetrap"
 *         self.vbfDijetrap_branch = the_tree.GetBranch("vbfDijetrap")             # <<<<<<<<<<<<<<
 *         #if not self.vbfDijetrap_branch and "vbfDijetrap" not in self.complained:
 *         if not self.vbfDijetrap_branch and "vbfDijetrap":
 */
  __pyx_v_self->vbfDijetrap_branch = __pyx_v_the_tree->GetBranch(__pyx_k__vbfDijetrap);

  /* "MuTauTree.pyx":3607
 *         self.vbfDijetrap_branch = the_tree.GetBranch("vbfDijetrap")
 *         #if not self.vbfDijetrap_branch and "vbfDijetrap" not in self.complained:
 *         if not self.vbfDijetrap_branch and "vbfDijetrap":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch vbfDijetrap does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfDijetrap")
 */
  __pyx_t_1 = (!(__pyx_v_self->vbfDijetrap_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":3608
 *         #if not self.vbfDijetrap_branch and "vbfDijetrap" not in self.complained:
 *         if not self.vbfDijetrap_branch and "vbfDijetrap":
 *             warnings.warn( "MuTauTree: Expected branch vbfDijetrap does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfDijetrap")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3608; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3608; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3608; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_323));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_323));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_323));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3608; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L293;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3611
 *             #self.complained.add("vbfDijetrap")
 *         else:
 *             self.vbfDijetrap_branch.SetAddress(<void*>&self.vbfDijetrap_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfDphihj"
 */
    __pyx_v_self->vbfDijetrap_branch->SetAddress(((void *)(&__pyx_v_self->vbfDijetrap_value)));
  }
  __pyx_L293:;

  /* "MuTauTree.pyx":3614
 * 
 *         #print "making vbfDphihj"
 *         self.vbfDphihj_branch = the_tree.GetBranch("vbfDphihj")             # <<<<<<<<<<<<<<
 *         #if not self.vbfDphihj_branch and "vbfDphihj" not in self.complained:
 *         if not self.vbfDphihj_branch and "vbfDphihj":
 */
  __pyx_v_self->vbfDphihj_branch = __pyx_v_the_tree->GetBranch(__pyx_k__vbfDphihj);

  /* "MuTauTree.pyx":3616
 *         self.vbfDphihj_branch = the_tree.GetBranch("vbfDphihj")
 *         #if not self.vbfDphihj_branch and "vbfDphihj" not in self.complained:
 *         if not self.vbfDphihj_branch and "vbfDphihj":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch vbfDphihj does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfDphihj")
 */
  __pyx_t_2 = (!(__pyx_v_self->vbfDphihj_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3617
 *         #if not self.vbfDphihj_branch and "vbfDphihj" not in self.complained:
 *         if not self.vbfDphihj_branch and "vbfDphihj":
 *             warnings.warn( "MuTauTree: Expected branch vbfDphihj does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfDphihj")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3617; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3617; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3617; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_324));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_324));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_324));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3617; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L294;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3620
 *             #self.complained.add("vbfDphihj")
 *         else:
 *             self.vbfDphihj_branch.SetAddress(<void*>&self.vbfDphihj_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfDphihjnomet"
 */
    __pyx_v_self->vbfDphihj_branch->SetAddress(((void *)(&__pyx_v_self->vbfDphihj_value)));
  }
  __pyx_L294:;

  /* "MuTauTree.pyx":3623
 * 
 *         #print "making vbfDphihjnomet"
 *         self.vbfDphihjnomet_branch = the_tree.GetBranch("vbfDphihjnomet")             # <<<<<<<<<<<<<<
 *         #if not self.vbfDphihjnomet_branch and "vbfDphihjnomet" not in self.complained:
 *         if not self.vbfDphihjnomet_branch and "vbfDphihjnomet":
 */
  __pyx_v_self->vbfDphihjnomet_branch = __pyx_v_the_tree->GetBranch(__pyx_k__vbfDphihjnomet);

  /* "MuTauTree.pyx":3625
 *         self.vbfDphihjnomet_branch = the_tree.GetBranch("vbfDphihjnomet")
 *         #if not self.vbfDphihjnomet_branch and "vbfDphihjnomet" not in self.complained:
 *         if not self.vbfDphihjnomet_branch and "vbfDphihjnomet":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch vbfDphihjnomet does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfDphihjnomet")
 */
  __pyx_t_1 = (!(__pyx_v_self->vbfDphihjnomet_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":3626
 *         #if not self.vbfDphihjnomet_branch and "vbfDphihjnomet" not in self.complained:
 *         if not self.vbfDphihjnomet_branch and "vbfDphihjnomet":
 *             warnings.warn( "MuTauTree: Expected branch vbfDphihjnomet does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfDphihjnomet")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3626; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3626; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3626; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_325));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_325));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_325));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3626; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L295;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3629
 *             #self.complained.add("vbfDphihjnomet")
 *         else:
 *             self.vbfDphihjnomet_branch.SetAddress(<void*>&self.vbfDphihjnomet_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfHrap"
 */
    __pyx_v_self->vbfDphihjnomet_branch->SetAddress(((void *)(&__pyx_v_self->vbfDphihjnomet_value)));
  }
  __pyx_L295:;

  /* "MuTauTree.pyx":3632
 * 
 *         #print "making vbfHrap"
 *         self.vbfHrap_branch = the_tree.GetBranch("vbfHrap")             # <<<<<<<<<<<<<<
 *         #if not self.vbfHrap_branch and "vbfHrap" not in self.complained:
 *         if not self.vbfHrap_branch and "vbfHrap":
 */
  __pyx_v_self->vbfHrap_branch = __pyx_v_the_tree->GetBranch(__pyx_k__vbfHrap);

  /* "MuTauTree.pyx":3634
 *         self.vbfHrap_branch = the_tree.GetBranch("vbfHrap")
 *         #if not self.vbfHrap_branch and "vbfHrap" not in self.complained:
 *         if not self.vbfHrap_branch and "vbfHrap":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch vbfHrap does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfHrap")
 */
  __pyx_t_2 = (!(__pyx_v_self->vbfHrap_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3635
 *         #if not self.vbfHrap_branch and "vbfHrap" not in self.complained:
 *         if not self.vbfHrap_branch and "vbfHrap":
 *             warnings.warn( "MuTauTree: Expected branch vbfHrap does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfHrap")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3635; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3635; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3635; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_326));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_326));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_326));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3635; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L296;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3638
 *             #self.complained.add("vbfHrap")
 *         else:
 *             self.vbfHrap_branch.SetAddress(<void*>&self.vbfHrap_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfJetVeto20"
 */
    __pyx_v_self->vbfHrap_branch->SetAddress(((void *)(&__pyx_v_self->vbfHrap_value)));
  }
  __pyx_L296:;

  /* "MuTauTree.pyx":3641
 * 
 *         #print "making vbfJetVeto20"
 *         self.vbfJetVeto20_branch = the_tree.GetBranch("vbfJetVeto20")             # <<<<<<<<<<<<<<
 *         #if not self.vbfJetVeto20_branch and "vbfJetVeto20" not in self.complained:
 *         if not self.vbfJetVeto20_branch and "vbfJetVeto20":
 */
  __pyx_v_self->vbfJetVeto20_branch = __pyx_v_the_tree->GetBranch(__pyx_k__vbfJetVeto20);

  /* "MuTauTree.pyx":3643
 *         self.vbfJetVeto20_branch = the_tree.GetBranch("vbfJetVeto20")
 *         #if not self.vbfJetVeto20_branch and "vbfJetVeto20" not in self.complained:
 *         if not self.vbfJetVeto20_branch and "vbfJetVeto20":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch vbfJetVeto20 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfJetVeto20")
 */
  __pyx_t_1 = (!(__pyx_v_self->vbfJetVeto20_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":3644
 *         #if not self.vbfJetVeto20_branch and "vbfJetVeto20" not in self.complained:
 *         if not self.vbfJetVeto20_branch and "vbfJetVeto20":
 *             warnings.warn( "MuTauTree: Expected branch vbfJetVeto20 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfJetVeto20")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3644; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3644; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3644; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_327));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_327));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_327));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3644; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L297;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3647
 *             #self.complained.add("vbfJetVeto20")
 *         else:
 *             self.vbfJetVeto20_branch.SetAddress(<void*>&self.vbfJetVeto20_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfJetVeto30"
 */
    __pyx_v_self->vbfJetVeto20_branch->SetAddress(((void *)(&__pyx_v_self->vbfJetVeto20_value)));
  }
  __pyx_L297:;

  /* "MuTauTree.pyx":3650
 * 
 *         #print "making vbfJetVeto30"
 *         self.vbfJetVeto30_branch = the_tree.GetBranch("vbfJetVeto30")             # <<<<<<<<<<<<<<
 *         #if not self.vbfJetVeto30_branch and "vbfJetVeto30" not in self.complained:
 *         if not self.vbfJetVeto30_branch and "vbfJetVeto30":
 */
  __pyx_v_self->vbfJetVeto30_branch = __pyx_v_the_tree->GetBranch(__pyx_k__vbfJetVeto30);

  /* "MuTauTree.pyx":3652
 *         self.vbfJetVeto30_branch = the_tree.GetBranch("vbfJetVeto30")
 *         #if not self.vbfJetVeto30_branch and "vbfJetVeto30" not in self.complained:
 *         if not self.vbfJetVeto30_branch and "vbfJetVeto30":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch vbfJetVeto30 does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfJetVeto30")
 */
  __pyx_t_2 = (!(__pyx_v_self->vbfJetVeto30_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3653
 *         #if not self.vbfJetVeto30_branch and "vbfJetVeto30" not in self.complained:
 *         if not self.vbfJetVeto30_branch and "vbfJetVeto30":
 *             warnings.warn( "MuTauTree: Expected branch vbfJetVeto30 does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfJetVeto30")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3653; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3653; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3653; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_328));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_328));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_328));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3653; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L298;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3656
 *             #self.complained.add("vbfJetVeto30")
 *         else:
 *             self.vbfJetVeto30_branch.SetAddress(<void*>&self.vbfJetVeto30_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfMVA"
 */
    __pyx_v_self->vbfJetVeto30_branch->SetAddress(((void *)(&__pyx_v_self->vbfJetVeto30_value)));
  }
  __pyx_L298:;

  /* "MuTauTree.pyx":3659
 * 
 *         #print "making vbfMVA"
 *         self.vbfMVA_branch = the_tree.GetBranch("vbfMVA")             # <<<<<<<<<<<<<<
 *         #if not self.vbfMVA_branch and "vbfMVA" not in self.complained:
 *         if not self.vbfMVA_branch and "vbfMVA":
 */
  __pyx_v_self->vbfMVA_branch = __pyx_v_the_tree->GetBranch(__pyx_k__vbfMVA);

  /* "MuTauTree.pyx":3661
 *         self.vbfMVA_branch = the_tree.GetBranch("vbfMVA")
 *         #if not self.vbfMVA_branch and "vbfMVA" not in self.complained:
 *         if not self.vbfMVA_branch and "vbfMVA":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch vbfMVA does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMVA")
 */
  __pyx_t_1 = (!(__pyx_v_self->vbfMVA_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":3662
 *         #if not self.vbfMVA_branch and "vbfMVA" not in self.complained:
 *         if not self.vbfMVA_branch and "vbfMVA":
 *             warnings.warn( "MuTauTree: Expected branch vbfMVA does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMVA")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3662; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3662; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3662; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_329));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_329));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_329));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3662; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L299;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3665
 *             #self.complained.add("vbfMVA")
 *         else:
 *             self.vbfMVA_branch.SetAddress(<void*>&self.vbfMVA_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfMass"
 */
    __pyx_v_self->vbfMVA_branch->SetAddress(((void *)(&__pyx_v_self->vbfMVA_value)));
  }
  __pyx_L299:;

  /* "MuTauTree.pyx":3668
 * 
 *         #print "making vbfMass"
 *         self.vbfMass_branch = the_tree.GetBranch("vbfMass")             # <<<<<<<<<<<<<<
 *         #if not self.vbfMass_branch and "vbfMass" not in self.complained:
 *         if not self.vbfMass_branch and "vbfMass":
 */
  __pyx_v_self->vbfMass_branch = __pyx_v_the_tree->GetBranch(__pyx_k__vbfMass);

  /* "MuTauTree.pyx":3670
 *         self.vbfMass_branch = the_tree.GetBranch("vbfMass")
 *         #if not self.vbfMass_branch and "vbfMass" not in self.complained:
 *         if not self.vbfMass_branch and "vbfMass":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch vbfMass does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfMass")
 */
  __pyx_t_2 = (!(__pyx_v_self->vbfMass_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3671
 *         #if not self.vbfMass_branch and "vbfMass" not in self.complained:
 *         if not self.vbfMass_branch and "vbfMass":
 *             warnings.warn( "MuTauTree: Expected branch vbfMass does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfMass")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3671; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3671; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3671; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_330));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_330));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_330));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3671; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L300;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3674
 *             #self.complained.add("vbfMass")
 *         else:
 *             self.vbfMass_branch.SetAddress(<void*>&self.vbfMass_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfNJets"
 */
    __pyx_v_self->vbfMass_branch->SetAddress(((void *)(&__pyx_v_self->vbfMass_value)));
  }
  __pyx_L300:;

  /* "MuTauTree.pyx":3677
 * 
 *         #print "making vbfNJets"
 *         self.vbfNJets_branch = the_tree.GetBranch("vbfNJets")             # <<<<<<<<<<<<<<
 *         #if not self.vbfNJets_branch and "vbfNJets" not in self.complained:
 *         if not self.vbfNJets_branch and "vbfNJets":
 */
  __pyx_v_self->vbfNJets_branch = __pyx_v_the_tree->GetBranch(__pyx_k__vbfNJets);

  /* "MuTauTree.pyx":3679
 *         self.vbfNJets_branch = the_tree.GetBranch("vbfNJets")
 *         #if not self.vbfNJets_branch and "vbfNJets" not in self.complained:
 *         if not self.vbfNJets_branch and "vbfNJets":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch vbfNJets does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfNJets")
 */
  __pyx_t_1 = (!(__pyx_v_self->vbfNJets_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":3680
 *         #if not self.vbfNJets_branch and "vbfNJets" not in self.complained:
 *         if not self.vbfNJets_branch and "vbfNJets":
 *             warnings.warn( "MuTauTree: Expected branch vbfNJets does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfNJets")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3680; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3680; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3680; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_331));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_331));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_331));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3680; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L301;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3683
 *             #self.complained.add("vbfNJets")
 *         else:
 *             self.vbfNJets_branch.SetAddress(<void*>&self.vbfNJets_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfVispt"
 */
    __pyx_v_self->vbfNJets_branch->SetAddress(((void *)(&__pyx_v_self->vbfNJets_value)));
  }
  __pyx_L301:;

  /* "MuTauTree.pyx":3686
 * 
 *         #print "making vbfVispt"
 *         self.vbfVispt_branch = the_tree.GetBranch("vbfVispt")             # <<<<<<<<<<<<<<
 *         #if not self.vbfVispt_branch and "vbfVispt" not in self.complained:
 *         if not self.vbfVispt_branch and "vbfVispt":
 */
  __pyx_v_self->vbfVispt_branch = __pyx_v_the_tree->GetBranch(__pyx_k__vbfVispt);

  /* "MuTauTree.pyx":3688
 *         self.vbfVispt_branch = the_tree.GetBranch("vbfVispt")
 *         #if not self.vbfVispt_branch and "vbfVispt" not in self.complained:
 *         if not self.vbfVispt_branch and "vbfVispt":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch vbfVispt does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfVispt")
 */
  __pyx_t_2 = (!(__pyx_v_self->vbfVispt_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3689
 *         #if not self.vbfVispt_branch and "vbfVispt" not in self.complained:
 *         if not self.vbfVispt_branch and "vbfVispt":
 *             warnings.warn( "MuTauTree: Expected branch vbfVispt does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfVispt")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3689; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3689; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3689; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_332));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_332));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_332));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3689; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L302;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3692
 *             #self.complained.add("vbfVispt")
 *         else:
 *             self.vbfVispt_branch.SetAddress(<void*>&self.vbfVispt_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfj1eta"
 */
    __pyx_v_self->vbfVispt_branch->SetAddress(((void *)(&__pyx_v_self->vbfVispt_value)));
  }
  __pyx_L302:;

  /* "MuTauTree.pyx":3695
 * 
 *         #print "making vbfj1eta"
 *         self.vbfj1eta_branch = the_tree.GetBranch("vbfj1eta")             # <<<<<<<<<<<<<<
 *         #if not self.vbfj1eta_branch and "vbfj1eta" not in self.complained:
 *         if not self.vbfj1eta_branch and "vbfj1eta":
 */
  __pyx_v_self->vbfj1eta_branch = __pyx_v_the_tree->GetBranch(__pyx_k__vbfj1eta);

  /* "MuTauTree.pyx":3697
 *         self.vbfj1eta_branch = the_tree.GetBranch("vbfj1eta")
 *         #if not self.vbfj1eta_branch and "vbfj1eta" not in self.complained:
 *         if not self.vbfj1eta_branch and "vbfj1eta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch vbfj1eta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfj1eta")
 */
  __pyx_t_1 = (!(__pyx_v_self->vbfj1eta_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":3698
 *         #if not self.vbfj1eta_branch and "vbfj1eta" not in self.complained:
 *         if not self.vbfj1eta_branch and "vbfj1eta":
 *             warnings.warn( "MuTauTree: Expected branch vbfj1eta does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfj1eta")
 *         else:
 */
    __pyx_t_3 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3698; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s__warn); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3698; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3698; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_333));
    PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_s_333));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_333));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_5 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3698; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L303;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3701
 *             #self.complained.add("vbfj1eta")
 *         else:
 *             self.vbfj1eta_branch.SetAddress(<void*>&self.vbfj1eta_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making vbfj2eta"
 */
    __pyx_v_self->vbfj1eta_branch->SetAddress(((void *)(&__pyx_v_self->vbfj1eta_value)));
  }
  __pyx_L303:;

  /* "MuTauTree.pyx":3704
 * 
 *         #print "making vbfj2eta"
 *         self.vbfj2eta_branch = the_tree.GetBranch("vbfj2eta")             # <<<<<<<<<<<<<<
 *         #if not self.vbfj2eta_branch and "vbfj2eta" not in self.complained:
 *         if not self.vbfj2eta_branch and "vbfj2eta":
 */
  __pyx_v_self->vbfj2eta_branch = __pyx_v_the_tree->GetBranch(__pyx_k__vbfj2eta);

  /* "MuTauTree.pyx":3706
 *         self.vbfj2eta_branch = the_tree.GetBranch("vbfj2eta")
 *         #if not self.vbfj2eta_branch and "vbfj2eta" not in self.complained:
 *         if not self.vbfj2eta_branch and "vbfj2eta":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch vbfj2eta does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("vbfj2eta")
 */
  __pyx_t_2 = (!(__pyx_v_self->vbfj2eta_branch != 0));
  if (__pyx_t_2) {
    __pyx_t_1 = 1;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "MuTauTree.pyx":3707
 *         #if not self.vbfj2eta_branch and "vbfj2eta" not in self.complained:
 *         if not self.vbfj2eta_branch and "vbfj2eta":
 *             warnings.warn( "MuTauTree: Expected branch vbfj2eta does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("vbfj2eta")
 *         else:
 */
    __pyx_t_5 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3707; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s__warn); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3707; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3707; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_334));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_s_334));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_334));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3707; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L304;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3710
 *             #self.complained.add("vbfj2eta")
 *         else:
 *             self.vbfj2eta_branch.SetAddress(<void*>&self.vbfj2eta_value)             # <<<<<<<<<<<<<<
 * 
 *         #print "making idx"
 */
    __pyx_v_self->vbfj2eta_branch->SetAddress(((void *)(&__pyx_v_self->vbfj2eta_value)));
  }
  __pyx_L304:;

  /* "MuTauTree.pyx":3713
 * 
 *         #print "making idx"
 *         self.idx_branch = the_tree.GetBranch("idx")             # <<<<<<<<<<<<<<
 *         #if not self.idx_branch and "idx" not in self.complained:
 *         if not self.idx_branch and "idx":
 */
  __pyx_v_self->idx_branch = __pyx_v_the_tree->GetBranch(__pyx_k__idx);

  /* "MuTauTree.pyx":3715
 *         self.idx_branch = the_tree.GetBranch("idx")
 *         #if not self.idx_branch and "idx" not in self.complained:
 *         if not self.idx_branch and "idx":             # <<<<<<<<<<<<<<
 *             warnings.warn( "MuTauTree: Expected branch idx does not exist!"                " It will crash if you try and use it!",Warning)
 *             #self.complained.add("idx")
 */
  __pyx_t_1 = (!(__pyx_v_self->idx_branch != 0));
  if (__pyx_t_1) {
    __pyx_t_2 = 1;
  } else {
    __pyx_t_2 = __pyx_t_1;
  }
  if (__pyx_t_2) {

    /* "MuTauTree.pyx":3716
 *         #if not self.idx_branch and "idx" not in self.complained:
 *         if not self.idx_branch and "idx":
 *             warnings.warn( "MuTauTree: Expected branch idx does not exist!"                " It will crash if you try and use it!",Warning)             # <<<<<<<<<<<<<<
 *             #self.complained.add("idx")
 *         else:
 */
    __pyx_t_4 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3716; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s__warn); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3716; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3716; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_s_335));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_s_335));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_335));
    __Pyx_INCREF(__pyx_builtin_Warning);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_builtin_Warning);
    __Pyx_GIVEREF(__pyx_builtin_Warning);
    __pyx_t_3 = PyObject_Call(__pyx_t_5, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3716; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L305;
  }
  /*else*/ {

    /* "MuTauTree.pyx":3719
 *             #self.complained.add("idx")
 *         else:
 *             self.idx_branch.SetAddress(<void*>&self.idx_value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_v_self->idx_branch->SetAddress(((void *)(&__pyx_v_self->idx_value)));
  }
  __pyx_L305:;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.setup_branches", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_9MuTauTree_9MuTauTree_4generator(__pyx_GeneratorObject *__pyx_generator, PyObject *__pyx_sent_value); /* proto */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3__iter__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3__iter__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__iter__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_2__iter__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3723
 * 
 *     # Iterating over the tree
 *     def __iter__(self):             # <<<<<<<<<<<<<<
 *         self.ientry = 0
 *         while self.ientry < self.tree.GetEntries():
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_2__iter__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  struct __pyx_obj_9MuTauTree___pyx_scope_struct____iter__ *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__iter__", 0);
  __pyx_cur_scope = (struct __pyx_obj_9MuTauTree___pyx_scope_struct____iter__ *)__pyx_tp_new_9MuTauTree___pyx_scope_struct____iter__(__pyx_ptype_9MuTauTree___pyx_scope_struct____iter__, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __Pyx_GOTREF(__pyx_cur_scope);
  __pyx_cur_scope->__pyx_v_self = __pyx_v_self;
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  {
    __pyx_GeneratorObject *gen = __Pyx_Generator_New((__pyx_generator_body_t) __pyx_gb_9MuTauTree_9MuTauTree_4generator, (PyObject *) __pyx_cur_scope); if (unlikely(!gen)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3723; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("MuTauTree.MuTauTree.__iter__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_9MuTauTree_9MuTauTree_4generator(__pyx_GeneratorObject *__pyx_generator, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_9MuTauTree___pyx_scope_struct____iter__ *__pyx_cur_scope = ((struct __pyx_obj_9MuTauTree___pyx_scope_struct____iter__ *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("None", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L6_resume_from_yield;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3723; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "MuTauTree.pyx":3724
 *     # Iterating over the tree
 *     def __iter__(self):
 *         self.ientry = 0             # <<<<<<<<<<<<<<
 *         while self.ientry < self.tree.GetEntries():
 *             self.load_entry(self.ientry)
 */
  __pyx_cur_scope->__pyx_v_self->ientry = 0;

  /* "MuTauTree.pyx":3725
 *     def __iter__(self):
 *         self.ientry = 0
 *         while self.ientry < self.tree.GetEntries():             # <<<<<<<<<<<<<<
 *             self.load_entry(self.ientry)
 *             yield self
 */
  while (1) {
    __pyx_t_1 = ((__pyx_cur_scope->__pyx_v_self->ientry < __pyx_cur_scope->__pyx_v_self->tree->GetEntries()) != 0);
    if (!__pyx_t_1) break;

    /* "MuTauTree.pyx":3726
 *         self.ientry = 0
 *         while self.ientry < self.tree.GetEntries():
 *             self.load_entry(self.ientry)             # <<<<<<<<<<<<<<
 *             yield self
 *             self.ientry += 1
 */
    __pyx_t_2 = ((struct __pyx_vtabstruct_9MuTauTree_MuTauTree *)__pyx_cur_scope->__pyx_v_self->__pyx_vtab)->load_entry(__pyx_cur_scope->__pyx_v_self, __pyx_cur_scope->__pyx_v_self->ientry); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3726; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "MuTauTree.pyx":3727
 *         while self.ientry < self.tree.GetEntries():
 *             self.load_entry(self.ientry)
 *             yield self             # <<<<<<<<<<<<<<
 *             self.ientry += 1
 * 
 */
    __Pyx_INCREF(((PyObject *)__pyx_cur_scope->__pyx_v_self));
    __pyx_r = ((PyObject *)__pyx_cur_scope->__pyx_v_self);
    __Pyx_XGIVEREF(__pyx_r);
    __Pyx_RefNannyFinishContext();
    /* return from generator, yielding value */
    __pyx_generator->resume_label = 1;
    return __pyx_r;
    __pyx_L6_resume_from_yield:;
    if (unlikely(!__pyx_sent_value)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3727; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "MuTauTree.pyx":3728
 *             self.load_entry(self.ientry)
 *             yield self
 *             self.ientry += 1             # <<<<<<<<<<<<<<
 * 
 *     # Iterate over rows which pass the filter
 */
    __pyx_cur_scope->__pyx_v_self->ientry = (__pyx_cur_scope->__pyx_v_self->ientry + 1);
  }
  PyErr_SetNone(PyExc_StopIteration);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("__iter__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r);
  __pyx_generator->resume_label = -1;
  __Pyx_Generator_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return NULL;
}
static PyObject *__pyx_gb_9MuTauTree_9MuTauTree_7generator1(__pyx_GeneratorObject *__pyx_generator, PyObject *__pyx_sent_value); /* proto */

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6where(PyObject *__pyx_v_self, PyObject *__pyx_v_filter); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6where(PyObject *__pyx_v_self, PyObject *__pyx_v_filter) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("where (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_5where(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self), ((PyObject *)__pyx_v_filter));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3731
 * 
 *     # Iterate over rows which pass the filter
 *     def where(self, filter):             # <<<<<<<<<<<<<<
 *         print "where"
 *         cdef TTreeFormula* formula = new TTreeFormula(
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_5where(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self, PyObject *__pyx_v_filter) {
  struct __pyx_obj_9MuTauTree___pyx_scope_struct_1_where *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("where", 0);
  __pyx_cur_scope = (struct __pyx_obj_9MuTauTree___pyx_scope_struct_1_where *)__pyx_tp_new_9MuTauTree___pyx_scope_struct_1_where(__pyx_ptype_9MuTauTree___pyx_scope_struct_1_where, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __Pyx_GOTREF(__pyx_cur_scope);
  __pyx_cur_scope->__pyx_v_self = __pyx_v_self;
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __pyx_cur_scope->__pyx_v_filter = __pyx_v_filter;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_filter);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_filter);
  {
    __pyx_GeneratorObject *gen = __Pyx_Generator_New((__pyx_generator_body_t) __pyx_gb_9MuTauTree_9MuTauTree_7generator1, (PyObject *) __pyx_cur_scope); if (unlikely(!gen)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3731; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("MuTauTree.MuTauTree.where", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_9MuTauTree_9MuTauTree_7generator1(__pyx_GeneratorObject *__pyx_generator, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_9MuTauTree___pyx_scope_struct_1_where *__pyx_cur_scope = ((struct __pyx_obj_9MuTauTree___pyx_scope_struct_1_where *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  char *__pyx_t_1;
  int __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("None", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L8_resume_from_yield;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3731; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "MuTauTree.pyx":3732
 *     # Iterate over rows which pass the filter
 *     def where(self, filter):
 *         print "where"             # <<<<<<<<<<<<<<
 *         cdef TTreeFormula* formula = new TTreeFormula(
 *             "cyiter", filter, self.tree)
 */
  if (__Pyx_PrintOne(0, ((PyObject *)__pyx_n_s__where)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3732; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "MuTauTree.pyx":3734
 *         print "where"
 *         cdef TTreeFormula* formula = new TTreeFormula(
 *             "cyiter", filter, self.tree)             # <<<<<<<<<<<<<<
 *         self.ientry = 0
 *         cdef TTree* currentTree = self.tree.GetTree()
 */
  __pyx_t_1 = __Pyx_PyObject_AsString(__pyx_cur_scope->__pyx_v_filter); if (unlikely((!__pyx_t_1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3734; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_cur_scope->__pyx_v_formula = new TTreeFormula(__pyx_k__cyiter, __pyx_t_1, __pyx_cur_scope->__pyx_v_self->tree);

  /* "MuTauTree.pyx":3735
 *         cdef TTreeFormula* formula = new TTreeFormula(
 *             "cyiter", filter, self.tree)
 *         self.ientry = 0             # <<<<<<<<<<<<<<
 *         cdef TTree* currentTree = self.tree.GetTree()
 *         while self.ientry < self.tree.GetEntries():
 */
  __pyx_cur_scope->__pyx_v_self->ientry = 0;

  /* "MuTauTree.pyx":3736
 *             "cyiter", filter, self.tree)
 *         self.ientry = 0
 *         cdef TTree* currentTree = self.tree.GetTree()             # <<<<<<<<<<<<<<
 *         while self.ientry < self.tree.GetEntries():
 *             self.tree.LoadTree(self.ientry)
 */
  __pyx_cur_scope->__pyx_v_currentTree = __pyx_cur_scope->__pyx_v_self->tree->GetTree();

  /* "MuTauTree.pyx":3737
 *         self.ientry = 0
 *         cdef TTree* currentTree = self.tree.GetTree()
 *         while self.ientry < self.tree.GetEntries():             # <<<<<<<<<<<<<<
 *             self.tree.LoadTree(self.ientry)
 *             if currentTree != self.tree.GetTree():
 */
  while (1) {
    __pyx_t_2 = ((__pyx_cur_scope->__pyx_v_self->ientry < __pyx_cur_scope->__pyx_v_self->tree->GetEntries()) != 0);
    if (!__pyx_t_2) break;

    /* "MuTauTree.pyx":3738
 *         cdef TTree* currentTree = self.tree.GetTree()
 *         while self.ientry < self.tree.GetEntries():
 *             self.tree.LoadTree(self.ientry)             # <<<<<<<<<<<<<<
 *             if currentTree != self.tree.GetTree():
 *                 currentTree = self.tree.GetTree()
 */
    __pyx_cur_scope->__pyx_v_self->tree->LoadTree(__pyx_cur_scope->__pyx_v_self->ientry);

    /* "MuTauTree.pyx":3739
 *         while self.ientry < self.tree.GetEntries():
 *             self.tree.LoadTree(self.ientry)
 *             if currentTree != self.tree.GetTree():             # <<<<<<<<<<<<<<
 *                 currentTree = self.tree.GetTree()
 *                 formula.SetTree(currentTree)
 */
    __pyx_t_2 = ((__pyx_cur_scope->__pyx_v_currentTree != __pyx_cur_scope->__pyx_v_self->tree->GetTree()) != 0);
    if (__pyx_t_2) {

      /* "MuTauTree.pyx":3740
 *             self.tree.LoadTree(self.ientry)
 *             if currentTree != self.tree.GetTree():
 *                 currentTree = self.tree.GetTree()             # <<<<<<<<<<<<<<
 *                 formula.SetTree(currentTree)
 *                 formula.UpdateFormulaLeaves()
 */
      __pyx_cur_scope->__pyx_v_currentTree = __pyx_cur_scope->__pyx_v_self->tree->GetTree();

      /* "MuTauTree.pyx":3741
 *             if currentTree != self.tree.GetTree():
 *                 currentTree = self.tree.GetTree()
 *                 formula.SetTree(currentTree)             # <<<<<<<<<<<<<<
 *                 formula.UpdateFormulaLeaves()
 *             if formula.EvalInstance(0, NULL):
 */
      __pyx_cur_scope->__pyx_v_formula->SetTree(__pyx_cur_scope->__pyx_v_currentTree);

      /* "MuTauTree.pyx":3742
 *                 currentTree = self.tree.GetTree()
 *                 formula.SetTree(currentTree)
 *                 formula.UpdateFormulaLeaves()             # <<<<<<<<<<<<<<
 *             if formula.EvalInstance(0, NULL):
 *                 yield self
 */
      __pyx_cur_scope->__pyx_v_formula->UpdateFormulaLeaves();
      goto __pyx_L6;
    }
    __pyx_L6:;

    /* "MuTauTree.pyx":3743
 *                 formula.SetTree(currentTree)
 *                 formula.UpdateFormulaLeaves()
 *             if formula.EvalInstance(0, NULL):             # <<<<<<<<<<<<<<
 *                 yield self
 *             self.ientry += 1
 */
    __pyx_t_2 = (__pyx_cur_scope->__pyx_v_formula->EvalInstance(0, NULL) != 0);
    if (__pyx_t_2) {

      /* "MuTauTree.pyx":3744
 *                 formula.UpdateFormulaLeaves()
 *             if formula.EvalInstance(0, NULL):
 *                 yield self             # <<<<<<<<<<<<<<
 *             self.ientry += 1
 *         del formula
 */
      __Pyx_INCREF(((PyObject *)__pyx_cur_scope->__pyx_v_self));
      __pyx_r = ((PyObject *)__pyx_cur_scope->__pyx_v_self);
      __Pyx_XGIVEREF(__pyx_r);
      __Pyx_RefNannyFinishContext();
      /* return from generator, yielding value */
      __pyx_generator->resume_label = 1;
      return __pyx_r;
      __pyx_L8_resume_from_yield:;
      if (unlikely(!__pyx_sent_value)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3744; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L7;
    }
    __pyx_L7:;

    /* "MuTauTree.pyx":3745
 *             if formula.EvalInstance(0, NULL):
 *                 yield self
 *             self.ientry += 1             # <<<<<<<<<<<<<<
 *         del formula
 * 
 */
    __pyx_cur_scope->__pyx_v_self->ientry = (__pyx_cur_scope->__pyx_v_self->ientry + 1);
  }

  /* "MuTauTree.pyx":3746
 *                 yield self
 *             self.ientry += 1
 *         del formula             # <<<<<<<<<<<<<<
 * 
 *     # Getting/setting the Tree entry number
 */
  delete __pyx_cur_scope->__pyx_v_formula;
  PyErr_SetNone(PyExc_StopIteration);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("where", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r);
  __pyx_generator->resume_label = -1;
  __Pyx_Generator_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return NULL;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_5entry_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_5entry_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_5entry___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3750
 *     # Getting/setting the Tree entry number
 *     property entry:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.ientry
 *         def __set__(self, int i):
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_5entry___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3751
 *     property entry:
 *         def __get__(self):
 *             return self.ientry             # <<<<<<<<<<<<<<
 *         def __set__(self, int i):
 *             print i
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(__pyx_v_self->ientry); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3751; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.entry.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9MuTauTree_9MuTauTree_5entry_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_i); /*proto*/
static int __pyx_pw_9MuTauTree_9MuTauTree_5entry_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_i) {
  int __pyx_v_i;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  assert(__pyx_arg_i); {
    __pyx_v_i = __Pyx_PyInt_AsInt(__pyx_arg_i); if (unlikely((__pyx_v_i == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3752; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("MuTauTree.MuTauTree.entry.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_5entry_2__set__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self), ((int)__pyx_v_i));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3752
 *         def __get__(self):
 *             return self.ientry
 *         def __set__(self, int i):             # <<<<<<<<<<<<<<
 *             print i
 *             self.ientry = i
 */

static int __pyx_pf_9MuTauTree_9MuTauTree_5entry_2__set__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self, int __pyx_v_i) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "MuTauTree.pyx":3753
 *             return self.ientry
 *         def __set__(self, int i):
 *             print i             # <<<<<<<<<<<<<<
 *             self.ientry = i
 *             self.load_entry(i)
 */
  __pyx_t_1 = PyInt_FromLong(__pyx_v_i); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3753; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_PrintOne(0, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3753; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "MuTauTree.pyx":3754
 *         def __set__(self, int i):
 *             print i
 *             self.ientry = i             # <<<<<<<<<<<<<<
 *             self.load_entry(i)
 * 
 */
  __pyx_v_self->ientry = __pyx_v_i;

  /* "MuTauTree.pyx":3755
 *             print i
 *             self.ientry = i
 *             self.load_entry(i)             # <<<<<<<<<<<<<<
 * 
 *     # Access to the current branch values
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_9MuTauTree_MuTauTree *)__pyx_v_self->__pyx_vtab)->load_entry(__pyx_v_self, __pyx_v_i); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3755; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.entry.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_2LT_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_2LT_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_2LT___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3760
 * 
 *     property LT:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.LT_branch.GetEntry(self.localentry, 0)
 *             return self.LT_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_2LT___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3761
 *     property LT:
 *         def __get__(self):
 *             self.LT_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.LT_value
 * 
 */
  __pyx_v_self->LT_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3762
 *         def __get__(self):
 *             self.LT_branch.GetEntry(self.localentry, 0)
 *             return self.LT_value             # <<<<<<<<<<<<<<
 * 
 *     property Mass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->LT_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3762; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.LT.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_4Mass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_4Mass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_4Mass___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3765
 * 
 *     property Mass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Mass_branch.GetEntry(self.localentry, 0)
 *             return self.Mass_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_4Mass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3766
 *     property Mass:
 *         def __get__(self):
 *             self.Mass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.Mass_value
 * 
 */
  __pyx_v_self->Mass_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3767
 *         def __get__(self):
 *             self.Mass_branch.GetEntry(self.localentry, 0)
 *             return self.Mass_value             # <<<<<<<<<<<<<<
 * 
 *     property MassError:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->Mass_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3767; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.Mass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9MassError_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9MassError_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_9MassError___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3770
 * 
 *     property MassError:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.MassError_branch.GetEntry(self.localentry, 0)
 *             return self.MassError_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9MassError___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3771
 *     property MassError:
 *         def __get__(self):
 *             self.MassError_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.MassError_value
 * 
 */
  __pyx_v_self->MassError_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3772
 *         def __get__(self):
 *             self.MassError_branch.GetEntry(self.localentry, 0)
 *             return self.MassError_value             # <<<<<<<<<<<<<<
 * 
 *     property MassErrord1:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->MassError_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3772; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.MassError.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11MassErrord1_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11MassErrord1_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_11MassErrord1___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3775
 * 
 *     property MassErrord1:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.MassErrord1_branch.GetEntry(self.localentry, 0)
 *             return self.MassErrord1_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11MassErrord1___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3776
 *     property MassErrord1:
 *         def __get__(self):
 *             self.MassErrord1_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.MassErrord1_value
 * 
 */
  __pyx_v_self->MassErrord1_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3777
 *         def __get__(self):
 *             self.MassErrord1_branch.GetEntry(self.localentry, 0)
 *             return self.MassErrord1_value             # <<<<<<<<<<<<<<
 * 
 *     property MassErrord2:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->MassErrord1_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3777; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.MassErrord1.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11MassErrord2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11MassErrord2_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_11MassErrord2___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3780
 * 
 *     property MassErrord2:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.MassErrord2_branch.GetEntry(self.localentry, 0)
 *             return self.MassErrord2_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11MassErrord2___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3781
 *     property MassErrord2:
 *         def __get__(self):
 *             self.MassErrord2_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.MassErrord2_value
 * 
 */
  __pyx_v_self->MassErrord2_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3782
 *         def __get__(self):
 *             self.MassErrord2_branch.GetEntry(self.localentry, 0)
 *             return self.MassErrord2_value             # <<<<<<<<<<<<<<
 * 
 *     property MassErrord3:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->MassErrord2_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3782; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.MassErrord2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11MassErrord3_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11MassErrord3_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_11MassErrord3___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3785
 * 
 *     property MassErrord3:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.MassErrord3_branch.GetEntry(self.localentry, 0)
 *             return self.MassErrord3_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11MassErrord3___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3786
 *     property MassErrord3:
 *         def __get__(self):
 *             self.MassErrord3_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.MassErrord3_value
 * 
 */
  __pyx_v_self->MassErrord3_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3787
 *         def __get__(self):
 *             self.MassErrord3_branch.GetEntry(self.localentry, 0)
 *             return self.MassErrord3_value             # <<<<<<<<<<<<<<
 * 
 *     property MassErrord4:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->MassErrord3_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3787; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.MassErrord3.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11MassErrord4_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11MassErrord4_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_11MassErrord4___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3790
 * 
 *     property MassErrord4:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.MassErrord4_branch.GetEntry(self.localentry, 0)
 *             return self.MassErrord4_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11MassErrord4___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3791
 *     property MassErrord4:
 *         def __get__(self):
 *             self.MassErrord4_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.MassErrord4_value
 * 
 */
  __pyx_v_self->MassErrord4_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3792
 *         def __get__(self):
 *             self.MassErrord4_branch.GetEntry(self.localentry, 0)
 *             return self.MassErrord4_value             # <<<<<<<<<<<<<<
 * 
 *     property Pt:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->MassErrord4_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3792; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.MassErrord4.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_2Pt_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_2Pt_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_2Pt___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3795
 * 
 *     property Pt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.Pt_branch.GetEntry(self.localentry, 0)
 *             return self.Pt_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_2Pt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3796
 *     property Pt:
 *         def __get__(self):
 *             self.Pt_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.Pt_value
 * 
 */
  __pyx_v_self->Pt_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3797
 *         def __get__(self):
 *             self.Pt_branch.GetEntry(self.localentry, 0)
 *             return self.Pt_value             # <<<<<<<<<<<<<<
 * 
 *     property bjetCSVVeto:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->Pt_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3797; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.Pt.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11bjetCSVVeto_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11bjetCSVVeto_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_11bjetCSVVeto___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3800
 * 
 *     property bjetCSVVeto:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.bjetCSVVeto_branch.GetEntry(self.localentry, 0)
 *             return self.bjetCSVVeto_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11bjetCSVVeto___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3801
 *     property bjetCSVVeto:
 *         def __get__(self):
 *             self.bjetCSVVeto_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.bjetCSVVeto_value
 * 
 */
  __pyx_v_self->bjetCSVVeto_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3802
 *         def __get__(self):
 *             self.bjetCSVVeto_branch.GetEntry(self.localentry, 0)
 *             return self.bjetCSVVeto_value             # <<<<<<<<<<<<<<
 * 
 *     property bjetCSVVeto30:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->bjetCSVVeto_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3802; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.bjetCSVVeto.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13bjetCSVVeto30_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13bjetCSVVeto30_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_13bjetCSVVeto30___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3805
 * 
 *     property bjetCSVVeto30:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.bjetCSVVeto30_branch.GetEntry(self.localentry, 0)
 *             return self.bjetCSVVeto30_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13bjetCSVVeto30___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3806
 *     property bjetCSVVeto30:
 *         def __get__(self):
 *             self.bjetCSVVeto30_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.bjetCSVVeto30_value
 * 
 */
  __pyx_v_self->bjetCSVVeto30_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3807
 *         def __get__(self):
 *             self.bjetCSVVeto30_branch.GetEntry(self.localentry, 0)
 *             return self.bjetCSVVeto30_value             # <<<<<<<<<<<<<<
 * 
 *     property bjetCSVVetoZHLike:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->bjetCSVVeto30_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3807; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.bjetCSVVeto30.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_17bjetCSVVetoZHLike_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_17bjetCSVVetoZHLike_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_17bjetCSVVetoZHLike___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3810
 * 
 *     property bjetCSVVetoZHLike:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.bjetCSVVetoZHLike_branch.GetEntry(self.localentry, 0)
 *             return self.bjetCSVVetoZHLike_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_17bjetCSVVetoZHLike___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3811
 *     property bjetCSVVetoZHLike:
 *         def __get__(self):
 *             self.bjetCSVVetoZHLike_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.bjetCSVVetoZHLike_value
 * 
 */
  __pyx_v_self->bjetCSVVetoZHLike_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3812
 *         def __get__(self):
 *             self.bjetCSVVetoZHLike_branch.GetEntry(self.localentry, 0)
 *             return self.bjetCSVVetoZHLike_value             # <<<<<<<<<<<<<<
 * 
 *     property bjetCSVVetoZHLikeNoJetId:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->bjetCSVVetoZHLike_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3812; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.bjetCSVVetoZHLike.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_24bjetCSVVetoZHLikeNoJetId_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_24bjetCSVVetoZHLikeNoJetId_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_24bjetCSVVetoZHLikeNoJetId___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3815
 * 
 *     property bjetCSVVetoZHLikeNoJetId:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.bjetCSVVetoZHLikeNoJetId_branch.GetEntry(self.localentry, 0)
 *             return self.bjetCSVVetoZHLikeNoJetId_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_24bjetCSVVetoZHLikeNoJetId___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3816
 *     property bjetCSVVetoZHLikeNoJetId:
 *         def __get__(self):
 *             self.bjetCSVVetoZHLikeNoJetId_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.bjetCSVVetoZHLikeNoJetId_value
 * 
 */
  __pyx_v_self->bjetCSVVetoZHLikeNoJetId_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3817
 *         def __get__(self):
 *             self.bjetCSVVetoZHLikeNoJetId_branch.GetEntry(self.localentry, 0)
 *             return self.bjetCSVVetoZHLikeNoJetId_value             # <<<<<<<<<<<<<<
 * 
 *     property bjetVeto:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->bjetCSVVetoZHLikeNoJetId_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3817; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.bjetCSVVetoZHLikeNoJetId.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8bjetVeto_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8bjetVeto_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_8bjetVeto___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3820
 * 
 *     property bjetVeto:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.bjetVeto_branch.GetEntry(self.localentry, 0)
 *             return self.bjetVeto_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8bjetVeto___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3821
 *     property bjetVeto:
 *         def __get__(self):
 *             self.bjetVeto_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.bjetVeto_value
 * 
 */
  __pyx_v_self->bjetVeto_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3822
 *         def __get__(self):
 *             self.bjetVeto_branch.GetEntry(self.localentry, 0)
 *             return self.bjetVeto_value             # <<<<<<<<<<<<<<
 * 
 *     property charge:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->bjetVeto_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3822; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.bjetVeto.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6charge_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6charge_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_6charge___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3825
 * 
 *     property charge:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.charge_branch.GetEntry(self.localentry, 0)
 *             return self.charge_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6charge___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3826
 *     property charge:
 *         def __get__(self):
 *             self.charge_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.charge_value
 * 
 */
  __pyx_v_self->charge_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3827
 *         def __get__(self):
 *             self.charge_branch.GetEntry(self.localentry, 0)
 *             return self.charge_value             # <<<<<<<<<<<<<<
 * 
 *     property doubleEExtraGroup:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->charge_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3827; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.charge.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_17doubleEExtraGroup_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_17doubleEExtraGroup_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_17doubleEExtraGroup___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3830
 * 
 *     property doubleEExtraGroup:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.doubleEExtraGroup_branch.GetEntry(self.localentry, 0)
 *             return self.doubleEExtraGroup_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_17doubleEExtraGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3831
 *     property doubleEExtraGroup:
 *         def __get__(self):
 *             self.doubleEExtraGroup_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.doubleEExtraGroup_value
 * 
 */
  __pyx_v_self->doubleEExtraGroup_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3832
 *         def __get__(self):
 *             self.doubleEExtraGroup_branch.GetEntry(self.localentry, 0)
 *             return self.doubleEExtraGroup_value             # <<<<<<<<<<<<<<
 * 
 *     property doubleEExtraPass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->doubleEExtraGroup_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3832; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.doubleEExtraGroup.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16doubleEExtraPass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16doubleEExtraPass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_16doubleEExtraPass___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3835
 * 
 *     property doubleEExtraPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.doubleEExtraPass_branch.GetEntry(self.localentry, 0)
 *             return self.doubleEExtraPass_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16doubleEExtraPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3836
 *     property doubleEExtraPass:
 *         def __get__(self):
 *             self.doubleEExtraPass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.doubleEExtraPass_value
 * 
 */
  __pyx_v_self->doubleEExtraPass_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3837
 *         def __get__(self):
 *             self.doubleEExtraPass_branch.GetEntry(self.localentry, 0)
 *             return self.doubleEExtraPass_value             # <<<<<<<<<<<<<<
 * 
 *     property doubleEExtraPrescale:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->doubleEExtraPass_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3837; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.doubleEExtraPass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_20doubleEExtraPrescale_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_20doubleEExtraPrescale_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_20doubleEExtraPrescale___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3840
 * 
 *     property doubleEExtraPrescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.doubleEExtraPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.doubleEExtraPrescale_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_20doubleEExtraPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3841
 *     property doubleEExtraPrescale:
 *         def __get__(self):
 *             self.doubleEExtraPrescale_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.doubleEExtraPrescale_value
 * 
 */
  __pyx_v_self->doubleEExtraPrescale_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3842
 *         def __get__(self):
 *             self.doubleEExtraPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.doubleEExtraPrescale_value             # <<<<<<<<<<<<<<
 * 
 *     property doubleEGroup:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->doubleEExtraPrescale_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3842; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.doubleEExtraPrescale.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12doubleEGroup_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12doubleEGroup_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_12doubleEGroup___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3845
 * 
 *     property doubleEGroup:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.doubleEGroup_branch.GetEntry(self.localentry, 0)
 *             return self.doubleEGroup_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12doubleEGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3846
 *     property doubleEGroup:
 *         def __get__(self):
 *             self.doubleEGroup_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.doubleEGroup_value
 * 
 */
  __pyx_v_self->doubleEGroup_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3847
 *         def __get__(self):
 *             self.doubleEGroup_branch.GetEntry(self.localentry, 0)
 *             return self.doubleEGroup_value             # <<<<<<<<<<<<<<
 * 
 *     property doubleEPass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->doubleEGroup_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3847; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.doubleEGroup.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11doubleEPass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11doubleEPass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_11doubleEPass___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3850
 * 
 *     property doubleEPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.doubleEPass_branch.GetEntry(self.localentry, 0)
 *             return self.doubleEPass_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11doubleEPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3851
 *     property doubleEPass:
 *         def __get__(self):
 *             self.doubleEPass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.doubleEPass_value
 * 
 */
  __pyx_v_self->doubleEPass_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3852
 *         def __get__(self):
 *             self.doubleEPass_branch.GetEntry(self.localentry, 0)
 *             return self.doubleEPass_value             # <<<<<<<<<<<<<<
 * 
 *     property doubleEPrescale:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->doubleEPass_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3852; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.doubleEPass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_15doubleEPrescale_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_15doubleEPrescale_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_15doubleEPrescale___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3855
 * 
 *     property doubleEPrescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.doubleEPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.doubleEPrescale_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_15doubleEPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3856
 *     property doubleEPrescale:
 *         def __get__(self):
 *             self.doubleEPrescale_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.doubleEPrescale_value
 * 
 */
  __pyx_v_self->doubleEPrescale_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3857
 *         def __get__(self):
 *             self.doubleEPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.doubleEPrescale_value             # <<<<<<<<<<<<<<
 * 
 *     property doubleETightGroup:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->doubleEPrescale_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3857; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.doubleEPrescale.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_17doubleETightGroup_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_17doubleETightGroup_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_17doubleETightGroup___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3860
 * 
 *     property doubleETightGroup:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.doubleETightGroup_branch.GetEntry(self.localentry, 0)
 *             return self.doubleETightGroup_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_17doubleETightGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3861
 *     property doubleETightGroup:
 *         def __get__(self):
 *             self.doubleETightGroup_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.doubleETightGroup_value
 * 
 */
  __pyx_v_self->doubleETightGroup_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3862
 *         def __get__(self):
 *             self.doubleETightGroup_branch.GetEntry(self.localentry, 0)
 *             return self.doubleETightGroup_value             # <<<<<<<<<<<<<<
 * 
 *     property doubleETightPass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->doubleETightGroup_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3862; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.doubleETightGroup.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16doubleETightPass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16doubleETightPass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_16doubleETightPass___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3865
 * 
 *     property doubleETightPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.doubleETightPass_branch.GetEntry(self.localentry, 0)
 *             return self.doubleETightPass_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16doubleETightPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3866
 *     property doubleETightPass:
 *         def __get__(self):
 *             self.doubleETightPass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.doubleETightPass_value
 * 
 */
  __pyx_v_self->doubleETightPass_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3867
 *         def __get__(self):
 *             self.doubleETightPass_branch.GetEntry(self.localentry, 0)
 *             return self.doubleETightPass_value             # <<<<<<<<<<<<<<
 * 
 *     property doubleETightPrescale:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->doubleETightPass_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3867; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.doubleETightPass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_20doubleETightPrescale_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_20doubleETightPrescale_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_20doubleETightPrescale___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3870
 * 
 *     property doubleETightPrescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.doubleETightPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.doubleETightPrescale_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_20doubleETightPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3871
 *     property doubleETightPrescale:
 *         def __get__(self):
 *             self.doubleETightPrescale_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.doubleETightPrescale_value
 * 
 */
  __pyx_v_self->doubleETightPrescale_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3872
 *         def __get__(self):
 *             self.doubleETightPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.doubleETightPrescale_value             # <<<<<<<<<<<<<<
 * 
 *     property doubleMuGroup:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->doubleETightPrescale_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3872; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.doubleETightPrescale.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13doubleMuGroup_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13doubleMuGroup_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_13doubleMuGroup___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3875
 * 
 *     property doubleMuGroup:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.doubleMuGroup_branch.GetEntry(self.localentry, 0)
 *             return self.doubleMuGroup_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13doubleMuGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3876
 *     property doubleMuGroup:
 *         def __get__(self):
 *             self.doubleMuGroup_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.doubleMuGroup_value
 * 
 */
  __pyx_v_self->doubleMuGroup_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3877
 *         def __get__(self):
 *             self.doubleMuGroup_branch.GetEntry(self.localentry, 0)
 *             return self.doubleMuGroup_value             # <<<<<<<<<<<<<<
 * 
 *     property doubleMuPass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->doubleMuGroup_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3877; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.doubleMuGroup.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12doubleMuPass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12doubleMuPass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_12doubleMuPass___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3880
 * 
 *     property doubleMuPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.doubleMuPass_branch.GetEntry(self.localentry, 0)
 *             return self.doubleMuPass_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12doubleMuPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3881
 *     property doubleMuPass:
 *         def __get__(self):
 *             self.doubleMuPass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.doubleMuPass_value
 * 
 */
  __pyx_v_self->doubleMuPass_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3882
 *         def __get__(self):
 *             self.doubleMuPass_branch.GetEntry(self.localentry, 0)
 *             return self.doubleMuPass_value             # <<<<<<<<<<<<<<
 * 
 *     property doubleMuPrescale:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->doubleMuPass_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3882; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.doubleMuPass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16doubleMuPrescale_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16doubleMuPrescale_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_16doubleMuPrescale___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3885
 * 
 *     property doubleMuPrescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.doubleMuPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.doubleMuPrescale_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16doubleMuPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3886
 *     property doubleMuPrescale:
 *         def __get__(self):
 *             self.doubleMuPrescale_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.doubleMuPrescale_value
 * 
 */
  __pyx_v_self->doubleMuPrescale_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3887
 *         def __get__(self):
 *             self.doubleMuPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.doubleMuPrescale_value             # <<<<<<<<<<<<<<
 * 
 *     property doubleMuTrkGroup:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->doubleMuPrescale_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3887; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.doubleMuPrescale.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16doubleMuTrkGroup_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16doubleMuTrkGroup_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_16doubleMuTrkGroup___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3890
 * 
 *     property doubleMuTrkGroup:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.doubleMuTrkGroup_branch.GetEntry(self.localentry, 0)
 *             return self.doubleMuTrkGroup_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16doubleMuTrkGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3891
 *     property doubleMuTrkGroup:
 *         def __get__(self):
 *             self.doubleMuTrkGroup_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.doubleMuTrkGroup_value
 * 
 */
  __pyx_v_self->doubleMuTrkGroup_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3892
 *         def __get__(self):
 *             self.doubleMuTrkGroup_branch.GetEntry(self.localentry, 0)
 *             return self.doubleMuTrkGroup_value             # <<<<<<<<<<<<<<
 * 
 *     property doubleMuTrkPass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->doubleMuTrkGroup_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3892; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.doubleMuTrkGroup.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_15doubleMuTrkPass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_15doubleMuTrkPass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_15doubleMuTrkPass___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3895
 * 
 *     property doubleMuTrkPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.doubleMuTrkPass_branch.GetEntry(self.localentry, 0)
 *             return self.doubleMuTrkPass_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_15doubleMuTrkPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3896
 *     property doubleMuTrkPass:
 *         def __get__(self):
 *             self.doubleMuTrkPass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.doubleMuTrkPass_value
 * 
 */
  __pyx_v_self->doubleMuTrkPass_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3897
 *         def __get__(self):
 *             self.doubleMuTrkPass_branch.GetEntry(self.localentry, 0)
 *             return self.doubleMuTrkPass_value             # <<<<<<<<<<<<<<
 * 
 *     property doubleMuTrkPrescale:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->doubleMuTrkPass_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3897; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.doubleMuTrkPass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_19doubleMuTrkPrescale_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_19doubleMuTrkPrescale_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_19doubleMuTrkPrescale___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3900
 * 
 *     property doubleMuTrkPrescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.doubleMuTrkPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.doubleMuTrkPrescale_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_19doubleMuTrkPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3901
 *     property doubleMuTrkPrescale:
 *         def __get__(self):
 *             self.doubleMuTrkPrescale_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.doubleMuTrkPrescale_value
 * 
 */
  __pyx_v_self->doubleMuTrkPrescale_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3902
 *         def __get__(self):
 *             self.doubleMuTrkPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.doubleMuTrkPrescale_value             # <<<<<<<<<<<<<<
 * 
 *     property doublePhoGroup:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->doubleMuTrkPrescale_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3902; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.doubleMuTrkPrescale.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14doublePhoGroup_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14doublePhoGroup_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_14doublePhoGroup___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3905
 * 
 *     property doublePhoGroup:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.doublePhoGroup_branch.GetEntry(self.localentry, 0)
 *             return self.doublePhoGroup_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14doublePhoGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3906
 *     property doublePhoGroup:
 *         def __get__(self):
 *             self.doublePhoGroup_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.doublePhoGroup_value
 * 
 */
  __pyx_v_self->doublePhoGroup_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3907
 *         def __get__(self):
 *             self.doublePhoGroup_branch.GetEntry(self.localentry, 0)
 *             return self.doublePhoGroup_value             # <<<<<<<<<<<<<<
 * 
 *     property doublePhoPass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->doublePhoGroup_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3907; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.doublePhoGroup.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13doublePhoPass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13doublePhoPass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_13doublePhoPass___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3910
 * 
 *     property doublePhoPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.doublePhoPass_branch.GetEntry(self.localentry, 0)
 *             return self.doublePhoPass_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13doublePhoPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3911
 *     property doublePhoPass:
 *         def __get__(self):
 *             self.doublePhoPass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.doublePhoPass_value
 * 
 */
  __pyx_v_self->doublePhoPass_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3912
 *         def __get__(self):
 *             self.doublePhoPass_branch.GetEntry(self.localentry, 0)
 *             return self.doublePhoPass_value             # <<<<<<<<<<<<<<
 * 
 *     property doublePhoPrescale:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->doublePhoPass_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3912; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.doublePhoPass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_17doublePhoPrescale_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_17doublePhoPrescale_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_17doublePhoPrescale___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3915
 * 
 *     property doublePhoPrescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.doublePhoPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.doublePhoPrescale_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_17doublePhoPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3916
 *     property doublePhoPrescale:
 *         def __get__(self):
 *             self.doublePhoPrescale_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.doublePhoPrescale_value
 * 
 */
  __pyx_v_self->doublePhoPrescale_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3917
 *         def __get__(self):
 *             self.doublePhoPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.doublePhoPrescale_value             # <<<<<<<<<<<<<<
 * 
 *     property eVetoCicTightIso:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->doublePhoPrescale_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3917; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.doublePhoPrescale.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16eVetoCicTightIso_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16eVetoCicTightIso_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_16eVetoCicTightIso___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3920
 * 
 *     property eVetoCicTightIso:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eVetoCicTightIso_branch.GetEntry(self.localentry, 0)
 *             return self.eVetoCicTightIso_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16eVetoCicTightIso___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3921
 *     property eVetoCicTightIso:
 *         def __get__(self):
 *             self.eVetoCicTightIso_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eVetoCicTightIso_value
 * 
 */
  __pyx_v_self->eVetoCicTightIso_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3922
 *         def __get__(self):
 *             self.eVetoCicTightIso_branch.GetEntry(self.localentry, 0)
 *             return self.eVetoCicTightIso_value             # <<<<<<<<<<<<<<
 * 
 *     property eVetoMVAIso:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eVetoCicTightIso_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3922; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.eVetoCicTightIso.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11eVetoMVAIso_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11eVetoMVAIso_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_11eVetoMVAIso___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3925
 * 
 *     property eVetoMVAIso:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eVetoMVAIso_branch.GetEntry(self.localentry, 0)
 *             return self.eVetoMVAIso_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11eVetoMVAIso___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3926
 *     property eVetoMVAIso:
 *         def __get__(self):
 *             self.eVetoMVAIso_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eVetoMVAIso_value
 * 
 */
  __pyx_v_self->eVetoMVAIso_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3927
 *         def __get__(self):
 *             self.eVetoMVAIso_branch.GetEntry(self.localentry, 0)
 *             return self.eVetoMVAIso_value             # <<<<<<<<<<<<<<
 * 
 *     property eVetoMVAIsoVtx:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eVetoMVAIso_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3927; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.eVetoMVAIso.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14eVetoMVAIsoVtx_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14eVetoMVAIsoVtx_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_14eVetoMVAIsoVtx___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3930
 * 
 *     property eVetoMVAIsoVtx:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.eVetoMVAIsoVtx_branch.GetEntry(self.localentry, 0)
 *             return self.eVetoMVAIsoVtx_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14eVetoMVAIsoVtx___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3931
 *     property eVetoMVAIsoVtx:
 *         def __get__(self):
 *             self.eVetoMVAIsoVtx_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.eVetoMVAIsoVtx_value
 * 
 */
  __pyx_v_self->eVetoMVAIsoVtx_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3932
 *         def __get__(self):
 *             self.eVetoMVAIsoVtx_branch.GetEntry(self.localentry, 0)
 *             return self.eVetoMVAIsoVtx_value             # <<<<<<<<<<<<<<
 * 
 *     property evt:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->eVetoMVAIsoVtx_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3932; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.eVetoMVAIsoVtx.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3evt_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3evt_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_3evt___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3935
 * 
 *     property evt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.evt_branch.GetEntry(self.localentry, 0)
 *             return self.evt_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3evt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3936
 *     property evt:
 *         def __get__(self):
 *             self.evt_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.evt_value
 * 
 */
  __pyx_v_self->evt_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3937
 *         def __get__(self):
 *             self.evt_branch.GetEntry(self.localentry, 0)
 *             return self.evt_value             # <<<<<<<<<<<<<<
 * 
 *     property isGtautau:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(__pyx_v_self->evt_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3937; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.evt.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9isGtautau_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9isGtautau_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_9isGtautau___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3940
 * 
 *     property isGtautau:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.isGtautau_branch.GetEntry(self.localentry, 0)
 *             return self.isGtautau_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9isGtautau___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3941
 *     property isGtautau:
 *         def __get__(self):
 *             self.isGtautau_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.isGtautau_value
 * 
 */
  __pyx_v_self->isGtautau_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3942
 *         def __get__(self):
 *             self.isGtautau_branch.GetEntry(self.localentry, 0)
 *             return self.isGtautau_value             # <<<<<<<<<<<<<<
 * 
 *     property isWmunu:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->isGtautau_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3942; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.isGtautau.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_7isWmunu_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_7isWmunu_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_7isWmunu___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3945
 * 
 *     property isWmunu:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.isWmunu_branch.GetEntry(self.localentry, 0)
 *             return self.isWmunu_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_7isWmunu___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3946
 *     property isWmunu:
 *         def __get__(self):
 *             self.isWmunu_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.isWmunu_value
 * 
 */
  __pyx_v_self->isWmunu_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3947
 *         def __get__(self):
 *             self.isWmunu_branch.GetEntry(self.localentry, 0)
 *             return self.isWmunu_value             # <<<<<<<<<<<<<<
 * 
 *     property isWtaunu:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->isWmunu_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3947; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.isWmunu.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8isWtaunu_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8isWtaunu_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_8isWtaunu___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3950
 * 
 *     property isWtaunu:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.isWtaunu_branch.GetEntry(self.localentry, 0)
 *             return self.isWtaunu_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8isWtaunu___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3951
 *     property isWtaunu:
 *         def __get__(self):
 *             self.isWtaunu_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.isWtaunu_value
 * 
 */
  __pyx_v_self->isWtaunu_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3952
 *         def __get__(self):
 *             self.isWtaunu_branch.GetEntry(self.localentry, 0)
 *             return self.isWtaunu_value             # <<<<<<<<<<<<<<
 * 
 *     property isZtautau:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->isWtaunu_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3952; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.isWtaunu.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9isZtautau_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9isZtautau_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_9isZtautau___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3955
 * 
 *     property isZtautau:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.isZtautau_branch.GetEntry(self.localentry, 0)
 *             return self.isZtautau_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9isZtautau___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3956
 *     property isZtautau:
 *         def __get__(self):
 *             self.isZtautau_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.isZtautau_value
 * 
 */
  __pyx_v_self->isZtautau_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3957
 *         def __get__(self):
 *             self.isZtautau_branch.GetEntry(self.localentry, 0)
 *             return self.isZtautau_value             # <<<<<<<<<<<<<<
 * 
 *     property isdata:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->isZtautau_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3957; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.isZtautau.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6isdata_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6isdata_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_6isdata___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3960
 * 
 *     property isdata:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.isdata_branch.GetEntry(self.localentry, 0)
 *             return self.isdata_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6isdata___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3961
 *     property isdata:
 *         def __get__(self):
 *             self.isdata_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.isdata_value
 * 
 */
  __pyx_v_self->isdata_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3962
 *         def __get__(self):
 *             self.isdata_branch.GetEntry(self.localentry, 0)
 *             return self.isdata_value             # <<<<<<<<<<<<<<
 * 
 *     property isoMu24eta2p1Group:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(__pyx_v_self->isdata_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3962; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.isdata.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_18isoMu24eta2p1Group_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_18isoMu24eta2p1Group_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_18isoMu24eta2p1Group___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3965
 * 
 *     property isoMu24eta2p1Group:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.isoMu24eta2p1Group_branch.GetEntry(self.localentry, 0)
 *             return self.isoMu24eta2p1Group_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_18isoMu24eta2p1Group___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3966
 *     property isoMu24eta2p1Group:
 *         def __get__(self):
 *             self.isoMu24eta2p1Group_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.isoMu24eta2p1Group_value
 * 
 */
  __pyx_v_self->isoMu24eta2p1Group_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3967
 *         def __get__(self):
 *             self.isoMu24eta2p1Group_branch.GetEntry(self.localentry, 0)
 *             return self.isoMu24eta2p1Group_value             # <<<<<<<<<<<<<<
 * 
 *     property isoMu24eta2p1Pass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->isoMu24eta2p1Group_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3967; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.isoMu24eta2p1Group.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_17isoMu24eta2p1Pass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_17isoMu24eta2p1Pass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_17isoMu24eta2p1Pass___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3970
 * 
 *     property isoMu24eta2p1Pass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.isoMu24eta2p1Pass_branch.GetEntry(self.localentry, 0)
 *             return self.isoMu24eta2p1Pass_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_17isoMu24eta2p1Pass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3971
 *     property isoMu24eta2p1Pass:
 *         def __get__(self):
 *             self.isoMu24eta2p1Pass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.isoMu24eta2p1Pass_value
 * 
 */
  __pyx_v_self->isoMu24eta2p1Pass_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3972
 *         def __get__(self):
 *             self.isoMu24eta2p1Pass_branch.GetEntry(self.localentry, 0)
 *             return self.isoMu24eta2p1Pass_value             # <<<<<<<<<<<<<<
 * 
 *     property isoMu24eta2p1Prescale:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->isoMu24eta2p1Pass_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3972; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.isoMu24eta2p1Pass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_21isoMu24eta2p1Prescale_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_21isoMu24eta2p1Prescale_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_21isoMu24eta2p1Prescale___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3975
 * 
 *     property isoMu24eta2p1Prescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.isoMu24eta2p1Prescale_branch.GetEntry(self.localentry, 0)
 *             return self.isoMu24eta2p1Prescale_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_21isoMu24eta2p1Prescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3976
 *     property isoMu24eta2p1Prescale:
 *         def __get__(self):
 *             self.isoMu24eta2p1Prescale_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.isoMu24eta2p1Prescale_value
 * 
 */
  __pyx_v_self->isoMu24eta2p1Prescale_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3977
 *         def __get__(self):
 *             self.isoMu24eta2p1Prescale_branch.GetEntry(self.localentry, 0)
 *             return self.isoMu24eta2p1Prescale_value             # <<<<<<<<<<<<<<
 * 
 *     property isoMuGroup:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->isoMu24eta2p1Prescale_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3977; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.isoMu24eta2p1Prescale.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10isoMuGroup_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10isoMuGroup_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_10isoMuGroup___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3980
 * 
 *     property isoMuGroup:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.isoMuGroup_branch.GetEntry(self.localentry, 0)
 *             return self.isoMuGroup_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10isoMuGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3981
 *     property isoMuGroup:
 *         def __get__(self):
 *             self.isoMuGroup_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.isoMuGroup_value
 * 
 */
  __pyx_v_self->isoMuGroup_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3982
 *         def __get__(self):
 *             self.isoMuGroup_branch.GetEntry(self.localentry, 0)
 *             return self.isoMuGroup_value             # <<<<<<<<<<<<<<
 * 
 *     property isoMuPass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->isoMuGroup_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3982; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.isoMuGroup.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9isoMuPass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9isoMuPass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_9isoMuPass___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3985
 * 
 *     property isoMuPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.isoMuPass_branch.GetEntry(self.localentry, 0)
 *             return self.isoMuPass_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9isoMuPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3986
 *     property isoMuPass:
 *         def __get__(self):
 *             self.isoMuPass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.isoMuPass_value
 * 
 */
  __pyx_v_self->isoMuPass_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3987
 *         def __get__(self):
 *             self.isoMuPass_branch.GetEntry(self.localentry, 0)
 *             return self.isoMuPass_value             # <<<<<<<<<<<<<<
 * 
 *     property isoMuPrescale:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->isoMuPass_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3987; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.isoMuPass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13isoMuPrescale_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13isoMuPrescale_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_13isoMuPrescale___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3990
 * 
 *     property isoMuPrescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.isoMuPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.isoMuPrescale_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13isoMuPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3991
 *     property isoMuPrescale:
 *         def __get__(self):
 *             self.isoMuPrescale_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.isoMuPrescale_value
 * 
 */
  __pyx_v_self->isoMuPrescale_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3992
 *         def __get__(self):
 *             self.isoMuPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.isoMuPrescale_value             # <<<<<<<<<<<<<<
 * 
 *     property isoMuTauGroup:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->isoMuPrescale_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3992; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.isoMuPrescale.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13isoMuTauGroup_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13isoMuTauGroup_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_13isoMuTauGroup___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":3995
 * 
 *     property isoMuTauGroup:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.isoMuTauGroup_branch.GetEntry(self.localentry, 0)
 *             return self.isoMuTauGroup_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13isoMuTauGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":3996
 *     property isoMuTauGroup:
 *         def __get__(self):
 *             self.isoMuTauGroup_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.isoMuTauGroup_value
 * 
 */
  __pyx_v_self->isoMuTauGroup_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":3997
 *         def __get__(self):
 *             self.isoMuTauGroup_branch.GetEntry(self.localentry, 0)
 *             return self.isoMuTauGroup_value             # <<<<<<<<<<<<<<
 * 
 *     property isoMuTauPass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->isoMuTauGroup_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3997; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.isoMuTauGroup.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12isoMuTauPass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12isoMuTauPass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_12isoMuTauPass___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4000
 * 
 *     property isoMuTauPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.isoMuTauPass_branch.GetEntry(self.localentry, 0)
 *             return self.isoMuTauPass_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12isoMuTauPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4001
 *     property isoMuTauPass:
 *         def __get__(self):
 *             self.isoMuTauPass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.isoMuTauPass_value
 * 
 */
  __pyx_v_self->isoMuTauPass_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4002
 *         def __get__(self):
 *             self.isoMuTauPass_branch.GetEntry(self.localentry, 0)
 *             return self.isoMuTauPass_value             # <<<<<<<<<<<<<<
 * 
 *     property isoMuTauPrescale:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->isoMuTauPass_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4002; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.isoMuTauPass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16isoMuTauPrescale_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16isoMuTauPrescale_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_16isoMuTauPrescale___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4005
 * 
 *     property isoMuTauPrescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.isoMuTauPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.isoMuTauPrescale_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16isoMuTauPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4006
 *     property isoMuTauPrescale:
 *         def __get__(self):
 *             self.isoMuTauPrescale_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.isoMuTauPrescale_value
 * 
 */
  __pyx_v_self->isoMuTauPrescale_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4007
 *         def __get__(self):
 *             self.isoMuTauPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.isoMuTauPrescale_value             # <<<<<<<<<<<<<<
 * 
 *     property jetVeto20:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->isoMuTauPrescale_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4007; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.isoMuTauPrescale.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9jetVeto20_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9jetVeto20_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_9jetVeto20___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4010
 * 
 *     property jetVeto20:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto20_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto20_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9jetVeto20___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4011
 *     property jetVeto20:
 *         def __get__(self):
 *             self.jetVeto20_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jetVeto20_value
 * 
 */
  __pyx_v_self->jetVeto20_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4012
 *         def __get__(self):
 *             self.jetVeto20_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto20_value             # <<<<<<<<<<<<<<
 * 
 *     property jetVeto30:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jetVeto20_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4012; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.jetVeto20.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9jetVeto30_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9jetVeto30_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_9jetVeto30___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4015
 * 
 *     property jetVeto30:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto30_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9jetVeto30___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4016
 *     property jetVeto30:
 *         def __get__(self):
 *             self.jetVeto30_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jetVeto30_value
 * 
 */
  __pyx_v_self->jetVeto30_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4017
 *         def __get__(self):
 *             self.jetVeto30_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto30_value             # <<<<<<<<<<<<<<
 * 
 *     property jetVeto40:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jetVeto30_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4017; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.jetVeto30.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9jetVeto40_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9jetVeto40_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_9jetVeto40___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4020
 * 
 *     property jetVeto40:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.jetVeto40_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto40_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9jetVeto40___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4021
 *     property jetVeto40:
 *         def __get__(self):
 *             self.jetVeto40_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.jetVeto40_value
 * 
 */
  __pyx_v_self->jetVeto40_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4022
 *         def __get__(self):
 *             self.jetVeto40_branch.GetEntry(self.localentry, 0)
 *             return self.jetVeto40_value             # <<<<<<<<<<<<<<
 * 
 *     property lumi:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->jetVeto40_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4022; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.jetVeto40.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_4lumi_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_4lumi_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_4lumi___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4025
 * 
 *     property lumi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.lumi_branch.GetEntry(self.localentry, 0)
 *             return self.lumi_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_4lumi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4026
 *     property lumi:
 *         def __get__(self):
 *             self.lumi_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.lumi_value
 * 
 */
  __pyx_v_self->lumi_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4027
 *         def __get__(self):
 *             self.lumi_branch.GetEntry(self.localentry, 0)
 *             return self.lumi_value             # <<<<<<<<<<<<<<
 * 
 *     property mAbsEta:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(__pyx_v_self->lumi_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4027; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.lumi.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_7mAbsEta_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_7mAbsEta_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_7mAbsEta___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4030
 * 
 *     property mAbsEta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mAbsEta_branch.GetEntry(self.localentry, 0)
 *             return self.mAbsEta_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_7mAbsEta___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4031
 *     property mAbsEta:
 *         def __get__(self):
 *             self.mAbsEta_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mAbsEta_value
 * 
 */
  __pyx_v_self->mAbsEta_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4032
 *         def __get__(self):
 *             self.mAbsEta_branch.GetEntry(self.localentry, 0)
 *             return self.mAbsEta_value             # <<<<<<<<<<<<<<
 * 
 *     property mCharge:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mAbsEta_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4032; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mAbsEta.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_7mCharge_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_7mCharge_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_7mCharge___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4035
 * 
 *     property mCharge:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mCharge_branch.GetEntry(self.localentry, 0)
 *             return self.mCharge_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_7mCharge___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4036
 *     property mCharge:
 *         def __get__(self):
 *             self.mCharge_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mCharge_value
 * 
 */
  __pyx_v_self->mCharge_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4037
 *         def __get__(self):
 *             self.mCharge_branch.GetEntry(self.localentry, 0)
 *             return self.mCharge_value             # <<<<<<<<<<<<<<
 * 
 *     property mComesFromHiggs:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mCharge_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4037; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mCharge.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_15mComesFromHiggs_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_15mComesFromHiggs_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_15mComesFromHiggs___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4040
 * 
 *     property mComesFromHiggs:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mComesFromHiggs_branch.GetEntry(self.localentry, 0)
 *             return self.mComesFromHiggs_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_15mComesFromHiggs___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4041
 *     property mComesFromHiggs:
 *         def __get__(self):
 *             self.mComesFromHiggs_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mComesFromHiggs_value
 * 
 */
  __pyx_v_self->mComesFromHiggs_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4042
 *         def __get__(self):
 *             self.mComesFromHiggs_branch.GetEntry(self.localentry, 0)
 *             return self.mComesFromHiggs_value             # <<<<<<<<<<<<<<
 * 
 *     property mD0:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mComesFromHiggs_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4042; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mComesFromHiggs.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3mD0_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3mD0_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_3mD0___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4045
 * 
 *     property mD0:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mD0_branch.GetEntry(self.localentry, 0)
 *             return self.mD0_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3mD0___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4046
 *     property mD0:
 *         def __get__(self):
 *             self.mD0_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mD0_value
 * 
 */
  __pyx_v_self->mD0_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4047
 *         def __get__(self):
 *             self.mD0_branch.GetEntry(self.localentry, 0)
 *             return self.mD0_value             # <<<<<<<<<<<<<<
 * 
 *     property mDZ:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mD0_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4047; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mD0.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3mDZ_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3mDZ_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_3mDZ___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4050
 * 
 *     property mDZ:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mDZ_branch.GetEntry(self.localentry, 0)
 *             return self.mDZ_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3mDZ___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4051
 *     property mDZ:
 *         def __get__(self):
 *             self.mDZ_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mDZ_value
 * 
 */
  __pyx_v_self->mDZ_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4052
 *         def __get__(self):
 *             self.mDZ_branch.GetEntry(self.localentry, 0)
 *             return self.mDZ_value             # <<<<<<<<<<<<<<
 * 
 *     property mDiMuonL3PreFiltered7:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mDZ_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4052; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mDZ.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_21mDiMuonL3PreFiltered7_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_21mDiMuonL3PreFiltered7_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_21mDiMuonL3PreFiltered7___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4055
 * 
 *     property mDiMuonL3PreFiltered7:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mDiMuonL3PreFiltered7_branch.GetEntry(self.localentry, 0)
 *             return self.mDiMuonL3PreFiltered7_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_21mDiMuonL3PreFiltered7___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4056
 *     property mDiMuonL3PreFiltered7:
 *         def __get__(self):
 *             self.mDiMuonL3PreFiltered7_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mDiMuonL3PreFiltered7_value
 * 
 */
  __pyx_v_self->mDiMuonL3PreFiltered7_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4057
 *         def __get__(self):
 *             self.mDiMuonL3PreFiltered7_branch.GetEntry(self.localentry, 0)
 *             return self.mDiMuonL3PreFiltered7_value             # <<<<<<<<<<<<<<
 * 
 *     property mDiMuonL3p5PreFiltered8:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mDiMuonL3PreFiltered7_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4057; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mDiMuonL3PreFiltered7.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_23mDiMuonL3p5PreFiltered8_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_23mDiMuonL3p5PreFiltered8_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_23mDiMuonL3p5PreFiltered8___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4060
 * 
 *     property mDiMuonL3p5PreFiltered8:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mDiMuonL3p5PreFiltered8_branch.GetEntry(self.localentry, 0)
 *             return self.mDiMuonL3p5PreFiltered8_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_23mDiMuonL3p5PreFiltered8___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4061
 *     property mDiMuonL3p5PreFiltered8:
 *         def __get__(self):
 *             self.mDiMuonL3p5PreFiltered8_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mDiMuonL3p5PreFiltered8_value
 * 
 */
  __pyx_v_self->mDiMuonL3p5PreFiltered8_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4062
 *         def __get__(self):
 *             self.mDiMuonL3p5PreFiltered8_branch.GetEntry(self.localentry, 0)
 *             return self.mDiMuonL3p5PreFiltered8_value             # <<<<<<<<<<<<<<
 * 
 *     property mDiMuonMu17Mu8DzFiltered0p2:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mDiMuonL3p5PreFiltered8_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4062; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mDiMuonL3p5PreFiltered8.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_27mDiMuonMu17Mu8DzFiltered0p2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_27mDiMuonMu17Mu8DzFiltered0p2_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_27mDiMuonMu17Mu8DzFiltered0p2___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4065
 * 
 *     property mDiMuonMu17Mu8DzFiltered0p2:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mDiMuonMu17Mu8DzFiltered0p2_branch.GetEntry(self.localentry, 0)
 *             return self.mDiMuonMu17Mu8DzFiltered0p2_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_27mDiMuonMu17Mu8DzFiltered0p2___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4066
 *     property mDiMuonMu17Mu8DzFiltered0p2:
 *         def __get__(self):
 *             self.mDiMuonMu17Mu8DzFiltered0p2_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mDiMuonMu17Mu8DzFiltered0p2_value
 * 
 */
  __pyx_v_self->mDiMuonMu17Mu8DzFiltered0p2_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4067
 *         def __get__(self):
 *             self.mDiMuonMu17Mu8DzFiltered0p2_branch.GetEntry(self.localentry, 0)
 *             return self.mDiMuonMu17Mu8DzFiltered0p2_value             # <<<<<<<<<<<<<<
 * 
 *     property mEErrRochCor2011A:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mDiMuonMu17Mu8DzFiltered0p2_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4067; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mDiMuonMu17Mu8DzFiltered0p2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_17mEErrRochCor2011A_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_17mEErrRochCor2011A_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_17mEErrRochCor2011A___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4070
 * 
 *     property mEErrRochCor2011A:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mEErrRochCor2011A_branch.GetEntry(self.localentry, 0)
 *             return self.mEErrRochCor2011A_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_17mEErrRochCor2011A___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4071
 *     property mEErrRochCor2011A:
 *         def __get__(self):
 *             self.mEErrRochCor2011A_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mEErrRochCor2011A_value
 * 
 */
  __pyx_v_self->mEErrRochCor2011A_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4072
 *         def __get__(self):
 *             self.mEErrRochCor2011A_branch.GetEntry(self.localentry, 0)
 *             return self.mEErrRochCor2011A_value             # <<<<<<<<<<<<<<
 * 
 *     property mEErrRochCor2011B:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mEErrRochCor2011A_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4072; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mEErrRochCor2011A.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_17mEErrRochCor2011B_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_17mEErrRochCor2011B_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_17mEErrRochCor2011B___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4075
 * 
 *     property mEErrRochCor2011B:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mEErrRochCor2011B_branch.GetEntry(self.localentry, 0)
 *             return self.mEErrRochCor2011B_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_17mEErrRochCor2011B___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4076
 *     property mEErrRochCor2011B:
 *         def __get__(self):
 *             self.mEErrRochCor2011B_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mEErrRochCor2011B_value
 * 
 */
  __pyx_v_self->mEErrRochCor2011B_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4077
 *         def __get__(self):
 *             self.mEErrRochCor2011B_branch.GetEntry(self.localentry, 0)
 *             return self.mEErrRochCor2011B_value             # <<<<<<<<<<<<<<
 * 
 *     property mEErrRochCor2012:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mEErrRochCor2011B_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4077; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mEErrRochCor2011B.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16mEErrRochCor2012_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16mEErrRochCor2012_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_16mEErrRochCor2012___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4080
 * 
 *     property mEErrRochCor2012:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mEErrRochCor2012_branch.GetEntry(self.localentry, 0)
 *             return self.mEErrRochCor2012_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16mEErrRochCor2012___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4081
 *     property mEErrRochCor2012:
 *         def __get__(self):
 *             self.mEErrRochCor2012_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mEErrRochCor2012_value
 * 
 */
  __pyx_v_self->mEErrRochCor2012_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4082
 *         def __get__(self):
 *             self.mEErrRochCor2012_branch.GetEntry(self.localentry, 0)
 *             return self.mEErrRochCor2012_value             # <<<<<<<<<<<<<<
 * 
 *     property mERochCor2011A:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mEErrRochCor2012_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4082; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mEErrRochCor2012.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14mERochCor2011A_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14mERochCor2011A_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_14mERochCor2011A___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4085
 * 
 *     property mERochCor2011A:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mERochCor2011A_branch.GetEntry(self.localentry, 0)
 *             return self.mERochCor2011A_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14mERochCor2011A___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4086
 *     property mERochCor2011A:
 *         def __get__(self):
 *             self.mERochCor2011A_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mERochCor2011A_value
 * 
 */
  __pyx_v_self->mERochCor2011A_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4087
 *         def __get__(self):
 *             self.mERochCor2011A_branch.GetEntry(self.localentry, 0)
 *             return self.mERochCor2011A_value             # <<<<<<<<<<<<<<
 * 
 *     property mERochCor2011B:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mERochCor2011A_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4087; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mERochCor2011A.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14mERochCor2011B_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14mERochCor2011B_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_14mERochCor2011B___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4090
 * 
 *     property mERochCor2011B:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mERochCor2011B_branch.GetEntry(self.localentry, 0)
 *             return self.mERochCor2011B_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14mERochCor2011B___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4091
 *     property mERochCor2011B:
 *         def __get__(self):
 *             self.mERochCor2011B_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mERochCor2011B_value
 * 
 */
  __pyx_v_self->mERochCor2011B_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4092
 *         def __get__(self):
 *             self.mERochCor2011B_branch.GetEntry(self.localentry, 0)
 *             return self.mERochCor2011B_value             # <<<<<<<<<<<<<<
 * 
 *     property mERochCor2012:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mERochCor2011B_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4092; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mERochCor2011B.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13mERochCor2012_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13mERochCor2012_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_13mERochCor2012___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4095
 * 
 *     property mERochCor2012:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mERochCor2012_branch.GetEntry(self.localentry, 0)
 *             return self.mERochCor2012_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13mERochCor2012___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4096
 *     property mERochCor2012:
 *         def __get__(self):
 *             self.mERochCor2012_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mERochCor2012_value
 * 
 */
  __pyx_v_self->mERochCor2012_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4097
 *         def __get__(self):
 *             self.mERochCor2012_branch.GetEntry(self.localentry, 0)
 *             return self.mERochCor2012_value             # <<<<<<<<<<<<<<
 * 
 *     property mEffectiveArea2011:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mERochCor2012_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4097; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mERochCor2012.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_18mEffectiveArea2011_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_18mEffectiveArea2011_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_18mEffectiveArea2011___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4100
 * 
 *     property mEffectiveArea2011:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mEffectiveArea2011_branch.GetEntry(self.localentry, 0)
 *             return self.mEffectiveArea2011_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_18mEffectiveArea2011___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4101
 *     property mEffectiveArea2011:
 *         def __get__(self):
 *             self.mEffectiveArea2011_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mEffectiveArea2011_value
 * 
 */
  __pyx_v_self->mEffectiveArea2011_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4102
 *         def __get__(self):
 *             self.mEffectiveArea2011_branch.GetEntry(self.localentry, 0)
 *             return self.mEffectiveArea2011_value             # <<<<<<<<<<<<<<
 * 
 *     property mEffectiveArea2012:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mEffectiveArea2011_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4102; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mEffectiveArea2011.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_18mEffectiveArea2012_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_18mEffectiveArea2012_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_18mEffectiveArea2012___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4105
 * 
 *     property mEffectiveArea2012:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mEffectiveArea2012_branch.GetEntry(self.localentry, 0)
 *             return self.mEffectiveArea2012_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_18mEffectiveArea2012___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4106
 *     property mEffectiveArea2012:
 *         def __get__(self):
 *             self.mEffectiveArea2012_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mEffectiveArea2012_value
 * 
 */
  __pyx_v_self->mEffectiveArea2012_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4107
 *         def __get__(self):
 *             self.mEffectiveArea2012_branch.GetEntry(self.localentry, 0)
 *             return self.mEffectiveArea2012_value             # <<<<<<<<<<<<<<
 * 
 *     property mEta:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mEffectiveArea2012_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4107; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mEffectiveArea2012.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_4mEta_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_4mEta_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_4mEta___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4110
 * 
 *     property mEta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mEta_branch.GetEntry(self.localentry, 0)
 *             return self.mEta_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_4mEta___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4111
 *     property mEta:
 *         def __get__(self):
 *             self.mEta_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mEta_value
 * 
 */
  __pyx_v_self->mEta_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4112
 *         def __get__(self):
 *             self.mEta_branch.GetEntry(self.localentry, 0)
 *             return self.mEta_value             # <<<<<<<<<<<<<<
 * 
 *     property mEtaRochCor2011A:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mEta_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4112; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mEta.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16mEtaRochCor2011A_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16mEtaRochCor2011A_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_16mEtaRochCor2011A___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4115
 * 
 *     property mEtaRochCor2011A:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mEtaRochCor2011A_branch.GetEntry(self.localentry, 0)
 *             return self.mEtaRochCor2011A_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16mEtaRochCor2011A___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4116
 *     property mEtaRochCor2011A:
 *         def __get__(self):
 *             self.mEtaRochCor2011A_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mEtaRochCor2011A_value
 * 
 */
  __pyx_v_self->mEtaRochCor2011A_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4117
 *         def __get__(self):
 *             self.mEtaRochCor2011A_branch.GetEntry(self.localentry, 0)
 *             return self.mEtaRochCor2011A_value             # <<<<<<<<<<<<<<
 * 
 *     property mEtaRochCor2011B:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mEtaRochCor2011A_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4117; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mEtaRochCor2011A.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16mEtaRochCor2011B_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16mEtaRochCor2011B_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_16mEtaRochCor2011B___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4120
 * 
 *     property mEtaRochCor2011B:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mEtaRochCor2011B_branch.GetEntry(self.localentry, 0)
 *             return self.mEtaRochCor2011B_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16mEtaRochCor2011B___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4121
 *     property mEtaRochCor2011B:
 *         def __get__(self):
 *             self.mEtaRochCor2011B_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mEtaRochCor2011B_value
 * 
 */
  __pyx_v_self->mEtaRochCor2011B_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4122
 *         def __get__(self):
 *             self.mEtaRochCor2011B_branch.GetEntry(self.localentry, 0)
 *             return self.mEtaRochCor2011B_value             # <<<<<<<<<<<<<<
 * 
 *     property mEtaRochCor2012:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mEtaRochCor2011B_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4122; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mEtaRochCor2011B.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_15mEtaRochCor2012_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_15mEtaRochCor2012_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_15mEtaRochCor2012___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4125
 * 
 *     property mEtaRochCor2012:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mEtaRochCor2012_branch.GetEntry(self.localentry, 0)
 *             return self.mEtaRochCor2012_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_15mEtaRochCor2012___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4126
 *     property mEtaRochCor2012:
 *         def __get__(self):
 *             self.mEtaRochCor2012_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mEtaRochCor2012_value
 * 
 */
  __pyx_v_self->mEtaRochCor2012_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4127
 *         def __get__(self):
 *             self.mEtaRochCor2012_branch.GetEntry(self.localentry, 0)
 *             return self.mEtaRochCor2012_value             # <<<<<<<<<<<<<<
 * 
 *     property mGenMotherPdgId:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mEtaRochCor2012_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4127; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mEtaRochCor2012.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_15mGenMotherPdgId_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_15mGenMotherPdgId_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_15mGenMotherPdgId___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4130
 * 
 *     property mGenMotherPdgId:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mGenMotherPdgId_branch.GetEntry(self.localentry, 0)
 *             return self.mGenMotherPdgId_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_15mGenMotherPdgId___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4131
 *     property mGenMotherPdgId:
 *         def __get__(self):
 *             self.mGenMotherPdgId_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mGenMotherPdgId_value
 * 
 */
  __pyx_v_self->mGenMotherPdgId_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4132
 *         def __get__(self):
 *             self.mGenMotherPdgId_branch.GetEntry(self.localentry, 0)
 *             return self.mGenMotherPdgId_value             # <<<<<<<<<<<<<<
 * 
 *     property mGlbTrkHits:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mGenMotherPdgId_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4132; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mGenMotherPdgId.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11mGlbTrkHits_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11mGlbTrkHits_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_11mGlbTrkHits___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4135
 * 
 *     property mGlbTrkHits:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mGlbTrkHits_branch.GetEntry(self.localentry, 0)
 *             return self.mGlbTrkHits_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11mGlbTrkHits___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4136
 *     property mGlbTrkHits:
 *         def __get__(self):
 *             self.mGlbTrkHits_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mGlbTrkHits_value
 * 
 */
  __pyx_v_self->mGlbTrkHits_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4137
 *         def __get__(self):
 *             self.mGlbTrkHits_branch.GetEntry(self.localentry, 0)
 *             return self.mGlbTrkHits_value             # <<<<<<<<<<<<<<
 * 
 *     property mIDHZG2011:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mGlbTrkHits_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4137; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mGlbTrkHits.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10mIDHZG2011_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10mIDHZG2011_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_10mIDHZG2011___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4140
 * 
 *     property mIDHZG2011:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mIDHZG2011_branch.GetEntry(self.localentry, 0)
 *             return self.mIDHZG2011_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10mIDHZG2011___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4141
 *     property mIDHZG2011:
 *         def __get__(self):
 *             self.mIDHZG2011_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mIDHZG2011_value
 * 
 */
  __pyx_v_self->mIDHZG2011_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4142
 *         def __get__(self):
 *             self.mIDHZG2011_branch.GetEntry(self.localentry, 0)
 *             return self.mIDHZG2011_value             # <<<<<<<<<<<<<<
 * 
 *     property mIDHZG2012:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mIDHZG2011_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4142; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mIDHZG2011.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10mIDHZG2012_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10mIDHZG2012_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_10mIDHZG2012___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4145
 * 
 *     property mIDHZG2012:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mIDHZG2012_branch.GetEntry(self.localentry, 0)
 *             return self.mIDHZG2012_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10mIDHZG2012___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4146
 *     property mIDHZG2012:
 *         def __get__(self):
 *             self.mIDHZG2012_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mIDHZG2012_value
 * 
 */
  __pyx_v_self->mIDHZG2012_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4147
 *         def __get__(self):
 *             self.mIDHZG2012_branch.GetEntry(self.localentry, 0)
 *             return self.mIDHZG2012_value             # <<<<<<<<<<<<<<
 * 
 *     property mIP3DS:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mIDHZG2012_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4147; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mIDHZG2012.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6mIP3DS_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6mIP3DS_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_6mIP3DS___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4150
 * 
 *     property mIP3DS:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mIP3DS_branch.GetEntry(self.localentry, 0)
 *             return self.mIP3DS_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6mIP3DS___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4151
 *     property mIP3DS:
 *         def __get__(self):
 *             self.mIP3DS_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mIP3DS_value
 * 
 */
  __pyx_v_self->mIP3DS_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4152
 *         def __get__(self):
 *             self.mIP3DS_branch.GetEntry(self.localentry, 0)
 *             return self.mIP3DS_value             # <<<<<<<<<<<<<<
 * 
 *     property mIsGlobal:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mIP3DS_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4152; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mIP3DS.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9mIsGlobal_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9mIsGlobal_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_9mIsGlobal___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4155
 * 
 *     property mIsGlobal:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mIsGlobal_branch.GetEntry(self.localentry, 0)
 *             return self.mIsGlobal_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9mIsGlobal___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4156
 *     property mIsGlobal:
 *         def __get__(self):
 *             self.mIsGlobal_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mIsGlobal_value
 * 
 */
  __pyx_v_self->mIsGlobal_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4157
 *         def __get__(self):
 *             self.mIsGlobal_branch.GetEntry(self.localentry, 0)
 *             return self.mIsGlobal_value             # <<<<<<<<<<<<<<
 * 
 *     property mIsTracker:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mIsGlobal_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4157; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mIsGlobal.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10mIsTracker_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10mIsTracker_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_10mIsTracker___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4160
 * 
 *     property mIsTracker:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mIsTracker_branch.GetEntry(self.localentry, 0)
 *             return self.mIsTracker_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10mIsTracker___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4161
 *     property mIsTracker:
 *         def __get__(self):
 *             self.mIsTracker_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mIsTracker_value
 * 
 */
  __pyx_v_self->mIsTracker_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4162
 *         def __get__(self):
 *             self.mIsTracker_branch.GetEntry(self.localentry, 0)
 *             return self.mIsTracker_value             # <<<<<<<<<<<<<<
 * 
 *     property mJetArea:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mIsTracker_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4162; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mIsTracker.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8mJetArea_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8mJetArea_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_8mJetArea___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4165
 * 
 *     property mJetArea:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mJetArea_branch.GetEntry(self.localentry, 0)
 *             return self.mJetArea_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8mJetArea___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4166
 *     property mJetArea:
 *         def __get__(self):
 *             self.mJetArea_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mJetArea_value
 * 
 */
  __pyx_v_self->mJetArea_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4167
 *         def __get__(self):
 *             self.mJetArea_branch.GetEntry(self.localentry, 0)
 *             return self.mJetArea_value             # <<<<<<<<<<<<<<
 * 
 *     property mJetBtag:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mJetArea_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4167; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mJetArea.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8mJetBtag_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8mJetBtag_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_8mJetBtag___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4170
 * 
 *     property mJetBtag:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mJetBtag_branch.GetEntry(self.localentry, 0)
 *             return self.mJetBtag_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8mJetBtag___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4171
 *     property mJetBtag:
 *         def __get__(self):
 *             self.mJetBtag_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mJetBtag_value
 * 
 */
  __pyx_v_self->mJetBtag_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4172
 *         def __get__(self):
 *             self.mJetBtag_branch.GetEntry(self.localentry, 0)
 *             return self.mJetBtag_value             # <<<<<<<<<<<<<<
 * 
 *     property mJetCSVBtag:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mJetBtag_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4172; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mJetBtag.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11mJetCSVBtag_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11mJetCSVBtag_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_11mJetCSVBtag___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4175
 * 
 *     property mJetCSVBtag:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mJetCSVBtag_branch.GetEntry(self.localentry, 0)
 *             return self.mJetCSVBtag_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11mJetCSVBtag___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4176
 *     property mJetCSVBtag:
 *         def __get__(self):
 *             self.mJetCSVBtag_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mJetCSVBtag_value
 * 
 */
  __pyx_v_self->mJetCSVBtag_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4177
 *         def __get__(self):
 *             self.mJetCSVBtag_branch.GetEntry(self.localentry, 0)
 *             return self.mJetCSVBtag_value             # <<<<<<<<<<<<<<
 * 
 *     property mJetEtaEtaMoment:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mJetCSVBtag_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4177; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mJetCSVBtag.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16mJetEtaEtaMoment_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16mJetEtaEtaMoment_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_16mJetEtaEtaMoment___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4180
 * 
 *     property mJetEtaEtaMoment:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mJetEtaEtaMoment_branch.GetEntry(self.localentry, 0)
 *             return self.mJetEtaEtaMoment_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16mJetEtaEtaMoment___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4181
 *     property mJetEtaEtaMoment:
 *         def __get__(self):
 *             self.mJetEtaEtaMoment_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mJetEtaEtaMoment_value
 * 
 */
  __pyx_v_self->mJetEtaEtaMoment_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4182
 *         def __get__(self):
 *             self.mJetEtaEtaMoment_branch.GetEntry(self.localentry, 0)
 *             return self.mJetEtaEtaMoment_value             # <<<<<<<<<<<<<<
 * 
 *     property mJetEtaPhiMoment:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mJetEtaEtaMoment_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4182; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mJetEtaEtaMoment.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16mJetEtaPhiMoment_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16mJetEtaPhiMoment_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_16mJetEtaPhiMoment___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4185
 * 
 *     property mJetEtaPhiMoment:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mJetEtaPhiMoment_branch.GetEntry(self.localentry, 0)
 *             return self.mJetEtaPhiMoment_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16mJetEtaPhiMoment___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4186
 *     property mJetEtaPhiMoment:
 *         def __get__(self):
 *             self.mJetEtaPhiMoment_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mJetEtaPhiMoment_value
 * 
 */
  __pyx_v_self->mJetEtaPhiMoment_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4187
 *         def __get__(self):
 *             self.mJetEtaPhiMoment_branch.GetEntry(self.localentry, 0)
 *             return self.mJetEtaPhiMoment_value             # <<<<<<<<<<<<<<
 * 
 *     property mJetEtaPhiSpread:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mJetEtaPhiMoment_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4187; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mJetEtaPhiMoment.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16mJetEtaPhiSpread_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16mJetEtaPhiSpread_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_16mJetEtaPhiSpread___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4190
 * 
 *     property mJetEtaPhiSpread:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mJetEtaPhiSpread_branch.GetEntry(self.localentry, 0)
 *             return self.mJetEtaPhiSpread_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16mJetEtaPhiSpread___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4191
 *     property mJetEtaPhiSpread:
 *         def __get__(self):
 *             self.mJetEtaPhiSpread_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mJetEtaPhiSpread_value
 * 
 */
  __pyx_v_self->mJetEtaPhiSpread_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4192
 *         def __get__(self):
 *             self.mJetEtaPhiSpread_branch.GetEntry(self.localentry, 0)
 *             return self.mJetEtaPhiSpread_value             # <<<<<<<<<<<<<<
 * 
 *     property mJetPhiPhiMoment:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mJetEtaPhiSpread_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mJetEtaPhiSpread.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16mJetPhiPhiMoment_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16mJetPhiPhiMoment_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_16mJetPhiPhiMoment___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4195
 * 
 *     property mJetPhiPhiMoment:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mJetPhiPhiMoment_branch.GetEntry(self.localentry, 0)
 *             return self.mJetPhiPhiMoment_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16mJetPhiPhiMoment___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4196
 *     property mJetPhiPhiMoment:
 *         def __get__(self):
 *             self.mJetPhiPhiMoment_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mJetPhiPhiMoment_value
 * 
 */
  __pyx_v_self->mJetPhiPhiMoment_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4197
 *         def __get__(self):
 *             self.mJetPhiPhiMoment_branch.GetEntry(self.localentry, 0)
 *             return self.mJetPhiPhiMoment_value             # <<<<<<<<<<<<<<
 * 
 *     property mJetPt:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mJetPhiPhiMoment_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4197; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mJetPhiPhiMoment.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6mJetPt_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6mJetPt_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_6mJetPt___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4200
 * 
 *     property mJetPt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mJetPt_branch.GetEntry(self.localentry, 0)
 *             return self.mJetPt_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6mJetPt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4201
 *     property mJetPt:
 *         def __get__(self):
 *             self.mJetPt_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mJetPt_value
 * 
 */
  __pyx_v_self->mJetPt_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4202
 *         def __get__(self):
 *             self.mJetPt_branch.GetEntry(self.localentry, 0)
 *             return self.mJetPt_value             # <<<<<<<<<<<<<<
 * 
 *     property mL1Mu3EG5L3Filtered17:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mJetPt_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4202; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mJetPt.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_21mL1Mu3EG5L3Filtered17_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_21mL1Mu3EG5L3Filtered17_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_21mL1Mu3EG5L3Filtered17___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4205
 * 
 *     property mL1Mu3EG5L3Filtered17:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mL1Mu3EG5L3Filtered17_branch.GetEntry(self.localentry, 0)
 *             return self.mL1Mu3EG5L3Filtered17_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_21mL1Mu3EG5L3Filtered17___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4206
 *     property mL1Mu3EG5L3Filtered17:
 *         def __get__(self):
 *             self.mL1Mu3EG5L3Filtered17_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mL1Mu3EG5L3Filtered17_value
 * 
 */
  __pyx_v_self->mL1Mu3EG5L3Filtered17_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4207
 *         def __get__(self):
 *             self.mL1Mu3EG5L3Filtered17_branch.GetEntry(self.localentry, 0)
 *             return self.mL1Mu3EG5L3Filtered17_value             # <<<<<<<<<<<<<<
 * 
 *     property mL3fL1DoubleMu10MuOpenL1f0L2f10L3Filtered17:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mL1Mu3EG5L3Filtered17_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4207; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mL1Mu3EG5L3Filtered17.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_43mL3fL1DoubleMu10MuOpenL1f0L2f10L3Filtered17_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_43mL3fL1DoubleMu10MuOpenL1f0L2f10L3Filtered17_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_43mL3fL1DoubleMu10MuOpenL1f0L2f10L3Filtered17___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4210
 * 
 *     property mL3fL1DoubleMu10MuOpenL1f0L2f10L3Filtered17:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mL3fL1DoubleMu10MuOpenL1f0L2f10L3Filtered17_branch.GetEntry(self.localentry, 0)
 *             return self.mL3fL1DoubleMu10MuOpenL1f0L2f10L3Filtered17_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_43mL3fL1DoubleMu10MuOpenL1f0L2f10L3Filtered17___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4211
 *     property mL3fL1DoubleMu10MuOpenL1f0L2f10L3Filtered17:
 *         def __get__(self):
 *             self.mL3fL1DoubleMu10MuOpenL1f0L2f10L3Filtered17_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mL3fL1DoubleMu10MuOpenL1f0L2f10L3Filtered17_value
 * 
 */
  __pyx_v_self->mL3fL1DoubleMu10MuOpenL1f0L2f10L3Filtered17_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4212
 *         def __get__(self):
 *             self.mL3fL1DoubleMu10MuOpenL1f0L2f10L3Filtered17_branch.GetEntry(self.localentry, 0)
 *             return self.mL3fL1DoubleMu10MuOpenL1f0L2f10L3Filtered17_value             # <<<<<<<<<<<<<<
 * 
 *     property mMass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mL3fL1DoubleMu10MuOpenL1f0L2f10L3Filtered17_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4212; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mL3fL1DoubleMu10MuOpenL1f0L2f10L3Filtered17.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_5mMass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_5mMass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_5mMass___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4215
 * 
 *     property mMass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMass_branch.GetEntry(self.localentry, 0)
 *             return self.mMass_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_5mMass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4216
 *     property mMass:
 *         def __get__(self):
 *             self.mMass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMass_value
 * 
 */
  __pyx_v_self->mMass_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4217
 *         def __get__(self):
 *             self.mMass_branch.GetEntry(self.localentry, 0)
 *             return self.mMass_value             # <<<<<<<<<<<<<<
 * 
 *     property mMatchedStations:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMass_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4217; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mMass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16mMatchedStations_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16mMatchedStations_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_16mMatchedStations___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4220
 * 
 *     property mMatchedStations:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchedStations_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchedStations_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16mMatchedStations___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4221
 *     property mMatchedStations:
 *         def __get__(self):
 *             self.mMatchedStations_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMatchedStations_value
 * 
 */
  __pyx_v_self->mMatchedStations_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4222
 *         def __get__(self):
 *             self.mMatchedStations_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchedStations_value             # <<<<<<<<<<<<<<
 * 
 *     property mMatchesDoubleMu2011Paths:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMatchedStations_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4222; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mMatchedStations.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_25mMatchesDoubleMu2011Paths_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_25mMatchesDoubleMu2011Paths_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_25mMatchesDoubleMu2011Paths___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4225
 * 
 *     property mMatchesDoubleMu2011Paths:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchesDoubleMu2011Paths_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesDoubleMu2011Paths_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_25mMatchesDoubleMu2011Paths___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4226
 *     property mMatchesDoubleMu2011Paths:
 *         def __get__(self):
 *             self.mMatchesDoubleMu2011Paths_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMatchesDoubleMu2011Paths_value
 * 
 */
  __pyx_v_self->mMatchesDoubleMu2011Paths_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4227
 *         def __get__(self):
 *             self.mMatchesDoubleMu2011Paths_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesDoubleMu2011Paths_value             # <<<<<<<<<<<<<<
 * 
 *     property mMatchesIsoMu24eta2p1:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMatchesDoubleMu2011Paths_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4227; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mMatchesDoubleMu2011Paths.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_21mMatchesIsoMu24eta2p1_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_21mMatchesIsoMu24eta2p1_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_21mMatchesIsoMu24eta2p1___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4230
 * 
 *     property mMatchesIsoMu24eta2p1:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchesIsoMu24eta2p1_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesIsoMu24eta2p1_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_21mMatchesIsoMu24eta2p1___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4231
 *     property mMatchesIsoMu24eta2p1:
 *         def __get__(self):
 *             self.mMatchesIsoMu24eta2p1_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMatchesIsoMu24eta2p1_value
 * 
 */
  __pyx_v_self->mMatchesIsoMu24eta2p1_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4232
 *         def __get__(self):
 *             self.mMatchesIsoMu24eta2p1_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesIsoMu24eta2p1_value             # <<<<<<<<<<<<<<
 * 
 *     property mMatchesIsoMuGroup:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMatchesIsoMu24eta2p1_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4232; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mMatchesIsoMu24eta2p1.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_18mMatchesIsoMuGroup_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_18mMatchesIsoMuGroup_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_18mMatchesIsoMuGroup___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4235
 * 
 *     property mMatchesIsoMuGroup:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchesIsoMuGroup_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesIsoMuGroup_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_18mMatchesIsoMuGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4236
 *     property mMatchesIsoMuGroup:
 *         def __get__(self):
 *             self.mMatchesIsoMuGroup_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMatchesIsoMuGroup_value
 * 
 */
  __pyx_v_self->mMatchesIsoMuGroup_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4237
 *         def __get__(self):
 *             self.mMatchesIsoMuGroup_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesIsoMuGroup_value             # <<<<<<<<<<<<<<
 * 
 *     property mMatchesMu17Ele8Path:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMatchesIsoMuGroup_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4237; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mMatchesIsoMuGroup.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_20mMatchesMu17Ele8Path_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_20mMatchesMu17Ele8Path_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_20mMatchesMu17Ele8Path___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4240
 * 
 *     property mMatchesMu17Ele8Path:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchesMu17Ele8Path_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesMu17Ele8Path_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_20mMatchesMu17Ele8Path___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4241
 *     property mMatchesMu17Ele8Path:
 *         def __get__(self):
 *             self.mMatchesMu17Ele8Path_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMatchesMu17Ele8Path_value
 * 
 */
  __pyx_v_self->mMatchesMu17Ele8Path_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4242
 *         def __get__(self):
 *             self.mMatchesMu17Ele8Path_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesMu17Ele8Path_value             # <<<<<<<<<<<<<<
 * 
 *     property mMatchesMu17Mu8Path:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMatchesMu17Ele8Path_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4242; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mMatchesMu17Ele8Path.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_19mMatchesMu17Mu8Path_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_19mMatchesMu17Mu8Path_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_19mMatchesMu17Mu8Path___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4245
 * 
 *     property mMatchesMu17Mu8Path:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchesMu17Mu8Path_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesMu17Mu8Path_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_19mMatchesMu17Mu8Path___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4246
 *     property mMatchesMu17Mu8Path:
 *         def __get__(self):
 *             self.mMatchesMu17Mu8Path_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMatchesMu17Mu8Path_value
 * 
 */
  __pyx_v_self->mMatchesMu17Mu8Path_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4247
 *         def __get__(self):
 *             self.mMatchesMu17Mu8Path_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesMu17Mu8Path_value             # <<<<<<<<<<<<<<
 * 
 *     property mMatchesMu17TrkMu8Path:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMatchesMu17Mu8Path_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4247; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mMatchesMu17Mu8Path.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_22mMatchesMu17TrkMu8Path_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_22mMatchesMu17TrkMu8Path_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_22mMatchesMu17TrkMu8Path___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4250
 * 
 *     property mMatchesMu17TrkMu8Path:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchesMu17TrkMu8Path_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesMu17TrkMu8Path_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_22mMatchesMu17TrkMu8Path___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4251
 *     property mMatchesMu17TrkMu8Path:
 *         def __get__(self):
 *             self.mMatchesMu17TrkMu8Path_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMatchesMu17TrkMu8Path_value
 * 
 */
  __pyx_v_self->mMatchesMu17TrkMu8Path_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4252
 *         def __get__(self):
 *             self.mMatchesMu17TrkMu8Path_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesMu17TrkMu8Path_value             # <<<<<<<<<<<<<<
 * 
 *     property mMatchesMu8Ele17Path:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMatchesMu17TrkMu8Path_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4252; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mMatchesMu17TrkMu8Path.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_20mMatchesMu8Ele17Path_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_20mMatchesMu8Ele17Path_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_20mMatchesMu8Ele17Path___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4255
 * 
 *     property mMatchesMu8Ele17Path:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMatchesMu8Ele17Path_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesMu8Ele17Path_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_20mMatchesMu8Ele17Path___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4256
 *     property mMatchesMu8Ele17Path:
 *         def __get__(self):
 *             self.mMatchesMu8Ele17Path_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMatchesMu8Ele17Path_value
 * 
 */
  __pyx_v_self->mMatchesMu8Ele17Path_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4257
 *         def __get__(self):
 *             self.mMatchesMu8Ele17Path_branch.GetEntry(self.localentry, 0)
 *             return self.mMatchesMu8Ele17Path_value             # <<<<<<<<<<<<<<
 * 
 *     property mMtToMET:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMatchesMu8Ele17Path_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4257; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mMatchesMu8Ele17Path.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8mMtToMET_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8mMtToMET_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_8mMtToMET___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4260
 * 
 *     property mMtToMET:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMtToMET_branch.GetEntry(self.localentry, 0)
 *             return self.mMtToMET_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8mMtToMET___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4261
 *     property mMtToMET:
 *         def __get__(self):
 *             self.mMtToMET_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMtToMET_value
 * 
 */
  __pyx_v_self->mMtToMET_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4262
 *         def __get__(self):
 *             self.mMtToMET_branch.GetEntry(self.localentry, 0)
 *             return self.mMtToMET_value             # <<<<<<<<<<<<<<
 * 
 *     property mMtToMVAMET:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMtToMET_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4262; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mMtToMET.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11mMtToMVAMET_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11mMtToMVAMET_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_11mMtToMVAMET___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4265
 * 
 *     property mMtToMVAMET:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMtToMVAMET_branch.GetEntry(self.localentry, 0)
 *             return self.mMtToMVAMET_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11mMtToMVAMET___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4266
 *     property mMtToMVAMET:
 *         def __get__(self):
 *             self.mMtToMVAMET_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMtToMVAMET_value
 * 
 */
  __pyx_v_self->mMtToMVAMET_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4267
 *         def __get__(self):
 *             self.mMtToMVAMET_branch.GetEntry(self.localentry, 0)
 *             return self.mMtToMVAMET_value             # <<<<<<<<<<<<<<
 * 
 *     property mMtToPFMET:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMtToMVAMET_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4267; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mMtToMVAMET.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10mMtToPFMET_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10mMtToPFMET_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_10mMtToPFMET___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4270
 * 
 *     property mMtToPFMET:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMtToPFMET_branch.GetEntry(self.localentry, 0)
 *             return self.mMtToPFMET_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10mMtToPFMET___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4271
 *     property mMtToPFMET:
 *         def __get__(self):
 *             self.mMtToPFMET_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMtToPFMET_value
 * 
 */
  __pyx_v_self->mMtToPFMET_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4272
 *         def __get__(self):
 *             self.mMtToPFMET_branch.GetEntry(self.localentry, 0)
 *             return self.mMtToPFMET_value             # <<<<<<<<<<<<<<
 * 
 *     property mMtToPfMet_Ty1:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMtToPFMET_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4272; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mMtToPFMET.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14mMtToPfMet_Ty1_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14mMtToPfMet_Ty1_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_14mMtToPfMet_Ty1___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4275
 * 
 *     property mMtToPfMet_Ty1:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMtToPfMet_Ty1_branch.GetEntry(self.localentry, 0)
 *             return self.mMtToPfMet_Ty1_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14mMtToPfMet_Ty1___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4276
 *     property mMtToPfMet_Ty1:
 *         def __get__(self):
 *             self.mMtToPfMet_Ty1_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMtToPfMet_Ty1_value
 * 
 */
  __pyx_v_self->mMtToPfMet_Ty1_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4277
 *         def __get__(self):
 *             self.mMtToPfMet_Ty1_branch.GetEntry(self.localentry, 0)
 *             return self.mMtToPfMet_Ty1_value             # <<<<<<<<<<<<<<
 * 
 *     property mMtToPfMet_jes:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMtToPfMet_Ty1_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4277; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mMtToPfMet_Ty1.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14mMtToPfMet_jes_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14mMtToPfMet_jes_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_14mMtToPfMet_jes___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4280
 * 
 *     property mMtToPfMet_jes:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMtToPfMet_jes_branch.GetEntry(self.localentry, 0)
 *             return self.mMtToPfMet_jes_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14mMtToPfMet_jes___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4281
 *     property mMtToPfMet_jes:
 *         def __get__(self):
 *             self.mMtToPfMet_jes_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMtToPfMet_jes_value
 * 
 */
  __pyx_v_self->mMtToPfMet_jes_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4282
 *         def __get__(self):
 *             self.mMtToPfMet_jes_branch.GetEntry(self.localentry, 0)
 *             return self.mMtToPfMet_jes_value             # <<<<<<<<<<<<<<
 * 
 *     property mMtToPfMet_mes:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMtToPfMet_jes_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4282; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mMtToPfMet_jes.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14mMtToPfMet_mes_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14mMtToPfMet_mes_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_14mMtToPfMet_mes___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4285
 * 
 *     property mMtToPfMet_mes:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMtToPfMet_mes_branch.GetEntry(self.localentry, 0)
 *             return self.mMtToPfMet_mes_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14mMtToPfMet_mes___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4286
 *     property mMtToPfMet_mes:
 *         def __get__(self):
 *             self.mMtToPfMet_mes_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMtToPfMet_mes_value
 * 
 */
  __pyx_v_self->mMtToPfMet_mes_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4287
 *         def __get__(self):
 *             self.mMtToPfMet_mes_branch.GetEntry(self.localentry, 0)
 *             return self.mMtToPfMet_mes_value             # <<<<<<<<<<<<<<
 * 
 *     property mMtToPfMet_tes:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMtToPfMet_mes_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4287; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mMtToPfMet_mes.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14mMtToPfMet_tes_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14mMtToPfMet_tes_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_14mMtToPfMet_tes___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4290
 * 
 *     property mMtToPfMet_tes:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMtToPfMet_tes_branch.GetEntry(self.localentry, 0)
 *             return self.mMtToPfMet_tes_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14mMtToPfMet_tes___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4291
 *     property mMtToPfMet_tes:
 *         def __get__(self):
 *             self.mMtToPfMet_tes_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMtToPfMet_tes_value
 * 
 */
  __pyx_v_self->mMtToPfMet_tes_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4292
 *         def __get__(self):
 *             self.mMtToPfMet_tes_branch.GetEntry(self.localentry, 0)
 *             return self.mMtToPfMet_tes_value             # <<<<<<<<<<<<<<
 * 
 *     property mMtToPfMet_ues:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMtToPfMet_tes_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4292; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mMtToPfMet_tes.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14mMtToPfMet_ues_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14mMtToPfMet_ues_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_14mMtToPfMet_ues___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4295
 * 
 *     property mMtToPfMet_ues:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMtToPfMet_ues_branch.GetEntry(self.localentry, 0)
 *             return self.mMtToPfMet_ues_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14mMtToPfMet_ues___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4296
 *     property mMtToPfMet_ues:
 *         def __get__(self):
 *             self.mMtToPfMet_ues_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMtToPfMet_ues_value
 * 
 */
  __pyx_v_self->mMtToPfMet_ues_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4297
 *         def __get__(self):
 *             self.mMtToPfMet_ues_branch.GetEntry(self.localentry, 0)
 *             return self.mMtToPfMet_ues_value             # <<<<<<<<<<<<<<
 * 
 *     property mMu17Ele8dZFilter:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMtToPfMet_ues_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4297; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mMtToPfMet_ues.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_17mMu17Ele8dZFilter_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_17mMu17Ele8dZFilter_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_17mMu17Ele8dZFilter___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4300
 * 
 *     property mMu17Ele8dZFilter:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMu17Ele8dZFilter_branch.GetEntry(self.localentry, 0)
 *             return self.mMu17Ele8dZFilter_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_17mMu17Ele8dZFilter___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4301
 *     property mMu17Ele8dZFilter:
 *         def __get__(self):
 *             self.mMu17Ele8dZFilter_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMu17Ele8dZFilter_value
 * 
 */
  __pyx_v_self->mMu17Ele8dZFilter_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4302
 *         def __get__(self):
 *             self.mMu17Ele8dZFilter_branch.GetEntry(self.localentry, 0)
 *             return self.mMu17Ele8dZFilter_value             # <<<<<<<<<<<<<<
 * 
 *     property mMuonHits:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMu17Ele8dZFilter_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4302; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mMu17Ele8dZFilter.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9mMuonHits_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9mMuonHits_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_9mMuonHits___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4305
 * 
 *     property mMuonHits:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mMuonHits_branch.GetEntry(self.localentry, 0)
 *             return self.mMuonHits_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9mMuonHits___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4306
 *     property mMuonHits:
 *         def __get__(self):
 *             self.mMuonHits_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mMuonHits_value
 * 
 */
  __pyx_v_self->mMuonHits_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4307
 *         def __get__(self):
 *             self.mMuonHits_branch.GetEntry(self.localentry, 0)
 *             return self.mMuonHits_value             # <<<<<<<<<<<<<<
 * 
 *     property mNormTrkChi2:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mMuonHits_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4307; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mMuonHits.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12mNormTrkChi2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12mNormTrkChi2_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_12mNormTrkChi2___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4310
 * 
 *     property mNormTrkChi2:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mNormTrkChi2_branch.GetEntry(self.localentry, 0)
 *             return self.mNormTrkChi2_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12mNormTrkChi2___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4311
 *     property mNormTrkChi2:
 *         def __get__(self):
 *             self.mNormTrkChi2_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mNormTrkChi2_value
 * 
 */
  __pyx_v_self->mNormTrkChi2_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4312
 *         def __get__(self):
 *             self.mNormTrkChi2_branch.GetEntry(self.localentry, 0)
 *             return self.mNormTrkChi2_value             # <<<<<<<<<<<<<<
 * 
 *     property mPFChargedIso:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mNormTrkChi2_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4312; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mNormTrkChi2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13mPFChargedIso_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13mPFChargedIso_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_13mPFChargedIso___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4315
 * 
 *     property mPFChargedIso:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPFChargedIso_branch.GetEntry(self.localentry, 0)
 *             return self.mPFChargedIso_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13mPFChargedIso___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4316
 *     property mPFChargedIso:
 *         def __get__(self):
 *             self.mPFChargedIso_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mPFChargedIso_value
 * 
 */
  __pyx_v_self->mPFChargedIso_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4317
 *         def __get__(self):
 *             self.mPFChargedIso_branch.GetEntry(self.localentry, 0)
 *             return self.mPFChargedIso_value             # <<<<<<<<<<<<<<
 * 
 *     property mPFIDTight:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mPFChargedIso_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4317; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mPFChargedIso.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10mPFIDTight_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10mPFIDTight_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_10mPFIDTight___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4320
 * 
 *     property mPFIDTight:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPFIDTight_branch.GetEntry(self.localentry, 0)
 *             return self.mPFIDTight_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10mPFIDTight___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4321
 *     property mPFIDTight:
 *         def __get__(self):
 *             self.mPFIDTight_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mPFIDTight_value
 * 
 */
  __pyx_v_self->mPFIDTight_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4322
 *         def __get__(self):
 *             self.mPFIDTight_branch.GetEntry(self.localentry, 0)
 *             return self.mPFIDTight_value             # <<<<<<<<<<<<<<
 * 
 *     property mPFNeutralIso:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mPFIDTight_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4322; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mPFIDTight.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13mPFNeutralIso_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13mPFNeutralIso_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_13mPFNeutralIso___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4325
 * 
 *     property mPFNeutralIso:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPFNeutralIso_branch.GetEntry(self.localentry, 0)
 *             return self.mPFNeutralIso_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13mPFNeutralIso___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4326
 *     property mPFNeutralIso:
 *         def __get__(self):
 *             self.mPFNeutralIso_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mPFNeutralIso_value
 * 
 */
  __pyx_v_self->mPFNeutralIso_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4327
 *         def __get__(self):
 *             self.mPFNeutralIso_branch.GetEntry(self.localentry, 0)
 *             return self.mPFNeutralIso_value             # <<<<<<<<<<<<<<
 * 
 *     property mPFPUChargedIso:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mPFNeutralIso_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4327; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mPFNeutralIso.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_15mPFPUChargedIso_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_15mPFPUChargedIso_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_15mPFPUChargedIso___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4330
 * 
 *     property mPFPUChargedIso:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPFPUChargedIso_branch.GetEntry(self.localentry, 0)
 *             return self.mPFPUChargedIso_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_15mPFPUChargedIso___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4331
 *     property mPFPUChargedIso:
 *         def __get__(self):
 *             self.mPFPUChargedIso_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mPFPUChargedIso_value
 * 
 */
  __pyx_v_self->mPFPUChargedIso_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4332
 *         def __get__(self):
 *             self.mPFPUChargedIso_branch.GetEntry(self.localentry, 0)
 *             return self.mPFPUChargedIso_value             # <<<<<<<<<<<<<<
 * 
 *     property mPFPhotonIso:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mPFPUChargedIso_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4332; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mPFPUChargedIso.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12mPFPhotonIso_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12mPFPhotonIso_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_12mPFPhotonIso___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4335
 * 
 *     property mPFPhotonIso:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPFPhotonIso_branch.GetEntry(self.localentry, 0)
 *             return self.mPFPhotonIso_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12mPFPhotonIso___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4336
 *     property mPFPhotonIso:
 *         def __get__(self):
 *             self.mPFPhotonIso_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mPFPhotonIso_value
 * 
 */
  __pyx_v_self->mPFPhotonIso_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4337
 *         def __get__(self):
 *             self.mPFPhotonIso_branch.GetEntry(self.localentry, 0)
 *             return self.mPFPhotonIso_value             # <<<<<<<<<<<<<<
 * 
 *     property mPVDXY:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mPFPhotonIso_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4337; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mPFPhotonIso.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6mPVDXY_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6mPVDXY_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_6mPVDXY___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4340
 * 
 *     property mPVDXY:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPVDXY_branch.GetEntry(self.localentry, 0)
 *             return self.mPVDXY_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6mPVDXY___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4341
 *     property mPVDXY:
 *         def __get__(self):
 *             self.mPVDXY_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mPVDXY_value
 * 
 */
  __pyx_v_self->mPVDXY_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4342
 *         def __get__(self):
 *             self.mPVDXY_branch.GetEntry(self.localentry, 0)
 *             return self.mPVDXY_value             # <<<<<<<<<<<<<<
 * 
 *     property mPVDZ:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mPVDXY_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4342; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mPVDXY.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_5mPVDZ_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_5mPVDZ_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_5mPVDZ___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4345
 * 
 *     property mPVDZ:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPVDZ_branch.GetEntry(self.localentry, 0)
 *             return self.mPVDZ_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_5mPVDZ___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4346
 *     property mPVDZ:
 *         def __get__(self):
 *             self.mPVDZ_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mPVDZ_value
 * 
 */
  __pyx_v_self->mPVDZ_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4347
 *         def __get__(self):
 *             self.mPVDZ_branch.GetEntry(self.localentry, 0)
 *             return self.mPVDZ_value             # <<<<<<<<<<<<<<
 * 
 *     property mPhi:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mPVDZ_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4347; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mPVDZ.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_4mPhi_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_4mPhi_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_4mPhi___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4350
 * 
 *     property mPhi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPhi_branch.GetEntry(self.localentry, 0)
 *             return self.mPhi_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_4mPhi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4351
 *     property mPhi:
 *         def __get__(self):
 *             self.mPhi_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mPhi_value
 * 
 */
  __pyx_v_self->mPhi_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4352
 *         def __get__(self):
 *             self.mPhi_branch.GetEntry(self.localentry, 0)
 *             return self.mPhi_value             # <<<<<<<<<<<<<<
 * 
 *     property mPhiRochCor2011A:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mPhi_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4352; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mPhi.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16mPhiRochCor2011A_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16mPhiRochCor2011A_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_16mPhiRochCor2011A___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4355
 * 
 *     property mPhiRochCor2011A:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPhiRochCor2011A_branch.GetEntry(self.localentry, 0)
 *             return self.mPhiRochCor2011A_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16mPhiRochCor2011A___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4356
 *     property mPhiRochCor2011A:
 *         def __get__(self):
 *             self.mPhiRochCor2011A_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mPhiRochCor2011A_value
 * 
 */
  __pyx_v_self->mPhiRochCor2011A_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4357
 *         def __get__(self):
 *             self.mPhiRochCor2011A_branch.GetEntry(self.localentry, 0)
 *             return self.mPhiRochCor2011A_value             # <<<<<<<<<<<<<<
 * 
 *     property mPhiRochCor2011B:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mPhiRochCor2011A_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4357; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mPhiRochCor2011A.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16mPhiRochCor2011B_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16mPhiRochCor2011B_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_16mPhiRochCor2011B___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4360
 * 
 *     property mPhiRochCor2011B:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPhiRochCor2011B_branch.GetEntry(self.localentry, 0)
 *             return self.mPhiRochCor2011B_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16mPhiRochCor2011B___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4361
 *     property mPhiRochCor2011B:
 *         def __get__(self):
 *             self.mPhiRochCor2011B_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mPhiRochCor2011B_value
 * 
 */
  __pyx_v_self->mPhiRochCor2011B_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4362
 *         def __get__(self):
 *             self.mPhiRochCor2011B_branch.GetEntry(self.localentry, 0)
 *             return self.mPhiRochCor2011B_value             # <<<<<<<<<<<<<<
 * 
 *     property mPhiRochCor2012:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mPhiRochCor2011B_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4362; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mPhiRochCor2011B.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_15mPhiRochCor2012_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_15mPhiRochCor2012_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_15mPhiRochCor2012___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4365
 * 
 *     property mPhiRochCor2012:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPhiRochCor2012_branch.GetEntry(self.localentry, 0)
 *             return self.mPhiRochCor2012_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_15mPhiRochCor2012___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4366
 *     property mPhiRochCor2012:
 *         def __get__(self):
 *             self.mPhiRochCor2012_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mPhiRochCor2012_value
 * 
 */
  __pyx_v_self->mPhiRochCor2012_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4367
 *         def __get__(self):
 *             self.mPhiRochCor2012_branch.GetEntry(self.localentry, 0)
 *             return self.mPhiRochCor2012_value             # <<<<<<<<<<<<<<
 * 
 *     property mPixHits:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mPhiRochCor2012_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4367; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mPhiRochCor2012.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8mPixHits_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8mPixHits_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_8mPixHits___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4370
 * 
 *     property mPixHits:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPixHits_branch.GetEntry(self.localentry, 0)
 *             return self.mPixHits_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8mPixHits___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4371
 *     property mPixHits:
 *         def __get__(self):
 *             self.mPixHits_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mPixHits_value
 * 
 */
  __pyx_v_self->mPixHits_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4372
 *         def __get__(self):
 *             self.mPixHits_branch.GetEntry(self.localentry, 0)
 *             return self.mPixHits_value             # <<<<<<<<<<<<<<
 * 
 *     property mPt:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mPixHits_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4372; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mPixHits.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3mPt_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3mPt_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_3mPt___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4375
 * 
 *     property mPt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPt_branch.GetEntry(self.localentry, 0)
 *             return self.mPt_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3mPt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4376
 *     property mPt:
 *         def __get__(self):
 *             self.mPt_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mPt_value
 * 
 */
  __pyx_v_self->mPt_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4377
 *         def __get__(self):
 *             self.mPt_branch.GetEntry(self.localentry, 0)
 *             return self.mPt_value             # <<<<<<<<<<<<<<
 * 
 *     property mPtRochCor2011A:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mPt_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4377; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mPt.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_15mPtRochCor2011A_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_15mPtRochCor2011A_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_15mPtRochCor2011A___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4380
 * 
 *     property mPtRochCor2011A:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPtRochCor2011A_branch.GetEntry(self.localentry, 0)
 *             return self.mPtRochCor2011A_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_15mPtRochCor2011A___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4381
 *     property mPtRochCor2011A:
 *         def __get__(self):
 *             self.mPtRochCor2011A_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mPtRochCor2011A_value
 * 
 */
  __pyx_v_self->mPtRochCor2011A_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4382
 *         def __get__(self):
 *             self.mPtRochCor2011A_branch.GetEntry(self.localentry, 0)
 *             return self.mPtRochCor2011A_value             # <<<<<<<<<<<<<<
 * 
 *     property mPtRochCor2011B:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mPtRochCor2011A_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4382; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mPtRochCor2011A.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_15mPtRochCor2011B_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_15mPtRochCor2011B_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_15mPtRochCor2011B___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4385
 * 
 *     property mPtRochCor2011B:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPtRochCor2011B_branch.GetEntry(self.localentry, 0)
 *             return self.mPtRochCor2011B_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_15mPtRochCor2011B___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4386
 *     property mPtRochCor2011B:
 *         def __get__(self):
 *             self.mPtRochCor2011B_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mPtRochCor2011B_value
 * 
 */
  __pyx_v_self->mPtRochCor2011B_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4387
 *         def __get__(self):
 *             self.mPtRochCor2011B_branch.GetEntry(self.localentry, 0)
 *             return self.mPtRochCor2011B_value             # <<<<<<<<<<<<<<
 * 
 *     property mPtRochCor2012:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mPtRochCor2011B_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4387; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mPtRochCor2011B.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14mPtRochCor2012_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14mPtRochCor2012_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_14mPtRochCor2012___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4390
 * 
 *     property mPtRochCor2012:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPtRochCor2012_branch.GetEntry(self.localentry, 0)
 *             return self.mPtRochCor2012_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14mPtRochCor2012___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4391
 *     property mPtRochCor2012:
 *         def __get__(self):
 *             self.mPtRochCor2012_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mPtRochCor2012_value
 * 
 */
  __pyx_v_self->mPtRochCor2012_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4392
 *         def __get__(self):
 *             self.mPtRochCor2012_branch.GetEntry(self.localentry, 0)
 *             return self.mPtRochCor2012_value             # <<<<<<<<<<<<<<
 * 
 *     property mPtUncorr:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mPtRochCor2012_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4392; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mPtRochCor2012.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9mPtUncorr_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9mPtUncorr_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_9mPtUncorr___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4395
 * 
 *     property mPtUncorr:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mPtUncorr_branch.GetEntry(self.localentry, 0)
 *             return self.mPtUncorr_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9mPtUncorr___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4396
 *     property mPtUncorr:
 *         def __get__(self):
 *             self.mPtUncorr_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mPtUncorr_value
 * 
 */
  __pyx_v_self->mPtUncorr_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4397
 *         def __get__(self):
 *             self.mPtUncorr_branch.GetEntry(self.localentry, 0)
 *             return self.mPtUncorr_value             # <<<<<<<<<<<<<<
 * 
 *     property mRelPFIsoDB:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mPtUncorr_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4397; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mPtUncorr.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11mRelPFIsoDB_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11mRelPFIsoDB_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_11mRelPFIsoDB___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4400
 * 
 *     property mRelPFIsoDB:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mRelPFIsoDB_branch.GetEntry(self.localentry, 0)
 *             return self.mRelPFIsoDB_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11mRelPFIsoDB___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4401
 *     property mRelPFIsoDB:
 *         def __get__(self):
 *             self.mRelPFIsoDB_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mRelPFIsoDB_value
 * 
 */
  __pyx_v_self->mRelPFIsoDB_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4402
 *         def __get__(self):
 *             self.mRelPFIsoDB_branch.GetEntry(self.localentry, 0)
 *             return self.mRelPFIsoDB_value             # <<<<<<<<<<<<<<
 * 
 *     property mRhoHZG2011:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mRelPFIsoDB_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4402; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mRelPFIsoDB.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11mRhoHZG2011_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11mRhoHZG2011_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_11mRhoHZG2011___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4405
 * 
 *     property mRhoHZG2011:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mRhoHZG2011_branch.GetEntry(self.localentry, 0)
 *             return self.mRhoHZG2011_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11mRhoHZG2011___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4406
 *     property mRhoHZG2011:
 *         def __get__(self):
 *             self.mRhoHZG2011_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mRhoHZG2011_value
 * 
 */
  __pyx_v_self->mRhoHZG2011_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4407
 *         def __get__(self):
 *             self.mRhoHZG2011_branch.GetEntry(self.localentry, 0)
 *             return self.mRhoHZG2011_value             # <<<<<<<<<<<<<<
 * 
 *     property mRhoHZG2012:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mRhoHZG2011_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4407; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mRhoHZG2011.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11mRhoHZG2012_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11mRhoHZG2012_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_11mRhoHZG2012___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4410
 * 
 *     property mRhoHZG2012:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mRhoHZG2012_branch.GetEntry(self.localentry, 0)
 *             return self.mRhoHZG2012_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11mRhoHZG2012___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4411
 *     property mRhoHZG2012:
 *         def __get__(self):
 *             self.mRhoHZG2012_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mRhoHZG2012_value
 * 
 */
  __pyx_v_self->mRhoHZG2012_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4412
 *         def __get__(self):
 *             self.mRhoHZG2012_branch.GetEntry(self.localentry, 0)
 *             return self.mRhoHZG2012_value             # <<<<<<<<<<<<<<
 * 
 *     property mSingleMu13L3Filtered13:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mRhoHZG2012_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4412; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mRhoHZG2012.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_23mSingleMu13L3Filtered13_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_23mSingleMu13L3Filtered13_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_23mSingleMu13L3Filtered13___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4415
 * 
 *     property mSingleMu13L3Filtered13:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mSingleMu13L3Filtered13_branch.GetEntry(self.localentry, 0)
 *             return self.mSingleMu13L3Filtered13_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_23mSingleMu13L3Filtered13___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4416
 *     property mSingleMu13L3Filtered13:
 *         def __get__(self):
 *             self.mSingleMu13L3Filtered13_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mSingleMu13L3Filtered13_value
 * 
 */
  __pyx_v_self->mSingleMu13L3Filtered13_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4417
 *         def __get__(self):
 *             self.mSingleMu13L3Filtered13_branch.GetEntry(self.localentry, 0)
 *             return self.mSingleMu13L3Filtered13_value             # <<<<<<<<<<<<<<
 * 
 *     property mSingleMu13L3Filtered17:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mSingleMu13L3Filtered13_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4417; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mSingleMu13L3Filtered13.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_23mSingleMu13L3Filtered17_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_23mSingleMu13L3Filtered17_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_23mSingleMu13L3Filtered17___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4420
 * 
 *     property mSingleMu13L3Filtered17:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mSingleMu13L3Filtered17_branch.GetEntry(self.localentry, 0)
 *             return self.mSingleMu13L3Filtered17_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_23mSingleMu13L3Filtered17___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4421
 *     property mSingleMu13L3Filtered17:
 *         def __get__(self):
 *             self.mSingleMu13L3Filtered17_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mSingleMu13L3Filtered17_value
 * 
 */
  __pyx_v_self->mSingleMu13L3Filtered17_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4422
 *         def __get__(self):
 *             self.mSingleMu13L3Filtered17_branch.GetEntry(self.localentry, 0)
 *             return self.mSingleMu13L3Filtered17_value             # <<<<<<<<<<<<<<
 * 
 *     property mTkLayersWithMeasurement:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mSingleMu13L3Filtered17_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4422; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mSingleMu13L3Filtered17.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_24mTkLayersWithMeasurement_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_24mTkLayersWithMeasurement_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_24mTkLayersWithMeasurement___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4425
 * 
 *     property mTkLayersWithMeasurement:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mTkLayersWithMeasurement_branch.GetEntry(self.localentry, 0)
 *             return self.mTkLayersWithMeasurement_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_24mTkLayersWithMeasurement___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4426
 *     property mTkLayersWithMeasurement:
 *         def __get__(self):
 *             self.mTkLayersWithMeasurement_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mTkLayersWithMeasurement_value
 * 
 */
  __pyx_v_self->mTkLayersWithMeasurement_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4427
 *         def __get__(self):
 *             self.mTkLayersWithMeasurement_branch.GetEntry(self.localentry, 0)
 *             return self.mTkLayersWithMeasurement_value             # <<<<<<<<<<<<<<
 * 
 *     property mToMETDPhi:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mTkLayersWithMeasurement_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4427; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mTkLayersWithMeasurement.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10mToMETDPhi_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10mToMETDPhi_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_10mToMETDPhi___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4430
 * 
 *     property mToMETDPhi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mToMETDPhi_branch.GetEntry(self.localentry, 0)
 *             return self.mToMETDPhi_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10mToMETDPhi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4431
 *     property mToMETDPhi:
 *         def __get__(self):
 *             self.mToMETDPhi_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mToMETDPhi_value
 * 
 */
  __pyx_v_self->mToMETDPhi_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4432
 *         def __get__(self):
 *             self.mToMETDPhi_branch.GetEntry(self.localentry, 0)
 *             return self.mToMETDPhi_value             # <<<<<<<<<<<<<<
 * 
 *     property mTypeCode:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mToMETDPhi_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4432; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mToMETDPhi.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9mTypeCode_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9mTypeCode_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_9mTypeCode___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4435
 * 
 *     property mTypeCode:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mTypeCode_branch.GetEntry(self.localentry, 0)
 *             return self.mTypeCode_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9mTypeCode___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4436
 *     property mTypeCode:
 *         def __get__(self):
 *             self.mTypeCode_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mTypeCode_value
 * 
 */
  __pyx_v_self->mTypeCode_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4437
 *         def __get__(self):
 *             self.mTypeCode_branch.GetEntry(self.localentry, 0)
 *             return self.mTypeCode_value             # <<<<<<<<<<<<<<
 * 
 *     property mVBTFID:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(__pyx_v_self->mTypeCode_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4437; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mTypeCode.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_7mVBTFID_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_7mVBTFID_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_7mVBTFID___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4440
 * 
 *     property mVBTFID:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mVBTFID_branch.GetEntry(self.localentry, 0)
 *             return self.mVBTFID_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_7mVBTFID___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4441
 *     property mVBTFID:
 *         def __get__(self):
 *             self.mVBTFID_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mVBTFID_value
 * 
 */
  __pyx_v_self->mVBTFID_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4442
 *         def __get__(self):
 *             self.mVBTFID_branch.GetEntry(self.localentry, 0)
 *             return self.mVBTFID_value             # <<<<<<<<<<<<<<
 * 
 *     property mVZ:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mVBTFID_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4442; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mVBTFID.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3mVZ_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3mVZ_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_3mVZ___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4445
 * 
 *     property mVZ:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mVZ_branch.GetEntry(self.localentry, 0)
 *             return self.mVZ_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3mVZ___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4446
 *     property mVZ:
 *         def __get__(self):
 *             self.mVZ_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mVZ_value
 * 
 */
  __pyx_v_self->mVZ_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4447
 *         def __get__(self):
 *             self.mVZ_branch.GetEntry(self.localentry, 0)
 *             return self.mVZ_value             # <<<<<<<<<<<<<<
 * 
 *     property mWWID:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mVZ_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4447; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mVZ.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_5mWWID_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_5mWWID_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_5mWWID___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4450
 * 
 *     property mWWID:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mWWID_branch.GetEntry(self.localentry, 0)
 *             return self.mWWID_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_5mWWID___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4451
 *     property mWWID:
 *         def __get__(self):
 *             self.mWWID_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mWWID_value
 * 
 */
  __pyx_v_self->mWWID_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4452
 *         def __get__(self):
 *             self.mWWID_branch.GetEntry(self.localentry, 0)
 *             return self.mWWID_value             # <<<<<<<<<<<<<<
 * 
 *     property m_t_CosThetaStar:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mWWID_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4452; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mWWID.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16m_t_CosThetaStar_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16m_t_CosThetaStar_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_16m_t_CosThetaStar___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4455
 * 
 *     property m_t_CosThetaStar:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.m_t_CosThetaStar_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_CosThetaStar_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16m_t_CosThetaStar___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4456
 *     property m_t_CosThetaStar:
 *         def __get__(self):
 *             self.m_t_CosThetaStar_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.m_t_CosThetaStar_value
 * 
 */
  __pyx_v_self->m_t_CosThetaStar_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4457
 *         def __get__(self):
 *             self.m_t_CosThetaStar_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_CosThetaStar_value             # <<<<<<<<<<<<<<
 * 
 *     property m_t_DPhi:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->m_t_CosThetaStar_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4457; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.m_t_CosThetaStar.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8m_t_DPhi_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8m_t_DPhi_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_8m_t_DPhi___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4460
 * 
 *     property m_t_DPhi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.m_t_DPhi_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_DPhi_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8m_t_DPhi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4461
 *     property m_t_DPhi:
 *         def __get__(self):
 *             self.m_t_DPhi_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.m_t_DPhi_value
 * 
 */
  __pyx_v_self->m_t_DPhi_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4462
 *         def __get__(self):
 *             self.m_t_DPhi_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_DPhi_value             # <<<<<<<<<<<<<<
 * 
 *     property m_t_DR:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->m_t_DPhi_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4462; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.m_t_DPhi.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6m_t_DR_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6m_t_DR_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_6m_t_DR___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4465
 * 
 *     property m_t_DR:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.m_t_DR_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_DR_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6m_t_DR___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4466
 *     property m_t_DR:
 *         def __get__(self):
 *             self.m_t_DR_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.m_t_DR_value
 * 
 */
  __pyx_v_self->m_t_DR_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4467
 *         def __get__(self):
 *             self.m_t_DR_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_DR_value             # <<<<<<<<<<<<<<
 * 
 *     property m_t_Mass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->m_t_DR_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4467; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.m_t_DR.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8m_t_Mass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8m_t_Mass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_8m_t_Mass___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4470
 * 
 *     property m_t_Mass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.m_t_Mass_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_Mass_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8m_t_Mass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4471
 *     property m_t_Mass:
 *         def __get__(self):
 *             self.m_t_Mass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.m_t_Mass_value
 * 
 */
  __pyx_v_self->m_t_Mass_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4472
 *         def __get__(self):
 *             self.m_t_Mass_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_Mass_value             # <<<<<<<<<<<<<<
 * 
 *     property m_t_PZeta:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->m_t_Mass_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4472; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.m_t_Mass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9m_t_PZeta_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9m_t_PZeta_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_9m_t_PZeta___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4475
 * 
 *     property m_t_PZeta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.m_t_PZeta_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_PZeta_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9m_t_PZeta___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4476
 *     property m_t_PZeta:
 *         def __get__(self):
 *             self.m_t_PZeta_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.m_t_PZeta_value
 * 
 */
  __pyx_v_self->m_t_PZeta_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4477
 *         def __get__(self):
 *             self.m_t_PZeta_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_PZeta_value             # <<<<<<<<<<<<<<
 * 
 *     property m_t_PZetaVis:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->m_t_PZeta_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4477; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.m_t_PZeta.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12m_t_PZetaVis_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12m_t_PZetaVis_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_12m_t_PZetaVis___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4480
 * 
 *     property m_t_PZetaVis:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.m_t_PZetaVis_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_PZetaVis_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12m_t_PZetaVis___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4481
 *     property m_t_PZetaVis:
 *         def __get__(self):
 *             self.m_t_PZetaVis_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.m_t_PZetaVis_value
 * 
 */
  __pyx_v_self->m_t_PZetaVis_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4482
 *         def __get__(self):
 *             self.m_t_PZetaVis_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_PZetaVis_value             # <<<<<<<<<<<<<<
 * 
 *     property m_t_Pt:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->m_t_PZetaVis_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4482; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.m_t_PZetaVis.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6m_t_Pt_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6m_t_Pt_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_6m_t_Pt___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4485
 * 
 *     property m_t_Pt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.m_t_Pt_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_Pt_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6m_t_Pt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4486
 *     property m_t_Pt:
 *         def __get__(self):
 *             self.m_t_Pt_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.m_t_Pt_value
 * 
 */
  __pyx_v_self->m_t_Pt_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4487
 *         def __get__(self):
 *             self.m_t_Pt_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_Pt_value             # <<<<<<<<<<<<<<
 * 
 *     property m_t_SS:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->m_t_Pt_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4487; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.m_t_Pt.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6m_t_SS_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6m_t_SS_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_6m_t_SS___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4490
 * 
 *     property m_t_SS:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.m_t_SS_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_SS_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6m_t_SS___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4491
 *     property m_t_SS:
 *         def __get__(self):
 *             self.m_t_SS_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.m_t_SS_value
 * 
 */
  __pyx_v_self->m_t_SS_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4492
 *         def __get__(self):
 *             self.m_t_SS_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_SS_value             # <<<<<<<<<<<<<<
 * 
 *     property m_t_ToMETDPhi_Ty1:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->m_t_SS_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4492; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.m_t_SS.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_17m_t_ToMETDPhi_Ty1_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_17m_t_ToMETDPhi_Ty1_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_17m_t_ToMETDPhi_Ty1___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4495
 * 
 *     property m_t_ToMETDPhi_Ty1:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.m_t_ToMETDPhi_Ty1_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_ToMETDPhi_Ty1_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_17m_t_ToMETDPhi_Ty1___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4496
 *     property m_t_ToMETDPhi_Ty1:
 *         def __get__(self):
 *             self.m_t_ToMETDPhi_Ty1_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.m_t_ToMETDPhi_Ty1_value
 * 
 */
  __pyx_v_self->m_t_ToMETDPhi_Ty1_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4497
 *         def __get__(self):
 *             self.m_t_ToMETDPhi_Ty1_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_ToMETDPhi_Ty1_value             # <<<<<<<<<<<<<<
 * 
 *     property m_t_Zcompat:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->m_t_ToMETDPhi_Ty1_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4497; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.m_t_ToMETDPhi_Ty1.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11m_t_Zcompat_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11m_t_Zcompat_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_11m_t_Zcompat___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4500
 * 
 *     property m_t_Zcompat:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.m_t_Zcompat_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_Zcompat_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11m_t_Zcompat___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4501
 *     property m_t_Zcompat:
 *         def __get__(self):
 *             self.m_t_Zcompat_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.m_t_Zcompat_value
 * 
 */
  __pyx_v_self->m_t_Zcompat_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4502
 *         def __get__(self):
 *             self.m_t_Zcompat_branch.GetEntry(self.localentry, 0)
 *             return self.m_t_Zcompat_value             # <<<<<<<<<<<<<<
 * 
 *     property mu17ele8Group:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->m_t_Zcompat_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4502; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.m_t_Zcompat.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13mu17ele8Group_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13mu17ele8Group_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_13mu17ele8Group___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4505
 * 
 *     property mu17ele8Group:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mu17ele8Group_branch.GetEntry(self.localentry, 0)
 *             return self.mu17ele8Group_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13mu17ele8Group___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4506
 *     property mu17ele8Group:
 *         def __get__(self):
 *             self.mu17ele8Group_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mu17ele8Group_value
 * 
 */
  __pyx_v_self->mu17ele8Group_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4507
 *         def __get__(self):
 *             self.mu17ele8Group_branch.GetEntry(self.localentry, 0)
 *             return self.mu17ele8Group_value             # <<<<<<<<<<<<<<
 * 
 *     property mu17ele8Pass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mu17ele8Group_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4507; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mu17ele8Group.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12mu17ele8Pass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12mu17ele8Pass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_12mu17ele8Pass___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4510
 * 
 *     property mu17ele8Pass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mu17ele8Pass_branch.GetEntry(self.localentry, 0)
 *             return self.mu17ele8Pass_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12mu17ele8Pass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4511
 *     property mu17ele8Pass:
 *         def __get__(self):
 *             self.mu17ele8Pass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mu17ele8Pass_value
 * 
 */
  __pyx_v_self->mu17ele8Pass_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4512
 *         def __get__(self):
 *             self.mu17ele8Pass_branch.GetEntry(self.localentry, 0)
 *             return self.mu17ele8Pass_value             # <<<<<<<<<<<<<<
 * 
 *     property mu17ele8Prescale:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mu17ele8Pass_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4512; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mu17ele8Pass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16mu17ele8Prescale_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16mu17ele8Prescale_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_16mu17ele8Prescale___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4515
 * 
 *     property mu17ele8Prescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mu17ele8Prescale_branch.GetEntry(self.localentry, 0)
 *             return self.mu17ele8Prescale_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16mu17ele8Prescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4516
 *     property mu17ele8Prescale:
 *         def __get__(self):
 *             self.mu17ele8Prescale_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mu17ele8Prescale_value
 * 
 */
  __pyx_v_self->mu17ele8Prescale_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4517
 *         def __get__(self):
 *             self.mu17ele8Prescale_branch.GetEntry(self.localentry, 0)
 *             return self.mu17ele8Prescale_value             # <<<<<<<<<<<<<<
 * 
 *     property mu17ele8isoGroup:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mu17ele8Prescale_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4517; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mu17ele8Prescale.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16mu17ele8isoGroup_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16mu17ele8isoGroup_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_16mu17ele8isoGroup___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4520
 * 
 *     property mu17ele8isoGroup:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mu17ele8isoGroup_branch.GetEntry(self.localentry, 0)
 *             return self.mu17ele8isoGroup_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16mu17ele8isoGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4521
 *     property mu17ele8isoGroup:
 *         def __get__(self):
 *             self.mu17ele8isoGroup_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mu17ele8isoGroup_value
 * 
 */
  __pyx_v_self->mu17ele8isoGroup_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4522
 *         def __get__(self):
 *             self.mu17ele8isoGroup_branch.GetEntry(self.localentry, 0)
 *             return self.mu17ele8isoGroup_value             # <<<<<<<<<<<<<<
 * 
 *     property mu17ele8isoPass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mu17ele8isoGroup_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4522; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mu17ele8isoGroup.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_15mu17ele8isoPass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_15mu17ele8isoPass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_15mu17ele8isoPass___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4525
 * 
 *     property mu17ele8isoPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mu17ele8isoPass_branch.GetEntry(self.localentry, 0)
 *             return self.mu17ele8isoPass_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_15mu17ele8isoPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4526
 *     property mu17ele8isoPass:
 *         def __get__(self):
 *             self.mu17ele8isoPass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mu17ele8isoPass_value
 * 
 */
  __pyx_v_self->mu17ele8isoPass_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4527
 *         def __get__(self):
 *             self.mu17ele8isoPass_branch.GetEntry(self.localentry, 0)
 *             return self.mu17ele8isoPass_value             # <<<<<<<<<<<<<<
 * 
 *     property mu17ele8isoPrescale:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mu17ele8isoPass_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4527; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mu17ele8isoPass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_19mu17ele8isoPrescale_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_19mu17ele8isoPrescale_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_19mu17ele8isoPrescale___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4530
 * 
 *     property mu17ele8isoPrescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mu17ele8isoPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.mu17ele8isoPrescale_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_19mu17ele8isoPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4531
 *     property mu17ele8isoPrescale:
 *         def __get__(self):
 *             self.mu17ele8isoPrescale_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mu17ele8isoPrescale_value
 * 
 */
  __pyx_v_self->mu17ele8isoPrescale_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4532
 *         def __get__(self):
 *             self.mu17ele8isoPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.mu17ele8isoPrescale_value             # <<<<<<<<<<<<<<
 * 
 *     property mu17mu8Group:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mu17ele8isoPrescale_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4532; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mu17ele8isoPrescale.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12mu17mu8Group_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12mu17mu8Group_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_12mu17mu8Group___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4535
 * 
 *     property mu17mu8Group:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mu17mu8Group_branch.GetEntry(self.localentry, 0)
 *             return self.mu17mu8Group_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12mu17mu8Group___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4536
 *     property mu17mu8Group:
 *         def __get__(self):
 *             self.mu17mu8Group_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mu17mu8Group_value
 * 
 */
  __pyx_v_self->mu17mu8Group_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4537
 *         def __get__(self):
 *             self.mu17mu8Group_branch.GetEntry(self.localentry, 0)
 *             return self.mu17mu8Group_value             # <<<<<<<<<<<<<<
 * 
 *     property mu17mu8Pass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mu17mu8Group_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4537; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mu17mu8Group.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11mu17mu8Pass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11mu17mu8Pass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_11mu17mu8Pass___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4540
 * 
 *     property mu17mu8Pass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mu17mu8Pass_branch.GetEntry(self.localentry, 0)
 *             return self.mu17mu8Pass_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11mu17mu8Pass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4541
 *     property mu17mu8Pass:
 *         def __get__(self):
 *             self.mu17mu8Pass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mu17mu8Pass_value
 * 
 */
  __pyx_v_self->mu17mu8Pass_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4542
 *         def __get__(self):
 *             self.mu17mu8Pass_branch.GetEntry(self.localentry, 0)
 *             return self.mu17mu8Pass_value             # <<<<<<<<<<<<<<
 * 
 *     property mu17mu8Prescale:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mu17mu8Pass_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4542; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mu17mu8Pass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_15mu17mu8Prescale_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_15mu17mu8Prescale_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_15mu17mu8Prescale___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4545
 * 
 *     property mu17mu8Prescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mu17mu8Prescale_branch.GetEntry(self.localentry, 0)
 *             return self.mu17mu8Prescale_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_15mu17mu8Prescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4546
 *     property mu17mu8Prescale:
 *         def __get__(self):
 *             self.mu17mu8Prescale_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mu17mu8Prescale_value
 * 
 */
  __pyx_v_self->mu17mu8Prescale_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4547
 *         def __get__(self):
 *             self.mu17mu8Prescale_branch.GetEntry(self.localentry, 0)
 *             return self.mu17mu8Prescale_value             # <<<<<<<<<<<<<<
 * 
 *     property mu8ele17Group:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mu17mu8Prescale_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4547; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mu17mu8Prescale.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13mu8ele17Group_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13mu8ele17Group_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_13mu8ele17Group___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4550
 * 
 *     property mu8ele17Group:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mu8ele17Group_branch.GetEntry(self.localentry, 0)
 *             return self.mu8ele17Group_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13mu8ele17Group___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4551
 *     property mu8ele17Group:
 *         def __get__(self):
 *             self.mu8ele17Group_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mu8ele17Group_value
 * 
 */
  __pyx_v_self->mu8ele17Group_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4552
 *         def __get__(self):
 *             self.mu8ele17Group_branch.GetEntry(self.localentry, 0)
 *             return self.mu8ele17Group_value             # <<<<<<<<<<<<<<
 * 
 *     property mu8ele17Pass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mu8ele17Group_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4552; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mu8ele17Group.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12mu8ele17Pass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12mu8ele17Pass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_12mu8ele17Pass___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4555
 * 
 *     property mu8ele17Pass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mu8ele17Pass_branch.GetEntry(self.localentry, 0)
 *             return self.mu8ele17Pass_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12mu8ele17Pass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4556
 *     property mu8ele17Pass:
 *         def __get__(self):
 *             self.mu8ele17Pass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mu8ele17Pass_value
 * 
 */
  __pyx_v_self->mu8ele17Pass_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4557
 *         def __get__(self):
 *             self.mu8ele17Pass_branch.GetEntry(self.localentry, 0)
 *             return self.mu8ele17Pass_value             # <<<<<<<<<<<<<<
 * 
 *     property mu8ele17Prescale:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mu8ele17Pass_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4557; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mu8ele17Pass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16mu8ele17Prescale_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16mu8ele17Prescale_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_16mu8ele17Prescale___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4560
 * 
 *     property mu8ele17Prescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mu8ele17Prescale_branch.GetEntry(self.localentry, 0)
 *             return self.mu8ele17Prescale_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16mu8ele17Prescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4561
 *     property mu8ele17Prescale:
 *         def __get__(self):
 *             self.mu8ele17Prescale_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mu8ele17Prescale_value
 * 
 */
  __pyx_v_self->mu8ele17Prescale_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4562
 *         def __get__(self):
 *             self.mu8ele17Prescale_branch.GetEntry(self.localentry, 0)
 *             return self.mu8ele17Prescale_value             # <<<<<<<<<<<<<<
 * 
 *     property mu8ele17isoGroup:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mu8ele17Prescale_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4562; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mu8ele17Prescale.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16mu8ele17isoGroup_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16mu8ele17isoGroup_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_16mu8ele17isoGroup___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4565
 * 
 *     property mu8ele17isoGroup:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mu8ele17isoGroup_branch.GetEntry(self.localentry, 0)
 *             return self.mu8ele17isoGroup_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16mu8ele17isoGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4566
 *     property mu8ele17isoGroup:
 *         def __get__(self):
 *             self.mu8ele17isoGroup_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mu8ele17isoGroup_value
 * 
 */
  __pyx_v_self->mu8ele17isoGroup_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4567
 *         def __get__(self):
 *             self.mu8ele17isoGroup_branch.GetEntry(self.localentry, 0)
 *             return self.mu8ele17isoGroup_value             # <<<<<<<<<<<<<<
 * 
 *     property mu8ele17isoPass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mu8ele17isoGroup_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4567; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mu8ele17isoGroup.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_15mu8ele17isoPass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_15mu8ele17isoPass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_15mu8ele17isoPass___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4570
 * 
 *     property mu8ele17isoPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mu8ele17isoPass_branch.GetEntry(self.localentry, 0)
 *             return self.mu8ele17isoPass_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_15mu8ele17isoPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4571
 *     property mu8ele17isoPass:
 *         def __get__(self):
 *             self.mu8ele17isoPass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mu8ele17isoPass_value
 * 
 */
  __pyx_v_self->mu8ele17isoPass_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4572
 *         def __get__(self):
 *             self.mu8ele17isoPass_branch.GetEntry(self.localentry, 0)
 *             return self.mu8ele17isoPass_value             # <<<<<<<<<<<<<<
 * 
 *     property mu8ele17isoPrescale:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mu8ele17isoPass_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4572; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mu8ele17isoPass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_19mu8ele17isoPrescale_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_19mu8ele17isoPrescale_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_19mu8ele17isoPrescale___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4575
 * 
 *     property mu8ele17isoPrescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mu8ele17isoPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.mu8ele17isoPrescale_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_19mu8ele17isoPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4576
 *     property mu8ele17isoPrescale:
 *         def __get__(self):
 *             self.mu8ele17isoPrescale_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mu8ele17isoPrescale_value
 * 
 */
  __pyx_v_self->mu8ele17isoPrescale_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4577
 *         def __get__(self):
 *             self.mu8ele17isoPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.mu8ele17isoPrescale_value             # <<<<<<<<<<<<<<
 * 
 *     property muGlbIsoVetoPt10:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mu8ele17isoPrescale_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4577; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mu8ele17isoPrescale.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16muGlbIsoVetoPt10_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16muGlbIsoVetoPt10_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_16muGlbIsoVetoPt10___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4580
 * 
 *     property muGlbIsoVetoPt10:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.muGlbIsoVetoPt10_branch.GetEntry(self.localentry, 0)
 *             return self.muGlbIsoVetoPt10_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16muGlbIsoVetoPt10___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4581
 *     property muGlbIsoVetoPt10:
 *         def __get__(self):
 *             self.muGlbIsoVetoPt10_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.muGlbIsoVetoPt10_value
 * 
 */
  __pyx_v_self->muGlbIsoVetoPt10_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4582
 *         def __get__(self):
 *             self.muGlbIsoVetoPt10_branch.GetEntry(self.localentry, 0)
 *             return self.muGlbIsoVetoPt10_value             # <<<<<<<<<<<<<<
 * 
 *     property muTauGroup:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->muGlbIsoVetoPt10_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4582; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.muGlbIsoVetoPt10.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10muTauGroup_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10muTauGroup_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_10muTauGroup___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4585
 * 
 *     property muTauGroup:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.muTauGroup_branch.GetEntry(self.localentry, 0)
 *             return self.muTauGroup_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10muTauGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4586
 *     property muTauGroup:
 *         def __get__(self):
 *             self.muTauGroup_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.muTauGroup_value
 * 
 */
  __pyx_v_self->muTauGroup_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4587
 *         def __get__(self):
 *             self.muTauGroup_branch.GetEntry(self.localentry, 0)
 *             return self.muTauGroup_value             # <<<<<<<<<<<<<<
 * 
 *     property muTauPass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->muTauGroup_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4587; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.muTauGroup.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9muTauPass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9muTauPass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_9muTauPass___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4590
 * 
 *     property muTauPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.muTauPass_branch.GetEntry(self.localentry, 0)
 *             return self.muTauPass_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9muTauPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4591
 *     property muTauPass:
 *         def __get__(self):
 *             self.muTauPass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.muTauPass_value
 * 
 */
  __pyx_v_self->muTauPass_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4592
 *         def __get__(self):
 *             self.muTauPass_branch.GetEntry(self.localentry, 0)
 *             return self.muTauPass_value             # <<<<<<<<<<<<<<
 * 
 *     property muTauPrescale:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->muTauPass_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4592; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.muTauPass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13muTauPrescale_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13muTauPrescale_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_13muTauPrescale___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4595
 * 
 *     property muTauPrescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.muTauPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.muTauPrescale_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13muTauPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4596
 *     property muTauPrescale:
 *         def __get__(self):
 *             self.muTauPrescale_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.muTauPrescale_value
 * 
 */
  __pyx_v_self->muTauPrescale_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4597
 *         def __get__(self):
 *             self.muTauPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.muTauPrescale_value             # <<<<<<<<<<<<<<
 * 
 *     property muTauTestGroup:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->muTauPrescale_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4597; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.muTauPrescale.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14muTauTestGroup_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14muTauTestGroup_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_14muTauTestGroup___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4600
 * 
 *     property muTauTestGroup:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.muTauTestGroup_branch.GetEntry(self.localentry, 0)
 *             return self.muTauTestGroup_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14muTauTestGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4601
 *     property muTauTestGroup:
 *         def __get__(self):
 *             self.muTauTestGroup_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.muTauTestGroup_value
 * 
 */
  __pyx_v_self->muTauTestGroup_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4602
 *         def __get__(self):
 *             self.muTauTestGroup_branch.GetEntry(self.localentry, 0)
 *             return self.muTauTestGroup_value             # <<<<<<<<<<<<<<
 * 
 *     property muTauTestPass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->muTauTestGroup_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4602; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.muTauTestGroup.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13muTauTestPass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13muTauTestPass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_13muTauTestPass___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4605
 * 
 *     property muTauTestPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.muTauTestPass_branch.GetEntry(self.localentry, 0)
 *             return self.muTauTestPass_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13muTauTestPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4606
 *     property muTauTestPass:
 *         def __get__(self):
 *             self.muTauTestPass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.muTauTestPass_value
 * 
 */
  __pyx_v_self->muTauTestPass_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4607
 *         def __get__(self):
 *             self.muTauTestPass_branch.GetEntry(self.localentry, 0)
 *             return self.muTauTestPass_value             # <<<<<<<<<<<<<<
 * 
 *     property muTauTestPrescale:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->muTauTestPass_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4607; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.muTauTestPass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_17muTauTestPrescale_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_17muTauTestPrescale_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_17muTauTestPrescale___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4610
 * 
 *     property muTauTestPrescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.muTauTestPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.muTauTestPrescale_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_17muTauTestPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4611
 *     property muTauTestPrescale:
 *         def __get__(self):
 *             self.muTauTestPrescale_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.muTauTestPrescale_value
 * 
 */
  __pyx_v_self->muTauTestPrescale_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4612
 *         def __get__(self):
 *             self.muTauTestPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.muTauTestPrescale_value             # <<<<<<<<<<<<<<
 * 
 *     property muVetoPt15IsoIdVtx:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->muTauTestPrescale_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4612; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.muTauTestPrescale.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_18muVetoPt15IsoIdVtx_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_18muVetoPt15IsoIdVtx_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_18muVetoPt15IsoIdVtx___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4615
 * 
 *     property muVetoPt15IsoIdVtx:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.muVetoPt15IsoIdVtx_branch.GetEntry(self.localentry, 0)
 *             return self.muVetoPt15IsoIdVtx_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_18muVetoPt15IsoIdVtx___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4616
 *     property muVetoPt15IsoIdVtx:
 *         def __get__(self):
 *             self.muVetoPt15IsoIdVtx_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.muVetoPt15IsoIdVtx_value
 * 
 */
  __pyx_v_self->muVetoPt15IsoIdVtx_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4617
 *         def __get__(self):
 *             self.muVetoPt15IsoIdVtx_branch.GetEntry(self.localentry, 0)
 *             return self.muVetoPt15IsoIdVtx_value             # <<<<<<<<<<<<<<
 * 
 *     property muVetoPt5:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->muVetoPt15IsoIdVtx_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4617; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.muVetoPt15IsoIdVtx.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9muVetoPt5_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9muVetoPt5_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_9muVetoPt5___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4620
 * 
 *     property muVetoPt5:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.muVetoPt5_branch.GetEntry(self.localentry, 0)
 *             return self.muVetoPt5_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9muVetoPt5___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4621
 *     property muVetoPt5:
 *         def __get__(self):
 *             self.muVetoPt5_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.muVetoPt5_value
 * 
 */
  __pyx_v_self->muVetoPt5_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4622
 *         def __get__(self):
 *             self.muVetoPt5_branch.GetEntry(self.localentry, 0)
 *             return self.muVetoPt5_value             # <<<<<<<<<<<<<<
 * 
 *     property muVetoPt5IsoIdVtx:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->muVetoPt5_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4622; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.muVetoPt5.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_17muVetoPt5IsoIdVtx_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_17muVetoPt5IsoIdVtx_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_17muVetoPt5IsoIdVtx___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4625
 * 
 *     property muVetoPt5IsoIdVtx:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.muVetoPt5IsoIdVtx_branch.GetEntry(self.localentry, 0)
 *             return self.muVetoPt5IsoIdVtx_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_17muVetoPt5IsoIdVtx___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4626
 *     property muVetoPt5IsoIdVtx:
 *         def __get__(self):
 *             self.muVetoPt5IsoIdVtx_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.muVetoPt5IsoIdVtx_value
 * 
 */
  __pyx_v_self->muVetoPt5IsoIdVtx_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4627
 *         def __get__(self):
 *             self.muVetoPt5IsoIdVtx_branch.GetEntry(self.localentry, 0)
 *             return self.muVetoPt5IsoIdVtx_value             # <<<<<<<<<<<<<<
 * 
 *     property mva_metEt:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->muVetoPt5IsoIdVtx_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4627; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.muVetoPt5IsoIdVtx.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9mva_metEt_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9mva_metEt_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_9mva_metEt___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4630
 * 
 *     property mva_metEt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mva_metEt_branch.GetEntry(self.localentry, 0)
 *             return self.mva_metEt_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9mva_metEt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4631
 *     property mva_metEt:
 *         def __get__(self):
 *             self.mva_metEt_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mva_metEt_value
 * 
 */
  __pyx_v_self->mva_metEt_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4632
 *         def __get__(self):
 *             self.mva_metEt_branch.GetEntry(self.localentry, 0)
 *             return self.mva_metEt_value             # <<<<<<<<<<<<<<
 * 
 *     property mva_metPhi:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mva_metEt_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4632; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mva_metEt.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10mva_metPhi_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10mva_metPhi_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_10mva_metPhi___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4635
 * 
 *     property mva_metPhi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.mva_metPhi_branch.GetEntry(self.localentry, 0)
 *             return self.mva_metPhi_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10mva_metPhi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4636
 *     property mva_metPhi:
 *         def __get__(self):
 *             self.mva_metPhi_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.mva_metPhi_value
 * 
 */
  __pyx_v_self->mva_metPhi_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4637
 *         def __get__(self):
 *             self.mva_metPhi_branch.GetEntry(self.localentry, 0)
 *             return self.mva_metPhi_value             # <<<<<<<<<<<<<<
 * 
 *     property nTruePU:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->mva_metPhi_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4637; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.mva_metPhi.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_7nTruePU_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_7nTruePU_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_7nTruePU___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4640
 * 
 *     property nTruePU:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.nTruePU_branch.GetEntry(self.localentry, 0)
 *             return self.nTruePU_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_7nTruePU___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4641
 *     property nTruePU:
 *         def __get__(self):
 *             self.nTruePU_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.nTruePU_value
 * 
 */
  __pyx_v_self->nTruePU_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4642
 *         def __get__(self):
 *             self.nTruePU_branch.GetEntry(self.localentry, 0)
 *             return self.nTruePU_value             # <<<<<<<<<<<<<<
 * 
 *     property nvtx:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->nTruePU_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4642; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.nTruePU.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_4nvtx_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_4nvtx_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_4nvtx___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4645
 * 
 *     property nvtx:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.nvtx_branch.GetEntry(self.localentry, 0)
 *             return self.nvtx_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_4nvtx___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4646
 *     property nvtx:
 *         def __get__(self):
 *             self.nvtx_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.nvtx_value
 * 
 */
  __pyx_v_self->nvtx_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4647
 *         def __get__(self):
 *             self.nvtx_branch.GetEntry(self.localentry, 0)
 *             return self.nvtx_value             # <<<<<<<<<<<<<<
 * 
 *     property pfMetEt:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->nvtx_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4647; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.nvtx.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_7pfMetEt_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_7pfMetEt_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_7pfMetEt___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4650
 * 
 *     property pfMetEt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pfMetEt_branch.GetEntry(self.localentry, 0)
 *             return self.pfMetEt_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_7pfMetEt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4651
 *     property pfMetEt:
 *         def __get__(self):
 *             self.pfMetEt_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pfMetEt_value
 * 
 */
  __pyx_v_self->pfMetEt_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4652
 *         def __get__(self):
 *             self.pfMetEt_branch.GetEntry(self.localentry, 0)
 *             return self.pfMetEt_value             # <<<<<<<<<<<<<<
 * 
 *     property pfMetPhi:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->pfMetEt_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4652; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.pfMetEt.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8pfMetPhi_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8pfMetPhi_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_8pfMetPhi___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4655
 * 
 *     property pfMetPhi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pfMetPhi_branch.GetEntry(self.localentry, 0)
 *             return self.pfMetPhi_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8pfMetPhi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4656
 *     property pfMetPhi:
 *         def __get__(self):
 *             self.pfMetPhi_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pfMetPhi_value
 * 
 */
  __pyx_v_self->pfMetPhi_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4657
 *         def __get__(self):
 *             self.pfMetPhi_branch.GetEntry(self.localentry, 0)
 *             return self.pfMetPhi_value             # <<<<<<<<<<<<<<
 * 
 *     property pfMet_jes_Et:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->pfMetPhi_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4657; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.pfMetPhi.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12pfMet_jes_Et_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12pfMet_jes_Et_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_12pfMet_jes_Et___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4660
 * 
 *     property pfMet_jes_Et:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pfMet_jes_Et_branch.GetEntry(self.localentry, 0)
 *             return self.pfMet_jes_Et_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12pfMet_jes_Et___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4661
 *     property pfMet_jes_Et:
 *         def __get__(self):
 *             self.pfMet_jes_Et_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pfMet_jes_Et_value
 * 
 */
  __pyx_v_self->pfMet_jes_Et_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4662
 *         def __get__(self):
 *             self.pfMet_jes_Et_branch.GetEntry(self.localentry, 0)
 *             return self.pfMet_jes_Et_value             # <<<<<<<<<<<<<<
 * 
 *     property pfMet_jes_Phi:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->pfMet_jes_Et_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4662; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.pfMet_jes_Et.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13pfMet_jes_Phi_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13pfMet_jes_Phi_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_13pfMet_jes_Phi___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4665
 * 
 *     property pfMet_jes_Phi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pfMet_jes_Phi_branch.GetEntry(self.localentry, 0)
 *             return self.pfMet_jes_Phi_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13pfMet_jes_Phi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4666
 *     property pfMet_jes_Phi:
 *         def __get__(self):
 *             self.pfMet_jes_Phi_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pfMet_jes_Phi_value
 * 
 */
  __pyx_v_self->pfMet_jes_Phi_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4667
 *         def __get__(self):
 *             self.pfMet_jes_Phi_branch.GetEntry(self.localentry, 0)
 *             return self.pfMet_jes_Phi_value             # <<<<<<<<<<<<<<
 * 
 *     property pfMet_mes_Et:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->pfMet_jes_Phi_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4667; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.pfMet_jes_Phi.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12pfMet_mes_Et_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12pfMet_mes_Et_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_12pfMet_mes_Et___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4670
 * 
 *     property pfMet_mes_Et:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pfMet_mes_Et_branch.GetEntry(self.localentry, 0)
 *             return self.pfMet_mes_Et_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12pfMet_mes_Et___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4671
 *     property pfMet_mes_Et:
 *         def __get__(self):
 *             self.pfMet_mes_Et_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pfMet_mes_Et_value
 * 
 */
  __pyx_v_self->pfMet_mes_Et_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4672
 *         def __get__(self):
 *             self.pfMet_mes_Et_branch.GetEntry(self.localentry, 0)
 *             return self.pfMet_mes_Et_value             # <<<<<<<<<<<<<<
 * 
 *     property pfMet_mes_Phi:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->pfMet_mes_Et_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4672; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.pfMet_mes_Et.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13pfMet_mes_Phi_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13pfMet_mes_Phi_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_13pfMet_mes_Phi___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4675
 * 
 *     property pfMet_mes_Phi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pfMet_mes_Phi_branch.GetEntry(self.localentry, 0)
 *             return self.pfMet_mes_Phi_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13pfMet_mes_Phi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4676
 *     property pfMet_mes_Phi:
 *         def __get__(self):
 *             self.pfMet_mes_Phi_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pfMet_mes_Phi_value
 * 
 */
  __pyx_v_self->pfMet_mes_Phi_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4677
 *         def __get__(self):
 *             self.pfMet_mes_Phi_branch.GetEntry(self.localentry, 0)
 *             return self.pfMet_mes_Phi_value             # <<<<<<<<<<<<<<
 * 
 *     property pfMet_tes_Et:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->pfMet_mes_Phi_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4677; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.pfMet_mes_Phi.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12pfMet_tes_Et_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12pfMet_tes_Et_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_12pfMet_tes_Et___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4680
 * 
 *     property pfMet_tes_Et:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pfMet_tes_Et_branch.GetEntry(self.localentry, 0)
 *             return self.pfMet_tes_Et_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12pfMet_tes_Et___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4681
 *     property pfMet_tes_Et:
 *         def __get__(self):
 *             self.pfMet_tes_Et_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pfMet_tes_Et_value
 * 
 */
  __pyx_v_self->pfMet_tes_Et_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4682
 *         def __get__(self):
 *             self.pfMet_tes_Et_branch.GetEntry(self.localentry, 0)
 *             return self.pfMet_tes_Et_value             # <<<<<<<<<<<<<<
 * 
 *     property pfMet_tes_Phi:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->pfMet_tes_Et_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4682; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.pfMet_tes_Et.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13pfMet_tes_Phi_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13pfMet_tes_Phi_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_13pfMet_tes_Phi___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4685
 * 
 *     property pfMet_tes_Phi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pfMet_tes_Phi_branch.GetEntry(self.localentry, 0)
 *             return self.pfMet_tes_Phi_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13pfMet_tes_Phi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4686
 *     property pfMet_tes_Phi:
 *         def __get__(self):
 *             self.pfMet_tes_Phi_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pfMet_tes_Phi_value
 * 
 */
  __pyx_v_self->pfMet_tes_Phi_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4687
 *         def __get__(self):
 *             self.pfMet_tes_Phi_branch.GetEntry(self.localentry, 0)
 *             return self.pfMet_tes_Phi_value             # <<<<<<<<<<<<<<
 * 
 *     property pfMet_ues_Et:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->pfMet_tes_Phi_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4687; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.pfMet_tes_Phi.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12pfMet_ues_Et_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12pfMet_ues_Et_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_12pfMet_ues_Et___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4690
 * 
 *     property pfMet_ues_Et:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pfMet_ues_Et_branch.GetEntry(self.localentry, 0)
 *             return self.pfMet_ues_Et_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12pfMet_ues_Et___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4691
 *     property pfMet_ues_Et:
 *         def __get__(self):
 *             self.pfMet_ues_Et_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pfMet_ues_Et_value
 * 
 */
  __pyx_v_self->pfMet_ues_Et_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4692
 *         def __get__(self):
 *             self.pfMet_ues_Et_branch.GetEntry(self.localentry, 0)
 *             return self.pfMet_ues_Et_value             # <<<<<<<<<<<<<<
 * 
 *     property pfMet_ues_Phi:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->pfMet_ues_Et_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4692; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.pfMet_ues_Et.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13pfMet_ues_Phi_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13pfMet_ues_Phi_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_13pfMet_ues_Phi___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4695
 * 
 *     property pfMet_ues_Phi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pfMet_ues_Phi_branch.GetEntry(self.localentry, 0)
 *             return self.pfMet_ues_Phi_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13pfMet_ues_Phi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4696
 *     property pfMet_ues_Phi:
 *         def __get__(self):
 *             self.pfMet_ues_Phi_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pfMet_ues_Phi_value
 * 
 */
  __pyx_v_self->pfMet_ues_Phi_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4697
 *         def __get__(self):
 *             self.pfMet_ues_Phi_branch.GetEntry(self.localentry, 0)
 *             return self.pfMet_ues_Phi_value             # <<<<<<<<<<<<<<
 * 
 *     property processID:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->pfMet_ues_Phi_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4697; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.pfMet_ues_Phi.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9processID_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9processID_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_9processID___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4700
 * 
 *     property processID:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.processID_branch.GetEntry(self.localentry, 0)
 *             return self.processID_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9processID___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4701
 *     property processID:
 *         def __get__(self):
 *             self.processID_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.processID_value
 * 
 */
  __pyx_v_self->processID_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4702
 *         def __get__(self):
 *             self.processID_branch.GetEntry(self.localentry, 0)
 *             return self.processID_value             # <<<<<<<<<<<<<<
 * 
 *     property pvChi2:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->processID_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4702; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.processID.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6pvChi2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6pvChi2_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_6pvChi2___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4705
 * 
 *     property pvChi2:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvChi2_branch.GetEntry(self.localentry, 0)
 *             return self.pvChi2_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6pvChi2___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4706
 *     property pvChi2:
 *         def __get__(self):
 *             self.pvChi2_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pvChi2_value
 * 
 */
  __pyx_v_self->pvChi2_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4707
 *         def __get__(self):
 *             self.pvChi2_branch.GetEntry(self.localentry, 0)
 *             return self.pvChi2_value             # <<<<<<<<<<<<<<
 * 
 *     property pvDX:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->pvChi2_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4707; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.pvChi2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_4pvDX_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_4pvDX_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_4pvDX___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4710
 * 
 *     property pvDX:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvDX_branch.GetEntry(self.localentry, 0)
 *             return self.pvDX_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_4pvDX___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4711
 *     property pvDX:
 *         def __get__(self):
 *             self.pvDX_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pvDX_value
 * 
 */
  __pyx_v_self->pvDX_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4712
 *         def __get__(self):
 *             self.pvDX_branch.GetEntry(self.localentry, 0)
 *             return self.pvDX_value             # <<<<<<<<<<<<<<
 * 
 *     property pvDY:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->pvDX_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4712; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.pvDX.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_4pvDY_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_4pvDY_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_4pvDY___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4715
 * 
 *     property pvDY:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvDY_branch.GetEntry(self.localentry, 0)
 *             return self.pvDY_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_4pvDY___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4716
 *     property pvDY:
 *         def __get__(self):
 *             self.pvDY_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pvDY_value
 * 
 */
  __pyx_v_self->pvDY_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4717
 *         def __get__(self):
 *             self.pvDY_branch.GetEntry(self.localentry, 0)
 *             return self.pvDY_value             # <<<<<<<<<<<<<<
 * 
 *     property pvDZ:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->pvDY_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4717; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.pvDY.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_4pvDZ_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_4pvDZ_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_4pvDZ___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4720
 * 
 *     property pvDZ:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvDZ_branch.GetEntry(self.localentry, 0)
 *             return self.pvDZ_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_4pvDZ___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4721
 *     property pvDZ:
 *         def __get__(self):
 *             self.pvDZ_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pvDZ_value
 * 
 */
  __pyx_v_self->pvDZ_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4722
 *         def __get__(self):
 *             self.pvDZ_branch.GetEntry(self.localentry, 0)
 *             return self.pvDZ_value             # <<<<<<<<<<<<<<
 * 
 *     property pvIsFake:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->pvDZ_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4722; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.pvDZ.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8pvIsFake_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8pvIsFake_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_8pvIsFake___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4725
 * 
 *     property pvIsFake:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvIsFake_branch.GetEntry(self.localentry, 0)
 *             return self.pvIsFake_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8pvIsFake___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4726
 *     property pvIsFake:
 *         def __get__(self):
 *             self.pvIsFake_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pvIsFake_value
 * 
 */
  __pyx_v_self->pvIsFake_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4727
 *         def __get__(self):
 *             self.pvIsFake_branch.GetEntry(self.localentry, 0)
 *             return self.pvIsFake_value             # <<<<<<<<<<<<<<
 * 
 *     property pvIsValid:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(__pyx_v_self->pvIsFake_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4727; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.pvIsFake.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9pvIsValid_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9pvIsValid_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_9pvIsValid___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4730
 * 
 *     property pvIsValid:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvIsValid_branch.GetEntry(self.localentry, 0)
 *             return self.pvIsValid_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9pvIsValid___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4731
 *     property pvIsValid:
 *         def __get__(self):
 *             self.pvIsValid_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pvIsValid_value
 * 
 */
  __pyx_v_self->pvIsValid_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4732
 *         def __get__(self):
 *             self.pvIsValid_branch.GetEntry(self.localentry, 0)
 *             return self.pvIsValid_value             # <<<<<<<<<<<<<<
 * 
 *     property pvNormChi2:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(__pyx_v_self->pvIsValid_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4732; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.pvIsValid.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10pvNormChi2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10pvNormChi2_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_10pvNormChi2___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4735
 * 
 *     property pvNormChi2:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvNormChi2_branch.GetEntry(self.localentry, 0)
 *             return self.pvNormChi2_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10pvNormChi2___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4736
 *     property pvNormChi2:
 *         def __get__(self):
 *             self.pvNormChi2_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pvNormChi2_value
 * 
 */
  __pyx_v_self->pvNormChi2_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4737
 *         def __get__(self):
 *             self.pvNormChi2_branch.GetEntry(self.localentry, 0)
 *             return self.pvNormChi2_value             # <<<<<<<<<<<<<<
 * 
 *     property pvX:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->pvNormChi2_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4737; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.pvNormChi2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3pvX_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3pvX_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_3pvX___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4740
 * 
 *     property pvX:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvX_branch.GetEntry(self.localentry, 0)
 *             return self.pvX_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3pvX___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4741
 *     property pvX:
 *         def __get__(self):
 *             self.pvX_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pvX_value
 * 
 */
  __pyx_v_self->pvX_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4742
 *         def __get__(self):
 *             self.pvX_branch.GetEntry(self.localentry, 0)
 *             return self.pvX_value             # <<<<<<<<<<<<<<
 * 
 *     property pvY:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->pvX_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4742; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.pvX.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3pvY_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3pvY_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_3pvY___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4745
 * 
 *     property pvY:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvY_branch.GetEntry(self.localentry, 0)
 *             return self.pvY_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3pvY___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4746
 *     property pvY:
 *         def __get__(self):
 *             self.pvY_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pvY_value
 * 
 */
  __pyx_v_self->pvY_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4747
 *         def __get__(self):
 *             self.pvY_branch.GetEntry(self.localentry, 0)
 *             return self.pvY_value             # <<<<<<<<<<<<<<
 * 
 *     property pvZ:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->pvY_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4747; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.pvY.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3pvZ_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3pvZ_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_3pvZ___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4750
 * 
 *     property pvZ:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvZ_branch.GetEntry(self.localentry, 0)
 *             return self.pvZ_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3pvZ___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4751
 *     property pvZ:
 *         def __get__(self):
 *             self.pvZ_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pvZ_value
 * 
 */
  __pyx_v_self->pvZ_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4752
 *         def __get__(self):
 *             self.pvZ_branch.GetEntry(self.localentry, 0)
 *             return self.pvZ_value             # <<<<<<<<<<<<<<
 * 
 *     property pvndof:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->pvZ_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4752; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.pvZ.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6pvndof_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6pvndof_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_6pvndof___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4755
 * 
 *     property pvndof:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.pvndof_branch.GetEntry(self.localentry, 0)
 *             return self.pvndof_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6pvndof___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4756
 *     property pvndof:
 *         def __get__(self):
 *             self.pvndof_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.pvndof_value
 * 
 */
  __pyx_v_self->pvndof_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4757
 *         def __get__(self):
 *             self.pvndof_branch.GetEntry(self.localentry, 0)
 *             return self.pvndof_value             # <<<<<<<<<<<<<<
 * 
 *     property recoilDaught:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->pvndof_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4757; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.pvndof.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12recoilDaught_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12recoilDaught_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_12recoilDaught___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4760
 * 
 *     property recoilDaught:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.recoilDaught_branch.GetEntry(self.localentry, 0)
 *             return self.recoilDaught_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12recoilDaught___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4761
 *     property recoilDaught:
 *         def __get__(self):
 *             self.recoilDaught_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.recoilDaught_value
 * 
 */
  __pyx_v_self->recoilDaught_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4762
 *         def __get__(self):
 *             self.recoilDaught_branch.GetEntry(self.localentry, 0)
 *             return self.recoilDaught_value             # <<<<<<<<<<<<<<
 * 
 *     property recoilWithMet:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->recoilDaught_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4762; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.recoilDaught.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13recoilWithMet_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13recoilWithMet_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_13recoilWithMet___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4765
 * 
 *     property recoilWithMet:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.recoilWithMet_branch.GetEntry(self.localentry, 0)
 *             return self.recoilWithMet_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13recoilWithMet___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4766
 *     property recoilWithMet:
 *         def __get__(self):
 *             self.recoilWithMet_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.recoilWithMet_value
 * 
 */
  __pyx_v_self->recoilWithMet_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4767
 *         def __get__(self):
 *             self.recoilWithMet_branch.GetEntry(self.localentry, 0)
 *             return self.recoilWithMet_value             # <<<<<<<<<<<<<<
 * 
 *     property rho:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->recoilWithMet_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4767; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.recoilWithMet.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3rho_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3rho_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_3rho___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4770
 * 
 *     property rho:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.rho_branch.GetEntry(self.localentry, 0)
 *             return self.rho_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3rho___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4771
 *     property rho:
 *         def __get__(self):
 *             self.rho_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.rho_value
 * 
 */
  __pyx_v_self->rho_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4772
 *         def __get__(self):
 *             self.rho_branch.GetEntry(self.localentry, 0)
 *             return self.rho_value             # <<<<<<<<<<<<<<
 * 
 *     property run:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->rho_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4772; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.rho.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3run_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3run_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_3run___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4775
 * 
 *     property run:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.run_branch.GetEntry(self.localentry, 0)
 *             return self.run_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3run___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4776
 *     property run:
 *         def __get__(self):
 *             self.run_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.run_value
 * 
 */
  __pyx_v_self->run_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4777
 *         def __get__(self):
 *             self.run_branch.GetEntry(self.localentry, 0)
 *             return self.run_value             # <<<<<<<<<<<<<<
 * 
 *     property singleEGroup:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(__pyx_v_self->run_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4777; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.run.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12singleEGroup_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12singleEGroup_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_12singleEGroup___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4780
 * 
 *     property singleEGroup:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleEGroup_branch.GetEntry(self.localentry, 0)
 *             return self.singleEGroup_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12singleEGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4781
 *     property singleEGroup:
 *         def __get__(self):
 *             self.singleEGroup_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.singleEGroup_value
 * 
 */
  __pyx_v_self->singleEGroup_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4782
 *         def __get__(self):
 *             self.singleEGroup_branch.GetEntry(self.localentry, 0)
 *             return self.singleEGroup_value             # <<<<<<<<<<<<<<
 * 
 *     property singleEPFMTGroup:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->singleEGroup_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4782; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.singleEGroup.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16singleEPFMTGroup_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16singleEPFMTGroup_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_16singleEPFMTGroup___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4785
 * 
 *     property singleEPFMTGroup:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleEPFMTGroup_branch.GetEntry(self.localentry, 0)
 *             return self.singleEPFMTGroup_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16singleEPFMTGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4786
 *     property singleEPFMTGroup:
 *         def __get__(self):
 *             self.singleEPFMTGroup_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.singleEPFMTGroup_value
 * 
 */
  __pyx_v_self->singleEPFMTGroup_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4787
 *         def __get__(self):
 *             self.singleEPFMTGroup_branch.GetEntry(self.localentry, 0)
 *             return self.singleEPFMTGroup_value             # <<<<<<<<<<<<<<
 * 
 *     property singleEPFMTPass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->singleEPFMTGroup_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4787; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.singleEPFMTGroup.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_15singleEPFMTPass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_15singleEPFMTPass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_15singleEPFMTPass___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4790
 * 
 *     property singleEPFMTPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleEPFMTPass_branch.GetEntry(self.localentry, 0)
 *             return self.singleEPFMTPass_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_15singleEPFMTPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4791
 *     property singleEPFMTPass:
 *         def __get__(self):
 *             self.singleEPFMTPass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.singleEPFMTPass_value
 * 
 */
  __pyx_v_self->singleEPFMTPass_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4792
 *         def __get__(self):
 *             self.singleEPFMTPass_branch.GetEntry(self.localentry, 0)
 *             return self.singleEPFMTPass_value             # <<<<<<<<<<<<<<
 * 
 *     property singleEPFMTPrescale:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->singleEPFMTPass_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4792; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.singleEPFMTPass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_19singleEPFMTPrescale_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_19singleEPFMTPrescale_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_19singleEPFMTPrescale___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4795
 * 
 *     property singleEPFMTPrescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleEPFMTPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.singleEPFMTPrescale_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_19singleEPFMTPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4796
 *     property singleEPFMTPrescale:
 *         def __get__(self):
 *             self.singleEPFMTPrescale_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.singleEPFMTPrescale_value
 * 
 */
  __pyx_v_self->singleEPFMTPrescale_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4797
 *         def __get__(self):
 *             self.singleEPFMTPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.singleEPFMTPrescale_value             # <<<<<<<<<<<<<<
 * 
 *     property singleEPass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->singleEPFMTPrescale_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4797; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.singleEPFMTPrescale.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11singleEPass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11singleEPass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_11singleEPass___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4800
 * 
 *     property singleEPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleEPass_branch.GetEntry(self.localentry, 0)
 *             return self.singleEPass_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11singleEPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4801
 *     property singleEPass:
 *         def __get__(self):
 *             self.singleEPass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.singleEPass_value
 * 
 */
  __pyx_v_self->singleEPass_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4802
 *         def __get__(self):
 *             self.singleEPass_branch.GetEntry(self.localentry, 0)
 *             return self.singleEPass_value             # <<<<<<<<<<<<<<
 * 
 *     property singleEPrescale:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->singleEPass_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4802; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.singleEPass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_15singleEPrescale_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_15singleEPrescale_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_15singleEPrescale___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4805
 * 
 *     property singleEPrescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleEPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.singleEPrescale_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_15singleEPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4806
 *     property singleEPrescale:
 *         def __get__(self):
 *             self.singleEPrescale_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.singleEPrescale_value
 * 
 */
  __pyx_v_self->singleEPrescale_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4807
 *         def __get__(self):
 *             self.singleEPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.singleEPrescale_value             # <<<<<<<<<<<<<<
 * 
 *     property singleMuGroup:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->singleEPrescale_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4807; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.singleEPrescale.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13singleMuGroup_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13singleMuGroup_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_13singleMuGroup___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4810
 * 
 *     property singleMuGroup:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleMuGroup_branch.GetEntry(self.localentry, 0)
 *             return self.singleMuGroup_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13singleMuGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4811
 *     property singleMuGroup:
 *         def __get__(self):
 *             self.singleMuGroup_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.singleMuGroup_value
 * 
 */
  __pyx_v_self->singleMuGroup_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4812
 *         def __get__(self):
 *             self.singleMuGroup_branch.GetEntry(self.localentry, 0)
 *             return self.singleMuGroup_value             # <<<<<<<<<<<<<<
 * 
 *     property singleMuPass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->singleMuGroup_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4812; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.singleMuGroup.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12singleMuPass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12singleMuPass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_12singleMuPass___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4815
 * 
 *     property singleMuPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleMuPass_branch.GetEntry(self.localentry, 0)
 *             return self.singleMuPass_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12singleMuPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4816
 *     property singleMuPass:
 *         def __get__(self):
 *             self.singleMuPass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.singleMuPass_value
 * 
 */
  __pyx_v_self->singleMuPass_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4817
 *         def __get__(self):
 *             self.singleMuPass_branch.GetEntry(self.localentry, 0)
 *             return self.singleMuPass_value             # <<<<<<<<<<<<<<
 * 
 *     property singleMuPrescale:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->singleMuPass_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4817; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.singleMuPass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16singleMuPrescale_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16singleMuPrescale_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_16singleMuPrescale___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4820
 * 
 *     property singleMuPrescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singleMuPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.singleMuPrescale_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16singleMuPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4821
 *     property singleMuPrescale:
 *         def __get__(self):
 *             self.singleMuPrescale_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.singleMuPrescale_value
 * 
 */
  __pyx_v_self->singleMuPrescale_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4822
 *         def __get__(self):
 *             self.singleMuPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.singleMuPrescale_value             # <<<<<<<<<<<<<<
 * 
 *     property singlePhoGroup:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->singleMuPrescale_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4822; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.singleMuPrescale.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14singlePhoGroup_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14singlePhoGroup_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_14singlePhoGroup___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4825
 * 
 *     property singlePhoGroup:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singlePhoGroup_branch.GetEntry(self.localentry, 0)
 *             return self.singlePhoGroup_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14singlePhoGroup___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4826
 *     property singlePhoGroup:
 *         def __get__(self):
 *             self.singlePhoGroup_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.singlePhoGroup_value
 * 
 */
  __pyx_v_self->singlePhoGroup_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4827
 *         def __get__(self):
 *             self.singlePhoGroup_branch.GetEntry(self.localentry, 0)
 *             return self.singlePhoGroup_value             # <<<<<<<<<<<<<<
 * 
 *     property singlePhoPass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->singlePhoGroup_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4827; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.singlePhoGroup.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13singlePhoPass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13singlePhoPass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_13singlePhoPass___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4830
 * 
 *     property singlePhoPass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singlePhoPass_branch.GetEntry(self.localentry, 0)
 *             return self.singlePhoPass_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13singlePhoPass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4831
 *     property singlePhoPass:
 *         def __get__(self):
 *             self.singlePhoPass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.singlePhoPass_value
 * 
 */
  __pyx_v_self->singlePhoPass_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4832
 *         def __get__(self):
 *             self.singlePhoPass_branch.GetEntry(self.localentry, 0)
 *             return self.singlePhoPass_value             # <<<<<<<<<<<<<<
 * 
 *     property singlePhoPrescale:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->singlePhoPass_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4832; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.singlePhoPass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_17singlePhoPrescale_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_17singlePhoPrescale_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_17singlePhoPrescale___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4835
 * 
 *     property singlePhoPrescale:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.singlePhoPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.singlePhoPrescale_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_17singlePhoPrescale___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4836
 *     property singlePhoPrescale:
 *         def __get__(self):
 *             self.singlePhoPrescale_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.singlePhoPrescale_value
 * 
 */
  __pyx_v_self->singlePhoPrescale_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4837
 *         def __get__(self):
 *             self.singlePhoPrescale_branch.GetEntry(self.localentry, 0)
 *             return self.singlePhoPrescale_value             # <<<<<<<<<<<<<<
 * 
 *     property tAbsEta:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->singlePhoPrescale_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4837; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.singlePhoPrescale.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_7tAbsEta_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_7tAbsEta_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_7tAbsEta___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4840
 * 
 *     property tAbsEta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tAbsEta_branch.GetEntry(self.localentry, 0)
 *             return self.tAbsEta_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_7tAbsEta___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4841
 *     property tAbsEta:
 *         def __get__(self):
 *             self.tAbsEta_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tAbsEta_value
 * 
 */
  __pyx_v_self->tAbsEta_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4842
 *         def __get__(self):
 *             self.tAbsEta_branch.GetEntry(self.localentry, 0)
 *             return self.tAbsEta_value             # <<<<<<<<<<<<<<
 * 
 *     property tAntiElectronLoose:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tAbsEta_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4842; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tAbsEta.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_18tAntiElectronLoose_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_18tAntiElectronLoose_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_18tAntiElectronLoose___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4845
 * 
 *     property tAntiElectronLoose:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tAntiElectronLoose_branch.GetEntry(self.localentry, 0)
 *             return self.tAntiElectronLoose_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_18tAntiElectronLoose___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4846
 *     property tAntiElectronLoose:
 *         def __get__(self):
 *             self.tAntiElectronLoose_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tAntiElectronLoose_value
 * 
 */
  __pyx_v_self->tAntiElectronLoose_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4847
 *         def __get__(self):
 *             self.tAntiElectronLoose_branch.GetEntry(self.localentry, 0)
 *             return self.tAntiElectronLoose_value             # <<<<<<<<<<<<<<
 * 
 *     property tAntiElectronMVA:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tAntiElectronLoose_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4847; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tAntiElectronLoose.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16tAntiElectronMVA_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16tAntiElectronMVA_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_16tAntiElectronMVA___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4850
 * 
 *     property tAntiElectronMVA:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tAntiElectronMVA_branch.GetEntry(self.localentry, 0)
 *             return self.tAntiElectronMVA_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16tAntiElectronMVA___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4851
 *     property tAntiElectronMVA:
 *         def __get__(self):
 *             self.tAntiElectronMVA_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tAntiElectronMVA_value
 * 
 */
  __pyx_v_self->tAntiElectronMVA_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4852
 *         def __get__(self):
 *             self.tAntiElectronMVA_branch.GetEntry(self.localentry, 0)
 *             return self.tAntiElectronMVA_value             # <<<<<<<<<<<<<<
 * 
 *     property tAntiElectronMVA2Loose:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tAntiElectronMVA_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4852; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tAntiElectronMVA.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_22tAntiElectronMVA2Loose_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_22tAntiElectronMVA2Loose_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_22tAntiElectronMVA2Loose___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4855
 * 
 *     property tAntiElectronMVA2Loose:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tAntiElectronMVA2Loose_branch.GetEntry(self.localentry, 0)
 *             return self.tAntiElectronMVA2Loose_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_22tAntiElectronMVA2Loose___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4856
 *     property tAntiElectronMVA2Loose:
 *         def __get__(self):
 *             self.tAntiElectronMVA2Loose_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tAntiElectronMVA2Loose_value
 * 
 */
  __pyx_v_self->tAntiElectronMVA2Loose_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4857
 *         def __get__(self):
 *             self.tAntiElectronMVA2Loose_branch.GetEntry(self.localentry, 0)
 *             return self.tAntiElectronMVA2Loose_value             # <<<<<<<<<<<<<<
 * 
 *     property tAntiElectronMVA2Medium:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tAntiElectronMVA2Loose_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4857; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tAntiElectronMVA2Loose.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_23tAntiElectronMVA2Medium_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_23tAntiElectronMVA2Medium_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_23tAntiElectronMVA2Medium___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4860
 * 
 *     property tAntiElectronMVA2Medium:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tAntiElectronMVA2Medium_branch.GetEntry(self.localentry, 0)
 *             return self.tAntiElectronMVA2Medium_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_23tAntiElectronMVA2Medium___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4861
 *     property tAntiElectronMVA2Medium:
 *         def __get__(self):
 *             self.tAntiElectronMVA2Medium_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tAntiElectronMVA2Medium_value
 * 
 */
  __pyx_v_self->tAntiElectronMVA2Medium_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4862
 *         def __get__(self):
 *             self.tAntiElectronMVA2Medium_branch.GetEntry(self.localentry, 0)
 *             return self.tAntiElectronMVA2Medium_value             # <<<<<<<<<<<<<<
 * 
 *     property tAntiElectronMVA2Tight:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tAntiElectronMVA2Medium_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4862; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tAntiElectronMVA2Medium.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_22tAntiElectronMVA2Tight_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_22tAntiElectronMVA2Tight_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_22tAntiElectronMVA2Tight___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4865
 * 
 *     property tAntiElectronMVA2Tight:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tAntiElectronMVA2Tight_branch.GetEntry(self.localentry, 0)
 *             return self.tAntiElectronMVA2Tight_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_22tAntiElectronMVA2Tight___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4866
 *     property tAntiElectronMVA2Tight:
 *         def __get__(self):
 *             self.tAntiElectronMVA2Tight_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tAntiElectronMVA2Tight_value
 * 
 */
  __pyx_v_self->tAntiElectronMVA2Tight_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4867
 *         def __get__(self):
 *             self.tAntiElectronMVA2Tight_branch.GetEntry(self.localentry, 0)
 *             return self.tAntiElectronMVA2Tight_value             # <<<<<<<<<<<<<<
 * 
 *     property tAntiElectronMVA2Vloose:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tAntiElectronMVA2Tight_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4867; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tAntiElectronMVA2Tight.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_23tAntiElectronMVA2Vloose_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_23tAntiElectronMVA2Vloose_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_23tAntiElectronMVA2Vloose___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4870
 * 
 *     property tAntiElectronMVA2Vloose:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tAntiElectronMVA2Vloose_branch.GetEntry(self.localentry, 0)
 *             return self.tAntiElectronMVA2Vloose_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_23tAntiElectronMVA2Vloose___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4871
 *     property tAntiElectronMVA2Vloose:
 *         def __get__(self):
 *             self.tAntiElectronMVA2Vloose_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tAntiElectronMVA2Vloose_value
 * 
 */
  __pyx_v_self->tAntiElectronMVA2Vloose_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4872
 *         def __get__(self):
 *             self.tAntiElectronMVA2Vloose_branch.GetEntry(self.localentry, 0)
 *             return self.tAntiElectronMVA2Vloose_value             # <<<<<<<<<<<<<<
 * 
 *     property tAntiElectronMVA3Loose:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tAntiElectronMVA2Vloose_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4872; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tAntiElectronMVA2Vloose.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_22tAntiElectronMVA3Loose_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_22tAntiElectronMVA3Loose_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_22tAntiElectronMVA3Loose___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4875
 * 
 *     property tAntiElectronMVA3Loose:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tAntiElectronMVA3Loose_branch.GetEntry(self.localentry, 0)
 *             return self.tAntiElectronMVA3Loose_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_22tAntiElectronMVA3Loose___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4876
 *     property tAntiElectronMVA3Loose:
 *         def __get__(self):
 *             self.tAntiElectronMVA3Loose_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tAntiElectronMVA3Loose_value
 * 
 */
  __pyx_v_self->tAntiElectronMVA3Loose_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4877
 *         def __get__(self):
 *             self.tAntiElectronMVA3Loose_branch.GetEntry(self.localentry, 0)
 *             return self.tAntiElectronMVA3Loose_value             # <<<<<<<<<<<<<<
 * 
 *     property tAntiElectronMVA3Medium:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tAntiElectronMVA3Loose_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4877; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tAntiElectronMVA3Loose.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_23tAntiElectronMVA3Medium_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_23tAntiElectronMVA3Medium_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_23tAntiElectronMVA3Medium___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4880
 * 
 *     property tAntiElectronMVA3Medium:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tAntiElectronMVA3Medium_branch.GetEntry(self.localentry, 0)
 *             return self.tAntiElectronMVA3Medium_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_23tAntiElectronMVA3Medium___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4881
 *     property tAntiElectronMVA3Medium:
 *         def __get__(self):
 *             self.tAntiElectronMVA3Medium_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tAntiElectronMVA3Medium_value
 * 
 */
  __pyx_v_self->tAntiElectronMVA3Medium_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4882
 *         def __get__(self):
 *             self.tAntiElectronMVA3Medium_branch.GetEntry(self.localentry, 0)
 *             return self.tAntiElectronMVA3Medium_value             # <<<<<<<<<<<<<<
 * 
 *     property tAntiElectronMVA3Tight:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tAntiElectronMVA3Medium_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4882; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tAntiElectronMVA3Medium.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_22tAntiElectronMVA3Tight_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_22tAntiElectronMVA3Tight_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_22tAntiElectronMVA3Tight___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4885
 * 
 *     property tAntiElectronMVA3Tight:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tAntiElectronMVA3Tight_branch.GetEntry(self.localentry, 0)
 *             return self.tAntiElectronMVA3Tight_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_22tAntiElectronMVA3Tight___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4886
 *     property tAntiElectronMVA3Tight:
 *         def __get__(self):
 *             self.tAntiElectronMVA3Tight_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tAntiElectronMVA3Tight_value
 * 
 */
  __pyx_v_self->tAntiElectronMVA3Tight_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4887
 *         def __get__(self):
 *             self.tAntiElectronMVA3Tight_branch.GetEntry(self.localentry, 0)
 *             return self.tAntiElectronMVA3Tight_value             # <<<<<<<<<<<<<<
 * 
 *     property tAntiElectronMVA3VTight:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tAntiElectronMVA3Tight_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4887; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tAntiElectronMVA3Tight.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_23tAntiElectronMVA3VTight_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_23tAntiElectronMVA3VTight_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_23tAntiElectronMVA3VTight___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4890
 * 
 *     property tAntiElectronMVA3VTight:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tAntiElectronMVA3VTight_branch.GetEntry(self.localentry, 0)
 *             return self.tAntiElectronMVA3VTight_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_23tAntiElectronMVA3VTight___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4891
 *     property tAntiElectronMVA3VTight:
 *         def __get__(self):
 *             self.tAntiElectronMVA3VTight_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tAntiElectronMVA3VTight_value
 * 
 */
  __pyx_v_self->tAntiElectronMVA3VTight_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4892
 *         def __get__(self):
 *             self.tAntiElectronMVA3VTight_branch.GetEntry(self.localentry, 0)
 *             return self.tAntiElectronMVA3VTight_value             # <<<<<<<<<<<<<<
 * 
 *     property tAntiElectronMedium:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tAntiElectronMVA3VTight_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4892; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tAntiElectronMVA3VTight.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_19tAntiElectronMedium_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_19tAntiElectronMedium_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_19tAntiElectronMedium___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4895
 * 
 *     property tAntiElectronMedium:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tAntiElectronMedium_branch.GetEntry(self.localentry, 0)
 *             return self.tAntiElectronMedium_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_19tAntiElectronMedium___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4896
 *     property tAntiElectronMedium:
 *         def __get__(self):
 *             self.tAntiElectronMedium_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tAntiElectronMedium_value
 * 
 */
  __pyx_v_self->tAntiElectronMedium_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4897
 *         def __get__(self):
 *             self.tAntiElectronMedium_branch.GetEntry(self.localentry, 0)
 *             return self.tAntiElectronMedium_value             # <<<<<<<<<<<<<<
 * 
 *     property tAntiElectronTight:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tAntiElectronMedium_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4897; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tAntiElectronMedium.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_18tAntiElectronTight_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_18tAntiElectronTight_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_18tAntiElectronTight___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4900
 * 
 *     property tAntiElectronTight:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tAntiElectronTight_branch.GetEntry(self.localentry, 0)
 *             return self.tAntiElectronTight_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_18tAntiElectronTight___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4901
 *     property tAntiElectronTight:
 *         def __get__(self):
 *             self.tAntiElectronTight_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tAntiElectronTight_value
 * 
 */
  __pyx_v_self->tAntiElectronTight_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4902
 *         def __get__(self):
 *             self.tAntiElectronTight_branch.GetEntry(self.localentry, 0)
 *             return self.tAntiElectronTight_value             # <<<<<<<<<<<<<<
 * 
 *     property tAntiMuonLoose:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tAntiElectronTight_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4902; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tAntiElectronTight.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14tAntiMuonLoose_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14tAntiMuonLoose_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_14tAntiMuonLoose___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4905
 * 
 *     property tAntiMuonLoose:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tAntiMuonLoose_branch.GetEntry(self.localentry, 0)
 *             return self.tAntiMuonLoose_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14tAntiMuonLoose___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4906
 *     property tAntiMuonLoose:
 *         def __get__(self):
 *             self.tAntiMuonLoose_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tAntiMuonLoose_value
 * 
 */
  __pyx_v_self->tAntiMuonLoose_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4907
 *         def __get__(self):
 *             self.tAntiMuonLoose_branch.GetEntry(self.localentry, 0)
 *             return self.tAntiMuonLoose_value             # <<<<<<<<<<<<<<
 * 
 *     property tAntiMuonLoose2:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tAntiMuonLoose_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4907; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tAntiMuonLoose.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_15tAntiMuonLoose2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_15tAntiMuonLoose2_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_15tAntiMuonLoose2___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4910
 * 
 *     property tAntiMuonLoose2:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tAntiMuonLoose2_branch.GetEntry(self.localentry, 0)
 *             return self.tAntiMuonLoose2_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_15tAntiMuonLoose2___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4911
 *     property tAntiMuonLoose2:
 *         def __get__(self):
 *             self.tAntiMuonLoose2_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tAntiMuonLoose2_value
 * 
 */
  __pyx_v_self->tAntiMuonLoose2_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4912
 *         def __get__(self):
 *             self.tAntiMuonLoose2_branch.GetEntry(self.localentry, 0)
 *             return self.tAntiMuonLoose2_value             # <<<<<<<<<<<<<<
 * 
 *     property tAntiMuonMedium:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tAntiMuonLoose2_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4912; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tAntiMuonLoose2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_15tAntiMuonMedium_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_15tAntiMuonMedium_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_15tAntiMuonMedium___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4915
 * 
 *     property tAntiMuonMedium:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tAntiMuonMedium_branch.GetEntry(self.localentry, 0)
 *             return self.tAntiMuonMedium_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_15tAntiMuonMedium___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4916
 *     property tAntiMuonMedium:
 *         def __get__(self):
 *             self.tAntiMuonMedium_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tAntiMuonMedium_value
 * 
 */
  __pyx_v_self->tAntiMuonMedium_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4917
 *         def __get__(self):
 *             self.tAntiMuonMedium_branch.GetEntry(self.localentry, 0)
 *             return self.tAntiMuonMedium_value             # <<<<<<<<<<<<<<
 * 
 *     property tAntiMuonMedium2:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tAntiMuonMedium_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4917; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tAntiMuonMedium.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16tAntiMuonMedium2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16tAntiMuonMedium2_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_16tAntiMuonMedium2___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4920
 * 
 *     property tAntiMuonMedium2:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tAntiMuonMedium2_branch.GetEntry(self.localentry, 0)
 *             return self.tAntiMuonMedium2_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16tAntiMuonMedium2___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4921
 *     property tAntiMuonMedium2:
 *         def __get__(self):
 *             self.tAntiMuonMedium2_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tAntiMuonMedium2_value
 * 
 */
  __pyx_v_self->tAntiMuonMedium2_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4922
 *         def __get__(self):
 *             self.tAntiMuonMedium2_branch.GetEntry(self.localentry, 0)
 *             return self.tAntiMuonMedium2_value             # <<<<<<<<<<<<<<
 * 
 *     property tAntiMuonTight:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tAntiMuonMedium2_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4922; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tAntiMuonMedium2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14tAntiMuonTight_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14tAntiMuonTight_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_14tAntiMuonTight___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4925
 * 
 *     property tAntiMuonTight:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tAntiMuonTight_branch.GetEntry(self.localentry, 0)
 *             return self.tAntiMuonTight_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14tAntiMuonTight___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4926
 *     property tAntiMuonTight:
 *         def __get__(self):
 *             self.tAntiMuonTight_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tAntiMuonTight_value
 * 
 */
  __pyx_v_self->tAntiMuonTight_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4927
 *         def __get__(self):
 *             self.tAntiMuonTight_branch.GetEntry(self.localentry, 0)
 *             return self.tAntiMuonTight_value             # <<<<<<<<<<<<<<
 * 
 *     property tAntiMuonTight2:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tAntiMuonTight_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4927; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tAntiMuonTight.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_15tAntiMuonTight2_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_15tAntiMuonTight2_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_15tAntiMuonTight2___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4930
 * 
 *     property tAntiMuonTight2:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tAntiMuonTight2_branch.GetEntry(self.localentry, 0)
 *             return self.tAntiMuonTight2_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_15tAntiMuonTight2___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4931
 *     property tAntiMuonTight2:
 *         def __get__(self):
 *             self.tAntiMuonTight2_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tAntiMuonTight2_value
 * 
 */
  __pyx_v_self->tAntiMuonTight2_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4932
 *         def __get__(self):
 *             self.tAntiMuonTight2_branch.GetEntry(self.localentry, 0)
 *             return self.tAntiMuonTight2_value             # <<<<<<<<<<<<<<
 * 
 *     property tCharge:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tAntiMuonTight2_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4932; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tAntiMuonTight2.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_7tCharge_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_7tCharge_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_7tCharge___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4935
 * 
 *     property tCharge:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tCharge_branch.GetEntry(self.localentry, 0)
 *             return self.tCharge_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_7tCharge___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4936
 *     property tCharge:
 *         def __get__(self):
 *             self.tCharge_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tCharge_value
 * 
 */
  __pyx_v_self->tCharge_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4937
 *         def __get__(self):
 *             self.tCharge_branch.GetEntry(self.localentry, 0)
 *             return self.tCharge_value             # <<<<<<<<<<<<<<
 * 
 *     property tCiCTightElecOverlap:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tCharge_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4937; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tCharge.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_20tCiCTightElecOverlap_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_20tCiCTightElecOverlap_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_20tCiCTightElecOverlap___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4940
 * 
 *     property tCiCTightElecOverlap:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tCiCTightElecOverlap_branch.GetEntry(self.localentry, 0)
 *             return self.tCiCTightElecOverlap_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_20tCiCTightElecOverlap___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4941
 *     property tCiCTightElecOverlap:
 *         def __get__(self):
 *             self.tCiCTightElecOverlap_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tCiCTightElecOverlap_value
 * 
 */
  __pyx_v_self->tCiCTightElecOverlap_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4942
 *         def __get__(self):
 *             self.tCiCTightElecOverlap_branch.GetEntry(self.localentry, 0)
 *             return self.tCiCTightElecOverlap_value             # <<<<<<<<<<<<<<
 * 
 *     property tDZ:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tCiCTightElecOverlap_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4942; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tCiCTightElecOverlap.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3tDZ_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3tDZ_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_3tDZ___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4945
 * 
 *     property tDZ:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tDZ_branch.GetEntry(self.localentry, 0)
 *             return self.tDZ_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3tDZ___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4946
 *     property tDZ:
 *         def __get__(self):
 *             self.tDZ_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tDZ_value
 * 
 */
  __pyx_v_self->tDZ_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4947
 *         def __get__(self):
 *             self.tDZ_branch.GetEntry(self.localentry, 0)
 *             return self.tDZ_value             # <<<<<<<<<<<<<<
 * 
 *     property tDecayFinding:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tDZ_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4947; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tDZ.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13tDecayFinding_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13tDecayFinding_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_13tDecayFinding___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4950
 * 
 *     property tDecayFinding:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tDecayFinding_branch.GetEntry(self.localentry, 0)
 *             return self.tDecayFinding_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13tDecayFinding___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4951
 *     property tDecayFinding:
 *         def __get__(self):
 *             self.tDecayFinding_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tDecayFinding_value
 * 
 */
  __pyx_v_self->tDecayFinding_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4952
 *         def __get__(self):
 *             self.tDecayFinding_branch.GetEntry(self.localentry, 0)
 *             return self.tDecayFinding_value             # <<<<<<<<<<<<<<
 * 
 *     property tDecayMode:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tDecayFinding_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4952; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tDecayFinding.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10tDecayMode_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10tDecayMode_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_10tDecayMode___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4955
 * 
 *     property tDecayMode:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tDecayMode_branch.GetEntry(self.localentry, 0)
 *             return self.tDecayMode_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10tDecayMode___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4956
 *     property tDecayMode:
 *         def __get__(self):
 *             self.tDecayMode_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tDecayMode_value
 * 
 */
  __pyx_v_self->tDecayMode_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4957
 *         def __get__(self):
 *             self.tDecayMode_branch.GetEntry(self.localentry, 0)
 *             return self.tDecayMode_value             # <<<<<<<<<<<<<<
 * 
 *     property tElecOverlap:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tDecayMode_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4957; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tDecayMode.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12tElecOverlap_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12tElecOverlap_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_12tElecOverlap___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4960
 * 
 *     property tElecOverlap:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tElecOverlap_branch.GetEntry(self.localentry, 0)
 *             return self.tElecOverlap_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12tElecOverlap___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4961
 *     property tElecOverlap:
 *         def __get__(self):
 *             self.tElecOverlap_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tElecOverlap_value
 * 
 */
  __pyx_v_self->tElecOverlap_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4962
 *         def __get__(self):
 *             self.tElecOverlap_branch.GetEntry(self.localentry, 0)
 *             return self.tElecOverlap_value             # <<<<<<<<<<<<<<
 * 
 *     property tEta:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tElecOverlap_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4962; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tElecOverlap.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_4tEta_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_4tEta_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_4tEta___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4965
 * 
 *     property tEta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tEta_branch.GetEntry(self.localentry, 0)
 *             return self.tEta_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_4tEta___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4966
 *     property tEta:
 *         def __get__(self):
 *             self.tEta_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tEta_value
 * 
 */
  __pyx_v_self->tEta_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4967
 *         def __get__(self):
 *             self.tEta_branch.GetEntry(self.localentry, 0)
 *             return self.tEta_value             # <<<<<<<<<<<<<<
 * 
 *     property tGenDecayMode:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tEta_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4967; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tEta.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13tGenDecayMode_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13tGenDecayMode_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_13tGenDecayMode___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4970
 * 
 *     property tGenDecayMode:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tGenDecayMode_branch.GetEntry(self.localentry, 0)
 *             return self.tGenDecayMode_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13tGenDecayMode___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4971
 *     property tGenDecayMode:
 *         def __get__(self):
 *             self.tGenDecayMode_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tGenDecayMode_value
 * 
 */
  __pyx_v_self->tGenDecayMode_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4972
 *         def __get__(self):
 *             self.tGenDecayMode_branch.GetEntry(self.localentry, 0)
 *             return self.tGenDecayMode_value             # <<<<<<<<<<<<<<
 * 
 *     property tIP3DS:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tGenDecayMode_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4972; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tGenDecayMode.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6tIP3DS_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6tIP3DS_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_6tIP3DS___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4975
 * 
 *     property tIP3DS:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tIP3DS_branch.GetEntry(self.localentry, 0)
 *             return self.tIP3DS_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6tIP3DS___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4976
 *     property tIP3DS:
 *         def __get__(self):
 *             self.tIP3DS_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tIP3DS_value
 * 
 */
  __pyx_v_self->tIP3DS_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4977
 *         def __get__(self):
 *             self.tIP3DS_branch.GetEntry(self.localentry, 0)
 *             return self.tIP3DS_value             # <<<<<<<<<<<<<<
 * 
 *     property tJetArea:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tIP3DS_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4977; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tIP3DS.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8tJetArea_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8tJetArea_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_8tJetArea___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4980
 * 
 *     property tJetArea:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tJetArea_branch.GetEntry(self.localentry, 0)
 *             return self.tJetArea_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8tJetArea___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4981
 *     property tJetArea:
 *         def __get__(self):
 *             self.tJetArea_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tJetArea_value
 * 
 */
  __pyx_v_self->tJetArea_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4982
 *         def __get__(self):
 *             self.tJetArea_branch.GetEntry(self.localentry, 0)
 *             return self.tJetArea_value             # <<<<<<<<<<<<<<
 * 
 *     property tJetBtag:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tJetArea_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4982; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tJetArea.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8tJetBtag_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8tJetBtag_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_8tJetBtag___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4985
 * 
 *     property tJetBtag:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tJetBtag_branch.GetEntry(self.localentry, 0)
 *             return self.tJetBtag_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8tJetBtag___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4986
 *     property tJetBtag:
 *         def __get__(self):
 *             self.tJetBtag_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tJetBtag_value
 * 
 */
  __pyx_v_self->tJetBtag_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4987
 *         def __get__(self):
 *             self.tJetBtag_branch.GetEntry(self.localentry, 0)
 *             return self.tJetBtag_value             # <<<<<<<<<<<<<<
 * 
 *     property tJetCSVBtag:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tJetBtag_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4987; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tJetBtag.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11tJetCSVBtag_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11tJetCSVBtag_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_11tJetCSVBtag___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4990
 * 
 *     property tJetCSVBtag:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tJetCSVBtag_branch.GetEntry(self.localentry, 0)
 *             return self.tJetCSVBtag_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11tJetCSVBtag___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4991
 *     property tJetCSVBtag:
 *         def __get__(self):
 *             self.tJetCSVBtag_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tJetCSVBtag_value
 * 
 */
  __pyx_v_self->tJetCSVBtag_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4992
 *         def __get__(self):
 *             self.tJetCSVBtag_branch.GetEntry(self.localentry, 0)
 *             return self.tJetCSVBtag_value             # <<<<<<<<<<<<<<
 * 
 *     property tJetEtaEtaMoment:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tJetCSVBtag_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4992; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tJetCSVBtag.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16tJetEtaEtaMoment_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16tJetEtaEtaMoment_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_16tJetEtaEtaMoment___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":4995
 * 
 *     property tJetEtaEtaMoment:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tJetEtaEtaMoment_branch.GetEntry(self.localentry, 0)
 *             return self.tJetEtaEtaMoment_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16tJetEtaEtaMoment___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":4996
 *     property tJetEtaEtaMoment:
 *         def __get__(self):
 *             self.tJetEtaEtaMoment_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tJetEtaEtaMoment_value
 * 
 */
  __pyx_v_self->tJetEtaEtaMoment_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":4997
 *         def __get__(self):
 *             self.tJetEtaEtaMoment_branch.GetEntry(self.localentry, 0)
 *             return self.tJetEtaEtaMoment_value             # <<<<<<<<<<<<<<
 * 
 *     property tJetEtaPhiMoment:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tJetEtaEtaMoment_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4997; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tJetEtaEtaMoment.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16tJetEtaPhiMoment_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16tJetEtaPhiMoment_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_16tJetEtaPhiMoment___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5000
 * 
 *     property tJetEtaPhiMoment:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tJetEtaPhiMoment_branch.GetEntry(self.localentry, 0)
 *             return self.tJetEtaPhiMoment_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16tJetEtaPhiMoment___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5001
 *     property tJetEtaPhiMoment:
 *         def __get__(self):
 *             self.tJetEtaPhiMoment_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tJetEtaPhiMoment_value
 * 
 */
  __pyx_v_self->tJetEtaPhiMoment_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5002
 *         def __get__(self):
 *             self.tJetEtaPhiMoment_branch.GetEntry(self.localentry, 0)
 *             return self.tJetEtaPhiMoment_value             # <<<<<<<<<<<<<<
 * 
 *     property tJetEtaPhiSpread:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tJetEtaPhiMoment_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5002; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tJetEtaPhiMoment.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16tJetEtaPhiSpread_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16tJetEtaPhiSpread_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_16tJetEtaPhiSpread___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5005
 * 
 *     property tJetEtaPhiSpread:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tJetEtaPhiSpread_branch.GetEntry(self.localentry, 0)
 *             return self.tJetEtaPhiSpread_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16tJetEtaPhiSpread___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5006
 *     property tJetEtaPhiSpread:
 *         def __get__(self):
 *             self.tJetEtaPhiSpread_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tJetEtaPhiSpread_value
 * 
 */
  __pyx_v_self->tJetEtaPhiSpread_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5007
 *         def __get__(self):
 *             self.tJetEtaPhiSpread_branch.GetEntry(self.localentry, 0)
 *             return self.tJetEtaPhiSpread_value             # <<<<<<<<<<<<<<
 * 
 *     property tJetPhiPhiMoment:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tJetEtaPhiSpread_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5007; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tJetEtaPhiSpread.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16tJetPhiPhiMoment_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_16tJetPhiPhiMoment_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_16tJetPhiPhiMoment___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5010
 * 
 *     property tJetPhiPhiMoment:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tJetPhiPhiMoment_branch.GetEntry(self.localentry, 0)
 *             return self.tJetPhiPhiMoment_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_16tJetPhiPhiMoment___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5011
 *     property tJetPhiPhiMoment:
 *         def __get__(self):
 *             self.tJetPhiPhiMoment_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tJetPhiPhiMoment_value
 * 
 */
  __pyx_v_self->tJetPhiPhiMoment_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5012
 *         def __get__(self):
 *             self.tJetPhiPhiMoment_branch.GetEntry(self.localentry, 0)
 *             return self.tJetPhiPhiMoment_value             # <<<<<<<<<<<<<<
 * 
 *     property tJetPt:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tJetPhiPhiMoment_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5012; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tJetPhiPhiMoment.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6tJetPt_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6tJetPt_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_6tJetPt___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5015
 * 
 *     property tJetPt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tJetPt_branch.GetEntry(self.localentry, 0)
 *             return self.tJetPt_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6tJetPt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5016
 *     property tJetPt:
 *         def __get__(self):
 *             self.tJetPt_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tJetPt_value
 * 
 */
  __pyx_v_self->tJetPt_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5017
 *         def __get__(self):
 *             self.tJetPt_branch.GetEntry(self.localentry, 0)
 *             return self.tJetPt_value             # <<<<<<<<<<<<<<
 * 
 *     property tLeadTrackPt:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tJetPt_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5017; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tJetPt.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12tLeadTrackPt_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12tLeadTrackPt_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_12tLeadTrackPt___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5020
 * 
 *     property tLeadTrackPt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tLeadTrackPt_branch.GetEntry(self.localentry, 0)
 *             return self.tLeadTrackPt_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12tLeadTrackPt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5021
 *     property tLeadTrackPt:
 *         def __get__(self):
 *             self.tLeadTrackPt_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tLeadTrackPt_value
 * 
 */
  __pyx_v_self->tLeadTrackPt_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5022
 *         def __get__(self):
 *             self.tLeadTrackPt_branch.GetEntry(self.localentry, 0)
 *             return self.tLeadTrackPt_value             # <<<<<<<<<<<<<<
 * 
 *     property tLooseIso:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tLeadTrackPt_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5022; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tLeadTrackPt.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9tLooseIso_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9tLooseIso_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_9tLooseIso___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5025
 * 
 *     property tLooseIso:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tLooseIso_branch.GetEntry(self.localentry, 0)
 *             return self.tLooseIso_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9tLooseIso___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5026
 *     property tLooseIso:
 *         def __get__(self):
 *             self.tLooseIso_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tLooseIso_value
 * 
 */
  __pyx_v_self->tLooseIso_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5027
 *         def __get__(self):
 *             self.tLooseIso_branch.GetEntry(self.localentry, 0)
 *             return self.tLooseIso_value             # <<<<<<<<<<<<<<
 * 
 *     property tLooseIso3Hits:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tLooseIso_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5027; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tLooseIso.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14tLooseIso3Hits_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14tLooseIso3Hits_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_14tLooseIso3Hits___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5030
 * 
 *     property tLooseIso3Hits:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tLooseIso3Hits_branch.GetEntry(self.localentry, 0)
 *             return self.tLooseIso3Hits_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14tLooseIso3Hits___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5031
 *     property tLooseIso3Hits:
 *         def __get__(self):
 *             self.tLooseIso3Hits_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tLooseIso3Hits_value
 * 
 */
  __pyx_v_self->tLooseIso3Hits_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5032
 *         def __get__(self):
 *             self.tLooseIso3Hits_branch.GetEntry(self.localentry, 0)
 *             return self.tLooseIso3Hits_value             # <<<<<<<<<<<<<<
 * 
 *     property tLooseMVA2Iso:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tLooseIso3Hits_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5032; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tLooseIso3Hits.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13tLooseMVA2Iso_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13tLooseMVA2Iso_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_13tLooseMVA2Iso___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5035
 * 
 *     property tLooseMVA2Iso:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tLooseMVA2Iso_branch.GetEntry(self.localentry, 0)
 *             return self.tLooseMVA2Iso_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13tLooseMVA2Iso___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5036
 *     property tLooseMVA2Iso:
 *         def __get__(self):
 *             self.tLooseMVA2Iso_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tLooseMVA2Iso_value
 * 
 */
  __pyx_v_self->tLooseMVA2Iso_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5037
 *         def __get__(self):
 *             self.tLooseMVA2Iso_branch.GetEntry(self.localentry, 0)
 *             return self.tLooseMVA2Iso_value             # <<<<<<<<<<<<<<
 * 
 *     property tLooseMVAIso:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tLooseMVA2Iso_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5037; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tLooseMVA2Iso.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12tLooseMVAIso_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12tLooseMVAIso_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_12tLooseMVAIso___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5040
 * 
 *     property tLooseMVAIso:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tLooseMVAIso_branch.GetEntry(self.localentry, 0)
 *             return self.tLooseMVAIso_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12tLooseMVAIso___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5041
 *     property tLooseMVAIso:
 *         def __get__(self):
 *             self.tLooseMVAIso_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tLooseMVAIso_value
 * 
 */
  __pyx_v_self->tLooseMVAIso_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5042
 *         def __get__(self):
 *             self.tLooseMVAIso_branch.GetEntry(self.localentry, 0)
 *             return self.tLooseMVAIso_value             # <<<<<<<<<<<<<<
 * 
 *     property tMass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tLooseMVAIso_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5042; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tLooseMVAIso.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_5tMass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_5tMass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_5tMass___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5045
 * 
 *     property tMass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tMass_branch.GetEntry(self.localentry, 0)
 *             return self.tMass_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_5tMass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5046
 *     property tMass:
 *         def __get__(self):
 *             self.tMass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tMass_value
 * 
 */
  __pyx_v_self->tMass_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5047
 *         def __get__(self):
 *             self.tMass_branch.GetEntry(self.localentry, 0)
 *             return self.tMass_value             # <<<<<<<<<<<<<<
 * 
 *     property tMediumIso:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tMass_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5047; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tMass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10tMediumIso_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10tMediumIso_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_10tMediumIso___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5050
 * 
 *     property tMediumIso:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tMediumIso_branch.GetEntry(self.localentry, 0)
 *             return self.tMediumIso_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10tMediumIso___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5051
 *     property tMediumIso:
 *         def __get__(self):
 *             self.tMediumIso_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tMediumIso_value
 * 
 */
  __pyx_v_self->tMediumIso_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5052
 *         def __get__(self):
 *             self.tMediumIso_branch.GetEntry(self.localentry, 0)
 *             return self.tMediumIso_value             # <<<<<<<<<<<<<<
 * 
 *     property tMediumIso3Hits:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tMediumIso_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5052; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tMediumIso.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_15tMediumIso3Hits_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_15tMediumIso3Hits_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_15tMediumIso3Hits___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5055
 * 
 *     property tMediumIso3Hits:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tMediumIso3Hits_branch.GetEntry(self.localentry, 0)
 *             return self.tMediumIso3Hits_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_15tMediumIso3Hits___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5056
 *     property tMediumIso3Hits:
 *         def __get__(self):
 *             self.tMediumIso3Hits_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tMediumIso3Hits_value
 * 
 */
  __pyx_v_self->tMediumIso3Hits_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5057
 *         def __get__(self):
 *             self.tMediumIso3Hits_branch.GetEntry(self.localentry, 0)
 *             return self.tMediumIso3Hits_value             # <<<<<<<<<<<<<<
 * 
 *     property tMediumMVA2Iso:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tMediumIso3Hits_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5057; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tMediumIso3Hits.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14tMediumMVA2Iso_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14tMediumMVA2Iso_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_14tMediumMVA2Iso___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5060
 * 
 *     property tMediumMVA2Iso:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tMediumMVA2Iso_branch.GetEntry(self.localentry, 0)
 *             return self.tMediumMVA2Iso_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14tMediumMVA2Iso___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5061
 *     property tMediumMVA2Iso:
 *         def __get__(self):
 *             self.tMediumMVA2Iso_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tMediumMVA2Iso_value
 * 
 */
  __pyx_v_self->tMediumMVA2Iso_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5062
 *         def __get__(self):
 *             self.tMediumMVA2Iso_branch.GetEntry(self.localentry, 0)
 *             return self.tMediumMVA2Iso_value             # <<<<<<<<<<<<<<
 * 
 *     property tMediumMVAIso:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tMediumMVA2Iso_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5062; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tMediumMVA2Iso.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13tMediumMVAIso_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13tMediumMVAIso_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_13tMediumMVAIso___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5065
 * 
 *     property tMediumMVAIso:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tMediumMVAIso_branch.GetEntry(self.localentry, 0)
 *             return self.tMediumMVAIso_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13tMediumMVAIso___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5066
 *     property tMediumMVAIso:
 *         def __get__(self):
 *             self.tMediumMVAIso_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tMediumMVAIso_value
 * 
 */
  __pyx_v_self->tMediumMVAIso_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5067
 *         def __get__(self):
 *             self.tMediumMVAIso_branch.GetEntry(self.localentry, 0)
 *             return self.tMediumMVAIso_value             # <<<<<<<<<<<<<<
 * 
 *     property tMtToMET:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tMediumMVAIso_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5067; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tMediumMVAIso.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8tMtToMET_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8tMtToMET_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_8tMtToMET___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5070
 * 
 *     property tMtToMET:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tMtToMET_branch.GetEntry(self.localentry, 0)
 *             return self.tMtToMET_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8tMtToMET___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5071
 *     property tMtToMET:
 *         def __get__(self):
 *             self.tMtToMET_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tMtToMET_value
 * 
 */
  __pyx_v_self->tMtToMET_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5072
 *         def __get__(self):
 *             self.tMtToMET_branch.GetEntry(self.localentry, 0)
 *             return self.tMtToMET_value             # <<<<<<<<<<<<<<
 * 
 *     property tMtToMVAMET:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tMtToMET_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5072; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tMtToMET.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11tMtToMVAMET_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11tMtToMVAMET_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_11tMtToMVAMET___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5075
 * 
 *     property tMtToMVAMET:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tMtToMVAMET_branch.GetEntry(self.localentry, 0)
 *             return self.tMtToMVAMET_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11tMtToMVAMET___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5076
 *     property tMtToMVAMET:
 *         def __get__(self):
 *             self.tMtToMVAMET_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tMtToMVAMET_value
 * 
 */
  __pyx_v_self->tMtToMVAMET_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5077
 *         def __get__(self):
 *             self.tMtToMVAMET_branch.GetEntry(self.localentry, 0)
 *             return self.tMtToMVAMET_value             # <<<<<<<<<<<<<<
 * 
 *     property tMtToPFMET:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tMtToMVAMET_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5077; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tMtToMVAMET.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10tMtToPFMET_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10tMtToPFMET_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_10tMtToPFMET___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5080
 * 
 *     property tMtToPFMET:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tMtToPFMET_branch.GetEntry(self.localentry, 0)
 *             return self.tMtToPFMET_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10tMtToPFMET___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5081
 *     property tMtToPFMET:
 *         def __get__(self):
 *             self.tMtToPFMET_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tMtToPFMET_value
 * 
 */
  __pyx_v_self->tMtToPFMET_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5082
 *         def __get__(self):
 *             self.tMtToPFMET_branch.GetEntry(self.localentry, 0)
 *             return self.tMtToPFMET_value             # <<<<<<<<<<<<<<
 * 
 *     property tMtToPfMet_Ty1:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tMtToPFMET_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5082; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tMtToPFMET.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14tMtToPfMet_Ty1_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14tMtToPfMet_Ty1_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_14tMtToPfMet_Ty1___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5085
 * 
 *     property tMtToPfMet_Ty1:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tMtToPfMet_Ty1_branch.GetEntry(self.localentry, 0)
 *             return self.tMtToPfMet_Ty1_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14tMtToPfMet_Ty1___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5086
 *     property tMtToPfMet_Ty1:
 *         def __get__(self):
 *             self.tMtToPfMet_Ty1_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tMtToPfMet_Ty1_value
 * 
 */
  __pyx_v_self->tMtToPfMet_Ty1_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5087
 *         def __get__(self):
 *             self.tMtToPfMet_Ty1_branch.GetEntry(self.localentry, 0)
 *             return self.tMtToPfMet_Ty1_value             # <<<<<<<<<<<<<<
 * 
 *     property tMtToPfMet_jes:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tMtToPfMet_Ty1_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5087; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tMtToPfMet_Ty1.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14tMtToPfMet_jes_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14tMtToPfMet_jes_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_14tMtToPfMet_jes___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5090
 * 
 *     property tMtToPfMet_jes:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tMtToPfMet_jes_branch.GetEntry(self.localentry, 0)
 *             return self.tMtToPfMet_jes_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14tMtToPfMet_jes___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5091
 *     property tMtToPfMet_jes:
 *         def __get__(self):
 *             self.tMtToPfMet_jes_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tMtToPfMet_jes_value
 * 
 */
  __pyx_v_self->tMtToPfMet_jes_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5092
 *         def __get__(self):
 *             self.tMtToPfMet_jes_branch.GetEntry(self.localentry, 0)
 *             return self.tMtToPfMet_jes_value             # <<<<<<<<<<<<<<
 * 
 *     property tMtToPfMet_mes:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tMtToPfMet_jes_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5092; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tMtToPfMet_jes.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14tMtToPfMet_mes_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14tMtToPfMet_mes_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_14tMtToPfMet_mes___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5095
 * 
 *     property tMtToPfMet_mes:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tMtToPfMet_mes_branch.GetEntry(self.localentry, 0)
 *             return self.tMtToPfMet_mes_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14tMtToPfMet_mes___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5096
 *     property tMtToPfMet_mes:
 *         def __get__(self):
 *             self.tMtToPfMet_mes_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tMtToPfMet_mes_value
 * 
 */
  __pyx_v_self->tMtToPfMet_mes_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5097
 *         def __get__(self):
 *             self.tMtToPfMet_mes_branch.GetEntry(self.localentry, 0)
 *             return self.tMtToPfMet_mes_value             # <<<<<<<<<<<<<<
 * 
 *     property tMtToPfMet_tes:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tMtToPfMet_mes_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5097; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tMtToPfMet_mes.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14tMtToPfMet_tes_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14tMtToPfMet_tes_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_14tMtToPfMet_tes___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5100
 * 
 *     property tMtToPfMet_tes:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tMtToPfMet_tes_branch.GetEntry(self.localentry, 0)
 *             return self.tMtToPfMet_tes_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14tMtToPfMet_tes___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5101
 *     property tMtToPfMet_tes:
 *         def __get__(self):
 *             self.tMtToPfMet_tes_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tMtToPfMet_tes_value
 * 
 */
  __pyx_v_self->tMtToPfMet_tes_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5102
 *         def __get__(self):
 *             self.tMtToPfMet_tes_branch.GetEntry(self.localentry, 0)
 *             return self.tMtToPfMet_tes_value             # <<<<<<<<<<<<<<
 * 
 *     property tMtToPfMet_ues:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tMtToPfMet_tes_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5102; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tMtToPfMet_tes.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14tMtToPfMet_ues_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14tMtToPfMet_ues_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_14tMtToPfMet_ues___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5105
 * 
 *     property tMtToPfMet_ues:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tMtToPfMet_ues_branch.GetEntry(self.localentry, 0)
 *             return self.tMtToPfMet_ues_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14tMtToPfMet_ues___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5106
 *     property tMtToPfMet_ues:
 *         def __get__(self):
 *             self.tMtToPfMet_ues_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tMtToPfMet_ues_value
 * 
 */
  __pyx_v_self->tMtToPfMet_ues_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5107
 *         def __get__(self):
 *             self.tMtToPfMet_ues_branch.GetEntry(self.localentry, 0)
 *             return self.tMtToPfMet_ues_value             # <<<<<<<<<<<<<<
 * 
 *     property tMuOverlap:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tMtToPfMet_ues_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5107; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tMtToPfMet_ues.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10tMuOverlap_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10tMuOverlap_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_10tMuOverlap___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5110
 * 
 *     property tMuOverlap:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tMuOverlap_branch.GetEntry(self.localentry, 0)
 *             return self.tMuOverlap_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10tMuOverlap___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5111
 *     property tMuOverlap:
 *         def __get__(self):
 *             self.tMuOverlap_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tMuOverlap_value
 * 
 */
  __pyx_v_self->tMuOverlap_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5112
 *         def __get__(self):
 *             self.tMuOverlap_branch.GetEntry(self.localentry, 0)
 *             return self.tMuOverlap_value             # <<<<<<<<<<<<<<
 * 
 *     property tPhi:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tMuOverlap_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5112; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tMuOverlap.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_4tPhi_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_4tPhi_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_4tPhi___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5115
 * 
 *     property tPhi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tPhi_branch.GetEntry(self.localentry, 0)
 *             return self.tPhi_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_4tPhi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5116
 *     property tPhi:
 *         def __get__(self):
 *             self.tPhi_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tPhi_value
 * 
 */
  __pyx_v_self->tPhi_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5117
 *         def __get__(self):
 *             self.tPhi_branch.GetEntry(self.localentry, 0)
 *             return self.tPhi_value             # <<<<<<<<<<<<<<
 * 
 *     property tPt:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tPhi_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5117; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tPhi.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3tPt_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3tPt_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_3tPt___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5120
 * 
 *     property tPt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tPt_branch.GetEntry(self.localentry, 0)
 *             return self.tPt_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3tPt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5121
 *     property tPt:
 *         def __get__(self):
 *             self.tPt_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tPt_value
 * 
 */
  __pyx_v_self->tPt_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5122
 *         def __get__(self):
 *             self.tPt_branch.GetEntry(self.localentry, 0)
 *             return self.tPt_value             # <<<<<<<<<<<<<<
 * 
 *     property tTNPId:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tPt_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5122; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tPt.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6tTNPId_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6tTNPId_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_6tTNPId___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5125
 * 
 *     property tTNPId:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tTNPId_branch.GetEntry(self.localentry, 0)
 *             return self.tTNPId_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6tTNPId___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5126
 *     property tTNPId:
 *         def __get__(self):
 *             self.tTNPId_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tTNPId_value
 * 
 */
  __pyx_v_self->tTNPId_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5127
 *         def __get__(self):
 *             self.tTNPId_branch.GetEntry(self.localentry, 0)
 *             return self.tTNPId_value             # <<<<<<<<<<<<<<
 * 
 *     property tTightIso:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tTNPId_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5127; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tTNPId.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9tTightIso_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9tTightIso_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_9tTightIso___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5130
 * 
 *     property tTightIso:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tTightIso_branch.GetEntry(self.localentry, 0)
 *             return self.tTightIso_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9tTightIso___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5131
 *     property tTightIso:
 *         def __get__(self):
 *             self.tTightIso_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tTightIso_value
 * 
 */
  __pyx_v_self->tTightIso_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5132
 *         def __get__(self):
 *             self.tTightIso_branch.GetEntry(self.localentry, 0)
 *             return self.tTightIso_value             # <<<<<<<<<<<<<<
 * 
 *     property tTightIso3Hits:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tTightIso_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5132; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tTightIso.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14tTightIso3Hits_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14tTightIso3Hits_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_14tTightIso3Hits___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5135
 * 
 *     property tTightIso3Hits:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tTightIso3Hits_branch.GetEntry(self.localentry, 0)
 *             return self.tTightIso3Hits_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14tTightIso3Hits___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5136
 *     property tTightIso3Hits:
 *         def __get__(self):
 *             self.tTightIso3Hits_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tTightIso3Hits_value
 * 
 */
  __pyx_v_self->tTightIso3Hits_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5137
 *         def __get__(self):
 *             self.tTightIso3Hits_branch.GetEntry(self.localentry, 0)
 *             return self.tTightIso3Hits_value             # <<<<<<<<<<<<<<
 * 
 *     property tTightMVA2Iso:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tTightIso3Hits_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5137; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tTightIso3Hits.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13tTightMVA2Iso_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13tTightMVA2Iso_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_13tTightMVA2Iso___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5140
 * 
 *     property tTightMVA2Iso:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tTightMVA2Iso_branch.GetEntry(self.localentry, 0)
 *             return self.tTightMVA2Iso_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13tTightMVA2Iso___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5141
 *     property tTightMVA2Iso:
 *         def __get__(self):
 *             self.tTightMVA2Iso_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tTightMVA2Iso_value
 * 
 */
  __pyx_v_self->tTightMVA2Iso_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5142
 *         def __get__(self):
 *             self.tTightMVA2Iso_branch.GetEntry(self.localentry, 0)
 *             return self.tTightMVA2Iso_value             # <<<<<<<<<<<<<<
 * 
 *     property tTightMVAIso:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tTightMVA2Iso_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5142; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tTightMVA2Iso.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12tTightMVAIso_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12tTightMVAIso_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_12tTightMVAIso___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5145
 * 
 *     property tTightMVAIso:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tTightMVAIso_branch.GetEntry(self.localentry, 0)
 *             return self.tTightMVAIso_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12tTightMVAIso___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5146
 *     property tTightMVAIso:
 *         def __get__(self):
 *             self.tTightMVAIso_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tTightMVAIso_value
 * 
 */
  __pyx_v_self->tTightMVAIso_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5147
 *         def __get__(self):
 *             self.tTightMVAIso_branch.GetEntry(self.localentry, 0)
 *             return self.tTightMVAIso_value             # <<<<<<<<<<<<<<
 * 
 *     property tToMETDPhi:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tTightMVAIso_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5147; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tTightMVAIso.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10tToMETDPhi_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10tToMETDPhi_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_10tToMETDPhi___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5150
 * 
 *     property tToMETDPhi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tToMETDPhi_branch.GetEntry(self.localentry, 0)
 *             return self.tToMETDPhi_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10tToMETDPhi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5151
 *     property tToMETDPhi:
 *         def __get__(self):
 *             self.tToMETDPhi_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tToMETDPhi_value
 * 
 */
  __pyx_v_self->tToMETDPhi_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5152
 *         def __get__(self):
 *             self.tToMETDPhi_branch.GetEntry(self.localentry, 0)
 *             return self.tToMETDPhi_value             # <<<<<<<<<<<<<<
 * 
 *     property tVLooseIso:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tToMETDPhi_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5152; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tToMETDPhi.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10tVLooseIso_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10tVLooseIso_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_10tVLooseIso___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5155
 * 
 *     property tVLooseIso:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tVLooseIso_branch.GetEntry(self.localentry, 0)
 *             return self.tVLooseIso_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10tVLooseIso___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5156
 *     property tVLooseIso:
 *         def __get__(self):
 *             self.tVLooseIso_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tVLooseIso_value
 * 
 */
  __pyx_v_self->tVLooseIso_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5157
 *         def __get__(self):
 *             self.tVLooseIso_branch.GetEntry(self.localentry, 0)
 *             return self.tVLooseIso_value             # <<<<<<<<<<<<<<
 * 
 *     property tVZ:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tVLooseIso_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5157; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tVLooseIso.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3tVZ_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3tVZ_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_3tVZ___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5160
 * 
 *     property tVZ:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tVZ_branch.GetEntry(self.localentry, 0)
 *             return self.tVZ_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3tVZ___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5161
 *     property tVZ:
 *         def __get__(self):
 *             self.tVZ_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tVZ_value
 * 
 */
  __pyx_v_self->tVZ_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5162
 *         def __get__(self):
 *             self.tVZ_branch.GetEntry(self.localentry, 0)
 *             return self.tVZ_value             # <<<<<<<<<<<<<<
 * 
 *     property tauHpsVetoPt20:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tVZ_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5162; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tVZ.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14tauHpsVetoPt20_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14tauHpsVetoPt20_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_14tauHpsVetoPt20___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5165
 * 
 *     property tauHpsVetoPt20:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tauHpsVetoPt20_branch.GetEntry(self.localentry, 0)
 *             return self.tauHpsVetoPt20_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14tauHpsVetoPt20___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5166
 *     property tauHpsVetoPt20:
 *         def __get__(self):
 *             self.tauHpsVetoPt20_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tauHpsVetoPt20_value
 * 
 */
  __pyx_v_self->tauHpsVetoPt20_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5167
 *         def __get__(self):
 *             self.tauHpsVetoPt20_branch.GetEntry(self.localentry, 0)
 *             return self.tauHpsVetoPt20_value             # <<<<<<<<<<<<<<
 * 
 *     property tauVetoPt20:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tauHpsVetoPt20_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5167; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tauHpsVetoPt20.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11tauVetoPt20_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11tauVetoPt20_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_11tauVetoPt20___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5170
 * 
 *     property tauVetoPt20:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tauVetoPt20_branch.GetEntry(self.localentry, 0)
 *             return self.tauVetoPt20_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11tauVetoPt20___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5171
 *     property tauVetoPt20:
 *         def __get__(self):
 *             self.tauVetoPt20_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tauVetoPt20_value
 * 
 */
  __pyx_v_self->tauVetoPt20_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5172
 *         def __get__(self):
 *             self.tauVetoPt20_branch.GetEntry(self.localentry, 0)
 *             return self.tauVetoPt20_value             # <<<<<<<<<<<<<<
 * 
 *     property tauVetoPt20Loose3HitsVtx:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tauVetoPt20_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5172; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tauVetoPt20.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_24tauVetoPt20Loose3HitsVtx_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_24tauVetoPt20Loose3HitsVtx_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_24tauVetoPt20Loose3HitsVtx___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5175
 * 
 *     property tauVetoPt20Loose3HitsVtx:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tauVetoPt20Loose3HitsVtx_branch.GetEntry(self.localentry, 0)
 *             return self.tauVetoPt20Loose3HitsVtx_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_24tauVetoPt20Loose3HitsVtx___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5176
 *     property tauVetoPt20Loose3HitsVtx:
 *         def __get__(self):
 *             self.tauVetoPt20Loose3HitsVtx_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tauVetoPt20Loose3HitsVtx_value
 * 
 */
  __pyx_v_self->tauVetoPt20Loose3HitsVtx_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5177
 *         def __get__(self):
 *             self.tauVetoPt20Loose3HitsVtx_branch.GetEntry(self.localentry, 0)
 *             return self.tauVetoPt20Loose3HitsVtx_value             # <<<<<<<<<<<<<<
 * 
 *     property tauVetoPt20LooseMVA2Vtx:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tauVetoPt20Loose3HitsVtx_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5177; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tauVetoPt20Loose3HitsVtx.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_23tauVetoPt20LooseMVA2Vtx_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_23tauVetoPt20LooseMVA2Vtx_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_23tauVetoPt20LooseMVA2Vtx___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5180
 * 
 *     property tauVetoPt20LooseMVA2Vtx:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tauVetoPt20LooseMVA2Vtx_branch.GetEntry(self.localentry, 0)
 *             return self.tauVetoPt20LooseMVA2Vtx_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_23tauVetoPt20LooseMVA2Vtx___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5181
 *     property tauVetoPt20LooseMVA2Vtx:
 *         def __get__(self):
 *             self.tauVetoPt20LooseMVA2Vtx_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tauVetoPt20LooseMVA2Vtx_value
 * 
 */
  __pyx_v_self->tauVetoPt20LooseMVA2Vtx_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5182
 *         def __get__(self):
 *             self.tauVetoPt20LooseMVA2Vtx_branch.GetEntry(self.localentry, 0)
 *             return self.tauVetoPt20LooseMVA2Vtx_value             # <<<<<<<<<<<<<<
 * 
 *     property tauVetoPt20LooseMVAVtx:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tauVetoPt20LooseMVA2Vtx_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5182; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tauVetoPt20LooseMVA2Vtx.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_22tauVetoPt20LooseMVAVtx_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_22tauVetoPt20LooseMVAVtx_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_22tauVetoPt20LooseMVAVtx___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5185
 * 
 *     property tauVetoPt20LooseMVAVtx:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tauVetoPt20LooseMVAVtx_branch.GetEntry(self.localentry, 0)
 *             return self.tauVetoPt20LooseMVAVtx_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_22tauVetoPt20LooseMVAVtx___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5186
 *     property tauVetoPt20LooseMVAVtx:
 *         def __get__(self):
 *             self.tauVetoPt20LooseMVAVtx_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tauVetoPt20LooseMVAVtx_value
 * 
 */
  __pyx_v_self->tauVetoPt20LooseMVAVtx_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5187
 *         def __get__(self):
 *             self.tauVetoPt20LooseMVAVtx_branch.GetEntry(self.localentry, 0)
 *             return self.tauVetoPt20LooseMVAVtx_value             # <<<<<<<<<<<<<<
 * 
 *     property tauVetoPt20VLooseHPSVtx:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tauVetoPt20LooseMVAVtx_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5187; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tauVetoPt20LooseMVAVtx.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_23tauVetoPt20VLooseHPSVtx_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_23tauVetoPt20VLooseHPSVtx_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_23tauVetoPt20VLooseHPSVtx___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5190
 * 
 *     property tauVetoPt20VLooseHPSVtx:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.tauVetoPt20VLooseHPSVtx_branch.GetEntry(self.localentry, 0)
 *             return self.tauVetoPt20VLooseHPSVtx_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_23tauVetoPt20VLooseHPSVtx___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5191
 *     property tauVetoPt20VLooseHPSVtx:
 *         def __get__(self):
 *             self.tauVetoPt20VLooseHPSVtx_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.tauVetoPt20VLooseHPSVtx_value
 * 
 */
  __pyx_v_self->tauVetoPt20VLooseHPSVtx_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5192
 *         def __get__(self):
 *             self.tauVetoPt20VLooseHPSVtx_branch.GetEntry(self.localentry, 0)
 *             return self.tauVetoPt20VLooseHPSVtx_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMetEt:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->tauVetoPt20VLooseHPSVtx_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5192; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.tauVetoPt20VLooseHPSVtx.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13type1_pfMetEt_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_13type1_pfMetEt_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_13type1_pfMetEt___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5195
 * 
 *     property type1_pfMetEt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMetEt_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMetEt_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_13type1_pfMetEt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5196
 *     property type1_pfMetEt:
 *         def __get__(self):
 *             self.type1_pfMetEt_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMetEt_value
 * 
 */
  __pyx_v_self->type1_pfMetEt_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5197
 *         def __get__(self):
 *             self.type1_pfMetEt_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMetEt_value             # <<<<<<<<<<<<<<
 * 
 *     property type1_pfMetPhi:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMetEt_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5197; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.type1_pfMetEt.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14type1_pfMetPhi_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14type1_pfMetPhi_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_14type1_pfMetPhi___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5200
 * 
 *     property type1_pfMetPhi:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.type1_pfMetPhi_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMetPhi_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14type1_pfMetPhi___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5201
 *     property type1_pfMetPhi:
 *         def __get__(self):
 *             self.type1_pfMetPhi_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.type1_pfMetPhi_value
 * 
 */
  __pyx_v_self->type1_pfMetPhi_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5202
 *         def __get__(self):
 *             self.type1_pfMetPhi_branch.GetEntry(self.localentry, 0)
 *             return self.type1_pfMetPhi_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfDeta:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->type1_pfMetPhi_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5202; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.type1_pfMetPhi.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_7vbfDeta_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_7vbfDeta_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_7vbfDeta___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5205
 * 
 *     property vbfDeta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfDeta_branch.GetEntry(self.localentry, 0)
 *             return self.vbfDeta_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_7vbfDeta___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5206
 *     property vbfDeta:
 *         def __get__(self):
 *             self.vbfDeta_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfDeta_value
 * 
 */
  __pyx_v_self->vbfDeta_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5207
 *         def __get__(self):
 *             self.vbfDeta_branch.GetEntry(self.localentry, 0)
 *             return self.vbfDeta_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfDijetrap:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfDeta_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5207; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.vbfDeta.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11vbfDijetrap_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_11vbfDijetrap_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_11vbfDijetrap___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5210
 * 
 *     property vbfDijetrap:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfDijetrap_branch.GetEntry(self.localentry, 0)
 *             return self.vbfDijetrap_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_11vbfDijetrap___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5211
 *     property vbfDijetrap:
 *         def __get__(self):
 *             self.vbfDijetrap_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfDijetrap_value
 * 
 */
  __pyx_v_self->vbfDijetrap_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5212
 *         def __get__(self):
 *             self.vbfDijetrap_branch.GetEntry(self.localentry, 0)
 *             return self.vbfDijetrap_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfDphihj:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfDijetrap_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5212; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.vbfDijetrap.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9vbfDphihj_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_9vbfDphihj_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_9vbfDphihj___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5215
 * 
 *     property vbfDphihj:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfDphihj_branch.GetEntry(self.localentry, 0)
 *             return self.vbfDphihj_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_9vbfDphihj___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5216
 *     property vbfDphihj:
 *         def __get__(self):
 *             self.vbfDphihj_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfDphihj_value
 * 
 */
  __pyx_v_self->vbfDphihj_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5217
 *         def __get__(self):
 *             self.vbfDphihj_branch.GetEntry(self.localentry, 0)
 *             return self.vbfDphihj_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfDphihjnomet:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfDphihj_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5217; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.vbfDphihj.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14vbfDphihjnomet_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_14vbfDphihjnomet_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_14vbfDphihjnomet___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5220
 * 
 *     property vbfDphihjnomet:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfDphihjnomet_branch.GetEntry(self.localentry, 0)
 *             return self.vbfDphihjnomet_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_14vbfDphihjnomet___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5221
 *     property vbfDphihjnomet:
 *         def __get__(self):
 *             self.vbfDphihjnomet_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfDphihjnomet_value
 * 
 */
  __pyx_v_self->vbfDphihjnomet_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5222
 *         def __get__(self):
 *             self.vbfDphihjnomet_branch.GetEntry(self.localentry, 0)
 *             return self.vbfDphihjnomet_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfHrap:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfDphihjnomet_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5222; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.vbfDphihjnomet.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_7vbfHrap_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_7vbfHrap_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_7vbfHrap___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5225
 * 
 *     property vbfHrap:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfHrap_branch.GetEntry(self.localentry, 0)
 *             return self.vbfHrap_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_7vbfHrap___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5226
 *     property vbfHrap:
 *         def __get__(self):
 *             self.vbfHrap_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfHrap_value
 * 
 */
  __pyx_v_self->vbfHrap_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5227
 *         def __get__(self):
 *             self.vbfHrap_branch.GetEntry(self.localentry, 0)
 *             return self.vbfHrap_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfJetVeto20:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfHrap_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5227; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.vbfHrap.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12vbfJetVeto20_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12vbfJetVeto20_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_12vbfJetVeto20___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5230
 * 
 *     property vbfJetVeto20:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfJetVeto20_branch.GetEntry(self.localentry, 0)
 *             return self.vbfJetVeto20_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12vbfJetVeto20___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5231
 *     property vbfJetVeto20:
 *         def __get__(self):
 *             self.vbfJetVeto20_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfJetVeto20_value
 * 
 */
  __pyx_v_self->vbfJetVeto20_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5232
 *         def __get__(self):
 *             self.vbfJetVeto20_branch.GetEntry(self.localentry, 0)
 *             return self.vbfJetVeto20_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfJetVeto30:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfJetVeto20_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5232; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.vbfJetVeto20.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12vbfJetVeto30_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_12vbfJetVeto30_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_12vbfJetVeto30___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5235
 * 
 *     property vbfJetVeto30:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfJetVeto30_branch.GetEntry(self.localentry, 0)
 *             return self.vbfJetVeto30_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_12vbfJetVeto30___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5236
 *     property vbfJetVeto30:
 *         def __get__(self):
 *             self.vbfJetVeto30_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfJetVeto30_value
 * 
 */
  __pyx_v_self->vbfJetVeto30_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5237
 *         def __get__(self):
 *             self.vbfJetVeto30_branch.GetEntry(self.localentry, 0)
 *             return self.vbfJetVeto30_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfMVA:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfJetVeto30_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5237; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.vbfJetVeto30.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6vbfMVA_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_6vbfMVA_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_6vbfMVA___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5240
 * 
 *     property vbfMVA:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMVA_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMVA_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_6vbfMVA___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5241
 *     property vbfMVA:
 *         def __get__(self):
 *             self.vbfMVA_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfMVA_value
 * 
 */
  __pyx_v_self->vbfMVA_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5242
 *         def __get__(self):
 *             self.vbfMVA_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMVA_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfMass:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfMVA_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5242; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.vbfMVA.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_7vbfMass_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_7vbfMass_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_7vbfMass___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5245
 * 
 *     property vbfMass:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfMass_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMass_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_7vbfMass___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5246
 *     property vbfMass:
 *         def __get__(self):
 *             self.vbfMass_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfMass_value
 * 
 */
  __pyx_v_self->vbfMass_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5247
 *         def __get__(self):
 *             self.vbfMass_branch.GetEntry(self.localentry, 0)
 *             return self.vbfMass_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfNJets:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfMass_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5247; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.vbfMass.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8vbfNJets_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8vbfNJets_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_8vbfNJets___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5250
 * 
 *     property vbfNJets:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfNJets_branch.GetEntry(self.localentry, 0)
 *             return self.vbfNJets_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8vbfNJets___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5251
 *     property vbfNJets:
 *         def __get__(self):
 *             self.vbfNJets_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfNJets_value
 * 
 */
  __pyx_v_self->vbfNJets_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5252
 *         def __get__(self):
 *             self.vbfNJets_branch.GetEntry(self.localentry, 0)
 *             return self.vbfNJets_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfVispt:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfNJets_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5252; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.vbfNJets.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8vbfVispt_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8vbfVispt_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_8vbfVispt___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5255
 * 
 *     property vbfVispt:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfVispt_branch.GetEntry(self.localentry, 0)
 *             return self.vbfVispt_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8vbfVispt___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5256
 *     property vbfVispt:
 *         def __get__(self):
 *             self.vbfVispt_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfVispt_value
 * 
 */
  __pyx_v_self->vbfVispt_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5257
 *         def __get__(self):
 *             self.vbfVispt_branch.GetEntry(self.localentry, 0)
 *             return self.vbfVispt_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfj1eta:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfVispt_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5257; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.vbfVispt.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8vbfj1eta_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8vbfj1eta_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_8vbfj1eta___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5260
 * 
 *     property vbfj1eta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfj1eta_branch.GetEntry(self.localentry, 0)
 *             return self.vbfj1eta_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8vbfj1eta___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5261
 *     property vbfj1eta:
 *         def __get__(self):
 *             self.vbfj1eta_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfj1eta_value
 * 
 */
  __pyx_v_self->vbfj1eta_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5262
 *         def __get__(self):
 *             self.vbfj1eta_branch.GetEntry(self.localentry, 0)
 *             return self.vbfj1eta_value             # <<<<<<<<<<<<<<
 * 
 *     property vbfj2eta:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfj1eta_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5262; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.vbfj1eta.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8vbfj2eta_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_8vbfj2eta_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_8vbfj2eta___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5265
 * 
 *     property vbfj2eta:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.vbfj2eta_branch.GetEntry(self.localentry, 0)
 *             return self.vbfj2eta_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_8vbfj2eta___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5266
 *     property vbfj2eta:
 *         def __get__(self):
 *             self.vbfj2eta_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.vbfj2eta_value
 * 
 */
  __pyx_v_self->vbfj2eta_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5267
 *         def __get__(self):
 *             self.vbfj2eta_branch.GetEntry(self.localentry, 0)
 *             return self.vbfj2eta_value             # <<<<<<<<<<<<<<
 * 
 *     property idx:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->vbfj2eta_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5267; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.vbfj2eta.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3idx_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_3idx_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_3idx___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":5270
 * 
 *     property idx:
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.idx_branch.GetEntry(self.localentry, 0)
 *             return self.idx_value
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_3idx___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "MuTauTree.pyx":5271
 *     property idx:
 *         def __get__(self):
 *             self.idx_branch.GetEntry(self.localentry, 0)             # <<<<<<<<<<<<<<
 *             return self.idx_value
 * 
 */
  __pyx_v_self->idx_branch->GetEntry(__pyx_v_self->localentry, 0);

  /* "MuTauTree.pyx":5272
 *         def __get__(self):
 *             self.idx_branch.GetEntry(self.localentry, 0)
 *             return self.idx_value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(__pyx_v_self->idx_value); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5272; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("MuTauTree.MuTauTree.idx.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10complained_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_9MuTauTree_9MuTauTree_10complained_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_10complained___get__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "MuTauTree.pyx":51
 *     cdef long localentry
 *     # Keep track of missing branches we have complained about.
 *     cdef public set complained             # <<<<<<<<<<<<<<
 * 
 *     # Branches and address for all
 */

static PyObject *__pyx_pf_9MuTauTree_9MuTauTree_10complained___get__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->complained));
  __pyx_r = ((PyObject *)__pyx_v_self->complained);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9MuTauTree_9MuTauTree_10complained_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_9MuTauTree_9MuTauTree_10complained_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_10complained_2__set__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self), ((PyObject *)__pyx_v_value));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9MuTauTree_9MuTauTree_10complained_2__set__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PySet_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected set, got %.200s", Py_TYPE(__pyx_v_value)->tp_name), 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->complained);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->complained));
  __pyx_v_self->complained = ((PyObject*)__pyx_v_value);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("MuTauTree.MuTauTree.complained.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_9MuTauTree_9MuTauTree_10complained_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_9MuTauTree_9MuTauTree_10complained_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_9MuTauTree_9MuTauTree_10complained_4__del__(((struct __pyx_obj_9MuTauTree_MuTauTree *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_9MuTauTree_9MuTauTree_10complained_4__del__(struct __pyx_obj_9MuTauTree_MuTauTree *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->complained);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->complained));
  __pyx_v_self->complained = ((PyObject*)Py_None);

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static struct __pyx_obj_9MuTauTree___pyx_scope_struct____iter__ *__pyx_freelist_9MuTauTree___pyx_scope_struct____iter__[8];
static int __pyx_freecount_9MuTauTree___pyx_scope_struct____iter__ = 0;

static PyObject *__pyx_tp_new_9MuTauTree___pyx_scope_struct____iter__(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_9MuTauTree___pyx_scope_struct____iter__ *p;
  PyObject *o;
  if (likely((__pyx_freecount_9MuTauTree___pyx_scope_struct____iter__ > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_9MuTauTree___pyx_scope_struct____iter__)))) {
    o = (PyObject*)__pyx_freelist_9MuTauTree___pyx_scope_struct____iter__[--__pyx_freecount_9MuTauTree___pyx_scope_struct____iter__];
    memset(o, 0, sizeof(struct __pyx_obj_9MuTauTree___pyx_scope_struct____iter__));
    PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  p = ((struct __pyx_obj_9MuTauTree___pyx_scope_struct____iter__ *)o);
  p->__pyx_v_self = 0;
  return o;
}

static void __pyx_tp_dealloc_9MuTauTree___pyx_scope_struct____iter__(PyObject *o) {
  struct __pyx_obj_9MuTauTree___pyx_scope_struct____iter__ *p = (struct __pyx_obj_9MuTauTree___pyx_scope_struct____iter__ *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_self);
  if ((__pyx_freecount_9MuTauTree___pyx_scope_struct____iter__ < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_9MuTauTree___pyx_scope_struct____iter__))) {
    __pyx_freelist_9MuTauTree___pyx_scope_struct____iter__[__pyx_freecount_9MuTauTree___pyx_scope_struct____iter__++] = ((struct __pyx_obj_9MuTauTree___pyx_scope_struct____iter__ *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_9MuTauTree___pyx_scope_struct____iter__(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_9MuTauTree___pyx_scope_struct____iter__ *p = (struct __pyx_obj_9MuTauTree___pyx_scope_struct____iter__ *)o;
  if (p->__pyx_v_self) {
    e = (*v)(((PyObject*)p->__pyx_v_self), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_9MuTauTree___pyx_scope_struct____iter__(PyObject *o) {
  struct __pyx_obj_9MuTauTree___pyx_scope_struct____iter__ *p = (struct __pyx_obj_9MuTauTree___pyx_scope_struct____iter__ *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->__pyx_v_self);
  p->__pyx_v_self = ((struct __pyx_obj_9MuTauTree_MuTauTree *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_9MuTauTree___pyx_scope_struct____iter__[] = {
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_9MuTauTree___pyx_scope_struct____iter__ = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("MuTauTree.__pyx_scope_struct____iter__"), /*tp_name*/
  sizeof(struct __pyx_obj_9MuTauTree___pyx_scope_struct____iter__), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9MuTauTree___pyx_scope_struct____iter__, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_9MuTauTree___pyx_scope_struct____iter__, /*tp_traverse*/
  __pyx_tp_clear_9MuTauTree___pyx_scope_struct____iter__, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9MuTauTree___pyx_scope_struct____iter__, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9MuTauTree___pyx_scope_struct____iter__, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static struct __pyx_obj_9MuTauTree___pyx_scope_struct_1_where *__pyx_freelist_9MuTauTree___pyx_scope_struct_1_where[8];
static int __pyx_freecount_9MuTauTree___pyx_scope_struct_1_where = 0;

static PyObject *__pyx_tp_new_9MuTauTree___pyx_scope_struct_1_where(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_9MuTauTree___pyx_scope_struct_1_where *p;
  PyObject *o;
  if (likely((__pyx_freecount_9MuTauTree___pyx_scope_struct_1_where > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_9MuTauTree___pyx_scope_struct_1_where)))) {
    o = (PyObject*)__pyx_freelist_9MuTauTree___pyx_scope_struct_1_where[--__pyx_freecount_9MuTauTree___pyx_scope_struct_1_where];
    memset(o, 0, sizeof(struct __pyx_obj_9MuTauTree___pyx_scope_struct_1_where));
    PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  p = ((struct __pyx_obj_9MuTauTree___pyx_scope_struct_1_where *)o);
  p->__pyx_v_filter = 0;
  p->__pyx_v_self = 0;
  return o;
}

static void __pyx_tp_dealloc_9MuTauTree___pyx_scope_struct_1_where(PyObject *o) {
  struct __pyx_obj_9MuTauTree___pyx_scope_struct_1_where *p = (struct __pyx_obj_9MuTauTree___pyx_scope_struct_1_where *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_filter);
  Py_CLEAR(p->__pyx_v_self);
  if ((__pyx_freecount_9MuTauTree___pyx_scope_struct_1_where < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_9MuTauTree___pyx_scope_struct_1_where))) {
    __pyx_freelist_9MuTauTree___pyx_scope_struct_1_where[__pyx_freecount_9MuTauTree___pyx_scope_struct_1_where++] = ((struct __pyx_obj_9MuTauTree___pyx_scope_struct_1_where *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_9MuTauTree___pyx_scope_struct_1_where(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_9MuTauTree___pyx_scope_struct_1_where *p = (struct __pyx_obj_9MuTauTree___pyx_scope_struct_1_where *)o;
  if (p->__pyx_v_filter) {
    e = (*v)(p->__pyx_v_filter, a); if (e) return e;
  }
  if (p->__pyx_v_self) {
    e = (*v)(((PyObject*)p->__pyx_v_self), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_9MuTauTree___pyx_scope_struct_1_where(PyObject *o) {
  struct __pyx_obj_9MuTauTree___pyx_scope_struct_1_where *p = (struct __pyx_obj_9MuTauTree___pyx_scope_struct_1_where *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->__pyx_v_filter);
  p->__pyx_v_filter = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_self);
  p->__pyx_v_self = ((struct __pyx_obj_9MuTauTree_MuTauTree *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_9MuTauTree___pyx_scope_struct_1_where[] = {
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_9MuTauTree___pyx_scope_struct_1_where = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("MuTauTree.__pyx_scope_struct_1_where"), /*tp_name*/
  sizeof(struct __pyx_obj_9MuTauTree___pyx_scope_struct_1_where), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9MuTauTree___pyx_scope_struct_1_where, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_9MuTauTree___pyx_scope_struct_1_where, /*tp_traverse*/
  __pyx_tp_clear_9MuTauTree___pyx_scope_struct_1_where, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9MuTauTree___pyx_scope_struct_1_where, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9MuTauTree___pyx_scope_struct_1_where, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};
static struct __pyx_vtabstruct_9MuTauTree_MuTauTree __pyx_vtable_9MuTauTree_MuTauTree;

static PyObject *__pyx_tp_new_9MuTauTree_MuTauTree(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_9MuTauTree_MuTauTree *p;
  PyObject *o;
  o = (*t->tp_alloc)(t, 0);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_9MuTauTree_MuTauTree *)o);
  p->__pyx_vtab = __pyx_vtabptr_9MuTauTree_MuTauTree;
  p->complained = ((PyObject*)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_9MuTauTree_9MuTauTree_1__cinit__(o, a, k) < 0)) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_9MuTauTree_MuTauTree(PyObject *o) {
  struct __pyx_obj_9MuTauTree_MuTauTree *p = (struct __pyx_obj_9MuTauTree_MuTauTree *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->complained);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_9MuTauTree_MuTauTree(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_9MuTauTree_MuTauTree *p = (struct __pyx_obj_9MuTauTree_MuTauTree *)o;
  if (p->complained) {
    e = (*v)(p->complained, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_9MuTauTree_MuTauTree(PyObject *o) {
  struct __pyx_obj_9MuTauTree_MuTauTree *p = (struct __pyx_obj_9MuTauTree_MuTauTree *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->complained);
  p->complained = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_entry(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_5entry_1__get__(o);
}

static int __pyx_setprop_9MuTauTree_9MuTauTree_entry(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9MuTauTree_9MuTauTree_5entry_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_LT(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_2LT_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_Mass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_4Mass_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_MassError(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_9MassError_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_MassErrord1(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_11MassErrord1_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_MassErrord2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_11MassErrord2_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_MassErrord3(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_11MassErrord3_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_MassErrord4(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_11MassErrord4_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_Pt(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_2Pt_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_bjetCSVVeto(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_11bjetCSVVeto_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_bjetCSVVeto30(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_13bjetCSVVeto30_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_bjetCSVVetoZHLike(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_17bjetCSVVetoZHLike_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_bjetCSVVetoZHLikeNoJetId(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_24bjetCSVVetoZHLikeNoJetId_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_bjetVeto(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_8bjetVeto_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_charge(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_6charge_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_doubleEExtraGroup(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_17doubleEExtraGroup_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_doubleEExtraPass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_16doubleEExtraPass_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_doubleEExtraPrescale(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_20doubleEExtraPrescale_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_doubleEGroup(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_12doubleEGroup_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_doubleEPass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_11doubleEPass_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_doubleEPrescale(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_15doubleEPrescale_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_doubleETightGroup(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_17doubleETightGroup_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_doubleETightPass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_16doubleETightPass_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_doubleETightPrescale(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_20doubleETightPrescale_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_doubleMuGroup(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_13doubleMuGroup_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_doubleMuPass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_12doubleMuPass_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_doubleMuPrescale(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_16doubleMuPrescale_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_doubleMuTrkGroup(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_16doubleMuTrkGroup_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_doubleMuTrkPass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_15doubleMuTrkPass_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_doubleMuTrkPrescale(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_19doubleMuTrkPrescale_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_doublePhoGroup(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_14doublePhoGroup_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_doublePhoPass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_13doublePhoPass_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_doublePhoPrescale(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_17doublePhoPrescale_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_eVetoCicTightIso(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_16eVetoCicTightIso_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_eVetoMVAIso(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_11eVetoMVAIso_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_eVetoMVAIsoVtx(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_14eVetoMVAIsoVtx_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_evt(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_3evt_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_isGtautau(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_9isGtautau_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_isWmunu(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_7isWmunu_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_isWtaunu(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_8isWtaunu_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_isZtautau(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_9isZtautau_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_isdata(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_6isdata_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_isoMu24eta2p1Group(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_18isoMu24eta2p1Group_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_isoMu24eta2p1Pass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_17isoMu24eta2p1Pass_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_isoMu24eta2p1Prescale(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_21isoMu24eta2p1Prescale_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_isoMuGroup(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_10isoMuGroup_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_isoMuPass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_9isoMuPass_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_isoMuPrescale(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_13isoMuPrescale_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_isoMuTauGroup(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_13isoMuTauGroup_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_isoMuTauPass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_12isoMuTauPass_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_isoMuTauPrescale(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_16isoMuTauPrescale_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_jetVeto20(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_9jetVeto20_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_jetVeto30(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_9jetVeto30_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_jetVeto40(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_9jetVeto40_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_lumi(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_4lumi_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mAbsEta(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_7mAbsEta_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mCharge(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_7mCharge_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mComesFromHiggs(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_15mComesFromHiggs_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mD0(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_3mD0_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mDZ(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_3mDZ_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mDiMuonL3PreFiltered7(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_21mDiMuonL3PreFiltered7_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mDiMuonL3p5PreFiltered8(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_23mDiMuonL3p5PreFiltered8_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mDiMuonMu17Mu8DzFiltered0p2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_27mDiMuonMu17Mu8DzFiltered0p2_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mEErrRochCor2011A(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_17mEErrRochCor2011A_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mEErrRochCor2011B(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_17mEErrRochCor2011B_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mEErrRochCor2012(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_16mEErrRochCor2012_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mERochCor2011A(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_14mERochCor2011A_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mERochCor2011B(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_14mERochCor2011B_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mERochCor2012(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_13mERochCor2012_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mEffectiveArea2011(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_18mEffectiveArea2011_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mEffectiveArea2012(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_18mEffectiveArea2012_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mEta(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_4mEta_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mEtaRochCor2011A(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_16mEtaRochCor2011A_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mEtaRochCor2011B(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_16mEtaRochCor2011B_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mEtaRochCor2012(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_15mEtaRochCor2012_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mGenMotherPdgId(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_15mGenMotherPdgId_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mGlbTrkHits(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_11mGlbTrkHits_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mIDHZG2011(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_10mIDHZG2011_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mIDHZG2012(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_10mIDHZG2012_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mIP3DS(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_6mIP3DS_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mIsGlobal(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_9mIsGlobal_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mIsTracker(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_10mIsTracker_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mJetArea(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_8mJetArea_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mJetBtag(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_8mJetBtag_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mJetCSVBtag(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_11mJetCSVBtag_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mJetEtaEtaMoment(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_16mJetEtaEtaMoment_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mJetEtaPhiMoment(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_16mJetEtaPhiMoment_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mJetEtaPhiSpread(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_16mJetEtaPhiSpread_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mJetPhiPhiMoment(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_16mJetPhiPhiMoment_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mJetPt(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_6mJetPt_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mL1Mu3EG5L3Filtered17(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_21mL1Mu3EG5L3Filtered17_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mL3fL1DoubleMu10MuOpenL1f0L2f10L3Filtered17(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_43mL3fL1DoubleMu10MuOpenL1f0L2f10L3Filtered17_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mMass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_5mMass_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mMatchedStations(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_16mMatchedStations_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mMatchesDoubleMu2011Paths(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_25mMatchesDoubleMu2011Paths_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mMatchesIsoMu24eta2p1(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_21mMatchesIsoMu24eta2p1_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mMatchesIsoMuGroup(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_18mMatchesIsoMuGroup_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mMatchesMu17Ele8Path(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_20mMatchesMu17Ele8Path_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mMatchesMu17Mu8Path(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_19mMatchesMu17Mu8Path_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mMatchesMu17TrkMu8Path(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_22mMatchesMu17TrkMu8Path_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mMatchesMu8Ele17Path(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_20mMatchesMu8Ele17Path_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mMtToMET(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_8mMtToMET_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mMtToMVAMET(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_11mMtToMVAMET_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mMtToPFMET(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_10mMtToPFMET_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mMtToPfMet_Ty1(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_14mMtToPfMet_Ty1_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mMtToPfMet_jes(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_14mMtToPfMet_jes_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mMtToPfMet_mes(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_14mMtToPfMet_mes_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mMtToPfMet_tes(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_14mMtToPfMet_tes_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mMtToPfMet_ues(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_14mMtToPfMet_ues_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mMu17Ele8dZFilter(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_17mMu17Ele8dZFilter_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mMuonHits(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_9mMuonHits_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mNormTrkChi2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_12mNormTrkChi2_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mPFChargedIso(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_13mPFChargedIso_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mPFIDTight(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_10mPFIDTight_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mPFNeutralIso(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_13mPFNeutralIso_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mPFPUChargedIso(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_15mPFPUChargedIso_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mPFPhotonIso(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_12mPFPhotonIso_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mPVDXY(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_6mPVDXY_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mPVDZ(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_5mPVDZ_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mPhi(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_4mPhi_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mPhiRochCor2011A(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_16mPhiRochCor2011A_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mPhiRochCor2011B(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_16mPhiRochCor2011B_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mPhiRochCor2012(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_15mPhiRochCor2012_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mPixHits(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_8mPixHits_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mPt(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_3mPt_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mPtRochCor2011A(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_15mPtRochCor2011A_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mPtRochCor2011B(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_15mPtRochCor2011B_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mPtRochCor2012(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_14mPtRochCor2012_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mPtUncorr(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_9mPtUncorr_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mRelPFIsoDB(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_11mRelPFIsoDB_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mRhoHZG2011(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_11mRhoHZG2011_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mRhoHZG2012(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_11mRhoHZG2012_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mSingleMu13L3Filtered13(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_23mSingleMu13L3Filtered13_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mSingleMu13L3Filtered17(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_23mSingleMu13L3Filtered17_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mTkLayersWithMeasurement(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_24mTkLayersWithMeasurement_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mToMETDPhi(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_10mToMETDPhi_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mTypeCode(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_9mTypeCode_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mVBTFID(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_7mVBTFID_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mVZ(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_3mVZ_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mWWID(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_5mWWID_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_m_t_CosThetaStar(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_16m_t_CosThetaStar_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_m_t_DPhi(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_8m_t_DPhi_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_m_t_DR(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_6m_t_DR_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_m_t_Mass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_8m_t_Mass_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_m_t_PZeta(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_9m_t_PZeta_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_m_t_PZetaVis(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_12m_t_PZetaVis_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_m_t_Pt(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_6m_t_Pt_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_m_t_SS(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_6m_t_SS_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_m_t_ToMETDPhi_Ty1(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_17m_t_ToMETDPhi_Ty1_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_m_t_Zcompat(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_11m_t_Zcompat_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mu17ele8Group(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_13mu17ele8Group_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mu17ele8Pass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_12mu17ele8Pass_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mu17ele8Prescale(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_16mu17ele8Prescale_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mu17ele8isoGroup(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_16mu17ele8isoGroup_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mu17ele8isoPass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_15mu17ele8isoPass_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mu17ele8isoPrescale(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_19mu17ele8isoPrescale_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mu17mu8Group(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_12mu17mu8Group_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mu17mu8Pass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_11mu17mu8Pass_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mu17mu8Prescale(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_15mu17mu8Prescale_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mu8ele17Group(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_13mu8ele17Group_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mu8ele17Pass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_12mu8ele17Pass_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mu8ele17Prescale(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_16mu8ele17Prescale_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mu8ele17isoGroup(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_16mu8ele17isoGroup_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mu8ele17isoPass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_15mu8ele17isoPass_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mu8ele17isoPrescale(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_19mu8ele17isoPrescale_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_muGlbIsoVetoPt10(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_16muGlbIsoVetoPt10_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_muTauGroup(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_10muTauGroup_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_muTauPass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_9muTauPass_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_muTauPrescale(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_13muTauPrescale_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_muTauTestGroup(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_14muTauTestGroup_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_muTauTestPass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_13muTauTestPass_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_muTauTestPrescale(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_17muTauTestPrescale_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_muVetoPt15IsoIdVtx(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_18muVetoPt15IsoIdVtx_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_muVetoPt5(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_9muVetoPt5_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_muVetoPt5IsoIdVtx(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_17muVetoPt5IsoIdVtx_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mva_metEt(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_9mva_metEt_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_mva_metPhi(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_10mva_metPhi_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_nTruePU(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_7nTruePU_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_nvtx(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_4nvtx_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_pfMetEt(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_7pfMetEt_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_pfMetPhi(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_8pfMetPhi_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_pfMet_jes_Et(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_12pfMet_jes_Et_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_pfMet_jes_Phi(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_13pfMet_jes_Phi_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_pfMet_mes_Et(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_12pfMet_mes_Et_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_pfMet_mes_Phi(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_13pfMet_mes_Phi_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_pfMet_tes_Et(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_12pfMet_tes_Et_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_pfMet_tes_Phi(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_13pfMet_tes_Phi_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_pfMet_ues_Et(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_12pfMet_ues_Et_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_pfMet_ues_Phi(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_13pfMet_ues_Phi_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_processID(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_9processID_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_pvChi2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_6pvChi2_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_pvDX(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_4pvDX_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_pvDY(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_4pvDY_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_pvDZ(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_4pvDZ_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_pvIsFake(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_8pvIsFake_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_pvIsValid(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_9pvIsValid_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_pvNormChi2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_10pvNormChi2_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_pvX(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_3pvX_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_pvY(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_3pvY_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_pvZ(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_3pvZ_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_pvndof(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_6pvndof_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_recoilDaught(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_12recoilDaught_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_recoilWithMet(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_13recoilWithMet_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_rho(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_3rho_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_run(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_3run_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_singleEGroup(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_12singleEGroup_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_singleEPFMTGroup(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_16singleEPFMTGroup_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_singleEPFMTPass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_15singleEPFMTPass_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_singleEPFMTPrescale(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_19singleEPFMTPrescale_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_singleEPass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_11singleEPass_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_singleEPrescale(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_15singleEPrescale_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_singleMuGroup(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_13singleMuGroup_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_singleMuPass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_12singleMuPass_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_singleMuPrescale(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_16singleMuPrescale_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_singlePhoGroup(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_14singlePhoGroup_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_singlePhoPass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_13singlePhoPass_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_singlePhoPrescale(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_17singlePhoPrescale_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tAbsEta(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_7tAbsEta_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tAntiElectronLoose(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_18tAntiElectronLoose_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tAntiElectronMVA(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_16tAntiElectronMVA_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tAntiElectronMVA2Loose(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_22tAntiElectronMVA2Loose_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tAntiElectronMVA2Medium(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_23tAntiElectronMVA2Medium_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tAntiElectronMVA2Tight(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_22tAntiElectronMVA2Tight_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tAntiElectronMVA2Vloose(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_23tAntiElectronMVA2Vloose_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tAntiElectronMVA3Loose(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_22tAntiElectronMVA3Loose_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tAntiElectronMVA3Medium(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_23tAntiElectronMVA3Medium_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tAntiElectronMVA3Tight(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_22tAntiElectronMVA3Tight_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tAntiElectronMVA3VTight(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_23tAntiElectronMVA3VTight_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tAntiElectronMedium(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_19tAntiElectronMedium_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tAntiElectronTight(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_18tAntiElectronTight_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tAntiMuonLoose(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_14tAntiMuonLoose_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tAntiMuonLoose2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_15tAntiMuonLoose2_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tAntiMuonMedium(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_15tAntiMuonMedium_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tAntiMuonMedium2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_16tAntiMuonMedium2_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tAntiMuonTight(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_14tAntiMuonTight_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tAntiMuonTight2(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_15tAntiMuonTight2_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tCharge(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_7tCharge_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tCiCTightElecOverlap(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_20tCiCTightElecOverlap_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tDZ(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_3tDZ_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tDecayFinding(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_13tDecayFinding_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tDecayMode(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_10tDecayMode_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tElecOverlap(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_12tElecOverlap_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tEta(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_4tEta_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tGenDecayMode(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_13tGenDecayMode_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tIP3DS(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_6tIP3DS_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tJetArea(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_8tJetArea_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tJetBtag(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_8tJetBtag_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tJetCSVBtag(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_11tJetCSVBtag_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tJetEtaEtaMoment(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_16tJetEtaEtaMoment_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tJetEtaPhiMoment(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_16tJetEtaPhiMoment_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tJetEtaPhiSpread(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_16tJetEtaPhiSpread_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tJetPhiPhiMoment(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_16tJetPhiPhiMoment_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tJetPt(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_6tJetPt_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tLeadTrackPt(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_12tLeadTrackPt_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tLooseIso(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_9tLooseIso_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tLooseIso3Hits(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_14tLooseIso3Hits_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tLooseMVA2Iso(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_13tLooseMVA2Iso_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tLooseMVAIso(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_12tLooseMVAIso_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tMass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_5tMass_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tMediumIso(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_10tMediumIso_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tMediumIso3Hits(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_15tMediumIso3Hits_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tMediumMVA2Iso(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_14tMediumMVA2Iso_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tMediumMVAIso(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_13tMediumMVAIso_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tMtToMET(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_8tMtToMET_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tMtToMVAMET(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_11tMtToMVAMET_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tMtToPFMET(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_10tMtToPFMET_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tMtToPfMet_Ty1(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_14tMtToPfMet_Ty1_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tMtToPfMet_jes(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_14tMtToPfMet_jes_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tMtToPfMet_mes(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_14tMtToPfMet_mes_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tMtToPfMet_tes(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_14tMtToPfMet_tes_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tMtToPfMet_ues(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_14tMtToPfMet_ues_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tMuOverlap(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_10tMuOverlap_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tPhi(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_4tPhi_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tPt(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_3tPt_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tTNPId(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_6tTNPId_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tTightIso(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_9tTightIso_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tTightIso3Hits(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_14tTightIso3Hits_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tTightMVA2Iso(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_13tTightMVA2Iso_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tTightMVAIso(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_12tTightMVAIso_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tToMETDPhi(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_10tToMETDPhi_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tVLooseIso(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_10tVLooseIso_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tVZ(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_3tVZ_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tauHpsVetoPt20(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_14tauHpsVetoPt20_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tauVetoPt20(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_11tauVetoPt20_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tauVetoPt20Loose3HitsVtx(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_24tauVetoPt20Loose3HitsVtx_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tauVetoPt20LooseMVA2Vtx(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_23tauVetoPt20LooseMVA2Vtx_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tauVetoPt20LooseMVAVtx(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_22tauVetoPt20LooseMVAVtx_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_tauVetoPt20VLooseHPSVtx(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_23tauVetoPt20VLooseHPSVtx_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_type1_pfMetEt(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_13type1_pfMetEt_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_type1_pfMetPhi(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_14type1_pfMetPhi_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_vbfDeta(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_7vbfDeta_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_vbfDijetrap(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_11vbfDijetrap_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_vbfDphihj(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_9vbfDphihj_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_vbfDphihjnomet(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_14vbfDphihjnomet_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_vbfHrap(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_7vbfHrap_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_vbfJetVeto20(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_12vbfJetVeto20_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_vbfJetVeto30(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_12vbfJetVeto30_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_vbfMVA(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_6vbfMVA_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_vbfMass(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_7vbfMass_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_vbfNJets(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_8vbfNJets_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_vbfVispt(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_8vbfVispt_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_vbfj1eta(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_8vbfj1eta_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_vbfj2eta(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_8vbfj2eta_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_idx(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_3idx_1__get__(o);
}

static PyObject *__pyx_getprop_9MuTauTree_9MuTauTree_complained(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_9MuTauTree_9MuTauTree_10complained_1__get__(o);
}

static int __pyx_setprop_9MuTauTree_9MuTauTree_complained(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_9MuTauTree_9MuTauTree_10complained_3__set__(o, v);
  }
  else {
    return __pyx_pw_9MuTauTree_9MuTauTree_10complained_5__del__(o);
  }
}

static PyMethodDef __pyx_methods_9MuTauTree_MuTauTree[] = {
  {__Pyx_NAMESTR("where"), (PyCFunction)__pyx_pw_9MuTauTree_9MuTauTree_6where, METH_O, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_9MuTauTree_MuTauTree[] = {
  {(char *)"entry", __pyx_getprop_9MuTauTree_9MuTauTree_entry, __pyx_setprop_9MuTauTree_9MuTauTree_entry, 0, 0},
  {(char *)"LT", __pyx_getprop_9MuTauTree_9MuTauTree_LT, 0, 0, 0},
  {(char *)"Mass", __pyx_getprop_9MuTauTree_9MuTauTree_Mass, 0, 0, 0},
  {(char *)"MassError", __pyx_getprop_9MuTauTree_9MuTauTree_MassError, 0, 0, 0},
  {(char *)"MassErrord1", __pyx_getprop_9MuTauTree_9MuTauTree_MassErrord1, 0, 0, 0},
  {(char *)"MassErrord2", __pyx_getprop_9MuTauTree_9MuTauTree_MassErrord2, 0, 0, 0},
  {(char *)"MassErrord3", __pyx_getprop_9MuTauTree_9MuTauTree_MassErrord3, 0, 0, 0},
  {(char *)"MassErrord4", __pyx_getprop_9MuTauTree_9MuTauTree_MassErrord4, 0, 0, 0},
  {(char *)"Pt", __pyx_getprop_9MuTauTree_9MuTauTree_Pt, 0, 0, 0},
  {(char *)"bjetCSVVeto", __pyx_getprop_9MuTauTree_9MuTauTree_bjetCSVVeto, 0, 0, 0},
  {(char *)"bjetCSVVeto30", __pyx_getprop_9MuTauTree_9MuTauTree_bjetCSVVeto30, 0, 0, 0},
  {(char *)"bjetCSVVetoZHLike", __pyx_getprop_9MuTauTree_9MuTauTree_bjetCSVVetoZHLike, 0, 0, 0},
  {(char *)"bjetCSVVetoZHLikeNoJetId", __pyx_getprop_9MuTauTree_9MuTauTree_bjetCSVVetoZHLikeNoJetId, 0, 0, 0},
  {(char *)"bjetVeto", __pyx_getprop_9MuTauTree_9MuTauTree_bjetVeto, 0, 0, 0},
  {(char *)"charge", __pyx_getprop_9MuTauTree_9MuTauTree_charge, 0, 0, 0},
  {(char *)"doubleEExtraGroup", __pyx_getprop_9MuTauTree_9MuTauTree_doubleEExtraGroup, 0, 0, 0},
  {(char *)"doubleEExtraPass", __pyx_getprop_9MuTauTree_9MuTauTree_doubleEExtraPass, 0, 0, 0},
  {(char *)"doubleEExtraPrescale", __pyx_getprop_9MuTauTree_9MuTauTree_doubleEExtraPrescale, 0, 0, 0},
  {(char *)"doubleEGroup", __pyx_getprop_9MuTauTree_9MuTauTree_doubleEGroup, 0, 0, 0},
  {(char *)"doubleEPass", __pyx_getprop_9MuTauTree_9MuTauTree_doubleEPass, 0, 0, 0},
  {(char *)"doubleEPrescale", __pyx_getprop_9MuTauTree_9MuTauTree_doubleEPrescale, 0, 0, 0},
  {(char *)"doubleETightGroup", __pyx_getprop_9MuTauTree_9MuTauTree_doubleETightGroup, 0, 0, 0},
  {(char *)"doubleETightPass", __pyx_getprop_9MuTauTree_9MuTauTree_doubleETightPass, 0, 0, 0},
  {(char *)"doubleETightPrescale", __pyx_getprop_9MuTauTree_9MuTauTree_doubleETightPrescale, 0, 0, 0},
  {(char *)"doubleMuGroup", __pyx_getprop_9MuTauTree_9MuTauTree_doubleMuGroup, 0, 0, 0},
  {(char *)"doubleMuPass", __pyx_getprop_9MuTauTree_9MuTauTree_doubleMuPass, 0, 0, 0},
  {(char *)"doubleMuPrescale", __pyx_getprop_9MuTauTree_9MuTauTree_doubleMuPrescale, 0, 0, 0},
  {(char *)"doubleMuTrkGroup", __pyx_getprop_9MuTauTree_9MuTauTree_doubleMuTrkGroup, 0, 0, 0},
  {(char *)"doubleMuTrkPass", __pyx_getprop_9MuTauTree_9MuTauTree_doubleMuTrkPass, 0, 0, 0},
  {(char *)"doubleMuTrkPrescale", __pyx_getprop_9MuTauTree_9MuTauTree_doubleMuTrkPrescale, 0, 0, 0},
  {(char *)"doublePhoGroup", __pyx_getprop_9MuTauTree_9MuTauTree_doublePhoGroup, 0, 0, 0},
  {(char *)"doublePhoPass", __pyx_getprop_9MuTauTree_9MuTauTree_doublePhoPass, 0, 0, 0},
  {(char *)"doublePhoPrescale", __pyx_getprop_9MuTauTree_9MuTauTree_doublePhoPrescale, 0, 0, 0},
  {(char *)"eVetoCicTightIso", __pyx_getprop_9MuTauTree_9MuTauTree_eVetoCicTightIso, 0, 0, 0},
  {(char *)"eVetoMVAIso", __pyx_getprop_9MuTauTree_9MuTauTree_eVetoMVAIso, 0, 0, 0},
  {(char *)"eVetoMVAIsoVtx", __pyx_getprop_9MuTauTree_9MuTauTree_eVetoMVAIsoVtx, 0, 0, 0},
  {(char *)"evt", __pyx_getprop_9MuTauTree_9MuTauTree_evt, 0, 0, 0},
  {(char *)"isGtautau", __pyx_getprop_9MuTauTree_9MuTauTree_isGtautau, 0, 0, 0},
  {(char *)"isWmunu", __pyx_getprop_9MuTauTree_9MuTauTree_isWmunu, 0, 0, 0},
  {(char *)"isWtaunu", __pyx_getprop_9MuTauTree_9MuTauTree_isWtaunu, 0, 0, 0},
  {(char *)"isZtautau", __pyx_getprop_9MuTauTree_9MuTauTree_isZtautau, 0, 0, 0},
  {(char *)"isdata", __pyx_getprop_9MuTauTree_9MuTauTree_isdata, 0, 0, 0},
  {(char *)"isoMu24eta2p1Group", __pyx_getprop_9MuTauTree_9MuTauTree_isoMu24eta2p1Group, 0, 0, 0},
  {(char *)"isoMu24eta2p1Pass", __pyx_getprop_9MuTauTree_9MuTauTree_isoMu24eta2p1Pass, 0, 0, 0},
  {(char *)"isoMu24eta2p1Prescale", __pyx_getprop_9MuTauTree_9MuTauTree_isoMu24eta2p1Prescale, 0, 0, 0},
  {(char *)"isoMuGroup", __pyx_getprop_9MuTauTree_9MuTauTree_isoMuGroup, 0, 0, 0},
  {(char *)"isoMuPass", __pyx_getprop_9MuTauTree_9MuTauTree_isoMuPass, 0, 0, 0},
  {(char *)"isoMuPrescale", __pyx_getprop_9MuTauTree_9MuTauTree_isoMuPrescale, 0, 0, 0},
  {(char *)"isoMuTauGroup", __pyx_getprop_9MuTauTree_9MuTauTree_isoMuTauGroup, 0, 0, 0},
  {(char *)"isoMuTauPass", __pyx_getprop_9MuTauTree_9MuTauTree_isoMuTauPass, 0, 0, 0},
  {(char *)"isoMuTauPrescale", __pyx_getprop_9MuTauTree_9MuTauTree_isoMuTauPrescale, 0, 0, 0},
  {(char *)"jetVeto20", __pyx_getprop_9MuTauTree_9MuTauTree_jetVeto20, 0, 0, 0},
  {(char *)"jetVeto30", __pyx_getprop_9MuTauTree_9MuTauTree_jetVeto30, 0, 0, 0},
  {(char *)"jetVeto40", __pyx_getprop_9MuTauTree_9MuTauTree_jetVeto40, 0, 0, 0},
  {(char *)"lumi", __pyx_getprop_9MuTauTree_9MuTauTree_lumi, 0, 0, 0},
  {(char *)"mAbsEta", __pyx_getprop_9MuTauTree_9MuTauTree_mAbsEta, 0, 0, 0},
  {(char *)"mCharge", __pyx_getprop_9MuTauTree_9MuTauTree_mCharge, 0, 0, 0},
  {(char *)"mComesFromHiggs", __pyx_getprop_9MuTauTree_9MuTauTree_mComesFromHiggs, 0, 0, 0},
  {(char *)"mD0", __pyx_getprop_9MuTauTree_9MuTauTree_mD0, 0, 0, 0},
  {(char *)"mDZ", __pyx_getprop_9MuTauTree_9MuTauTree_mDZ, 0, 0, 0},
  {(char *)"mDiMuonL3PreFiltered7", __pyx_getprop_9MuTauTree_9MuTauTree_mDiMuonL3PreFiltered7, 0, 0, 0},
  {(char *)"mDiMuonL3p5PreFiltered8", __pyx_getprop_9MuTauTree_9MuTauTree_mDiMuonL3p5PreFiltered8, 0, 0, 0},
  {(char *)"mDiMuonMu17Mu8DzFiltered0p2", __pyx_getprop_9MuTauTree_9MuTauTree_mDiMuonMu17Mu8DzFiltered0p2, 0, 0, 0},
  {(char *)"mEErrRochCor2011A", __pyx_getprop_9MuTauTree_9MuTauTree_mEErrRochCor2011A, 0, 0, 0},
  {(char *)"mEErrRochCor2011B", __pyx_getprop_9MuTauTree_9MuTauTree_mEErrRochCor2011B, 0, 0, 0},
  {(char *)"mEErrRochCor2012", __pyx_getprop_9MuTauTree_9MuTauTree_mEErrRochCor2012, 0, 0, 0},
  {(char *)"mERochCor2011A", __pyx_getprop_9MuTauTree_9MuTauTree_mERochCor2011A, 0, 0, 0},
  {(char *)"mERochCor2011B", __pyx_getprop_9MuTauTree_9MuTauTree_mERochCor2011B, 0, 0, 0},
  {(char *)"mERochCor2012", __pyx_getprop_9MuTauTree_9MuTauTree_mERochCor2012, 0, 0, 0},
  {(char *)"mEffectiveArea2011", __pyx_getprop_9MuTauTree_9MuTauTree_mEffectiveArea2011, 0, 0, 0},
  {(char *)"mEffectiveArea2012", __pyx_getprop_9MuTauTree_9MuTauTree_mEffectiveArea2012, 0, 0, 0},
  {(char *)"mEta", __pyx_getprop_9MuTauTree_9MuTauTree_mEta, 0, 0, 0},
  {(char *)"mEtaRochCor2011A", __pyx_getprop_9MuTauTree_9MuTauTree_mEtaRochCor2011A, 0, 0, 0},
  {(char *)"mEtaRochCor2011B", __pyx_getprop_9MuTauTree_9MuTauTree_mEtaRochCor2011B, 0, 0, 0},
  {(char *)"mEtaRochCor2012", __pyx_getprop_9MuTauTree_9MuTauTree_mEtaRochCor2012, 0, 0, 0},
  {(char *)"mGenMotherPdgId", __pyx_getprop_9MuTauTree_9MuTauTree_mGenMotherPdgId, 0, 0, 0},
  {(char *)"mGlbTrkHits", __pyx_getprop_9MuTauTree_9MuTauTree_mGlbTrkHits, 0, 0, 0},
  {(char *)"mIDHZG2011", __pyx_getprop_9MuTauTree_9MuTauTree_mIDHZG2011, 0, 0, 0},
  {(char *)"mIDHZG2012", __pyx_getprop_9MuTauTree_9MuTauTree_mIDHZG2012, 0, 0, 0},
  {(char *)"mIP3DS", __pyx_getprop_9MuTauTree_9MuTauTree_mIP3DS, 0, 0, 0},
  {(char *)"mIsGlobal", __pyx_getprop_9MuTauTree_9MuTauTree_mIsGlobal, 0, 0, 0},
  {(char *)"mIsTracker", __pyx_getprop_9MuTauTree_9MuTauTree_mIsTracker, 0, 0, 0},
  {(char *)"mJetArea", __pyx_getprop_9MuTauTree_9MuTauTree_mJetArea, 0, 0, 0},
  {(char *)"mJetBtag", __pyx_getprop_9MuTauTree_9MuTauTree_mJetBtag, 0, 0, 0},
  {(char *)"mJetCSVBtag", __pyx_getprop_9MuTauTree_9MuTauTree_mJetCSVBtag, 0, 0, 0},
  {(char *)"mJetEtaEtaMoment", __pyx_getprop_9MuTauTree_9MuTauTree_mJetEtaEtaMoment, 0, 0, 0},
  {(char *)"mJetEtaPhiMoment", __pyx_getprop_9MuTauTree_9MuTauTree_mJetEtaPhiMoment, 0, 0, 0},
  {(char *)"mJetEtaPhiSpread", __pyx_getprop_9MuTauTree_9MuTauTree_mJetEtaPhiSpread, 0, 0, 0},
  {(char *)"mJetPhiPhiMoment", __pyx_getprop_9MuTauTree_9MuTauTree_mJetPhiPhiMoment, 0, 0, 0},
  {(char *)"mJetPt", __pyx_getprop_9MuTauTree_9MuTauTree_mJetPt, 0, 0, 0},
  {(char *)"mL1Mu3EG5L3Filtered17", __pyx_getprop_9MuTauTree_9MuTauTree_mL1Mu3EG5L3Filtered17, 0, 0, 0},
  {(char *)"mL3fL1DoubleMu10MuOpenL1f0L2f10L3Filtered17", __pyx_getprop_9MuTauTree_9MuTauTree_mL3fL1DoubleMu10MuOpenL1f0L2f10L3Filtered17, 0, 0, 0},
  {(char *)"mMass", __pyx_getprop_9MuTauTree_9MuTauTree_mMass, 0, 0, 0},
  {(char *)"mMatchedStations", __pyx_getprop_9MuTauTree_9MuTauTree_mMatchedStations, 0, 0, 0},
  {(char *)"mMatchesDoubleMu2011Paths", __pyx_getprop_9MuTauTree_9MuTauTree_mMatchesDoubleMu2011Paths, 0, 0, 0},
  {(char *)"mMatchesIsoMu24eta2p1", __pyx_getprop_9MuTauTree_9MuTauTree_mMatchesIsoMu24eta2p1, 0, 0, 0},
  {(char *)"mMatchesIsoMuGroup", __pyx_getprop_9MuTauTree_9MuTauTree_mMatchesIsoMuGroup, 0, 0, 0},
  {(char *)"mMatchesMu17Ele8Path", __pyx_getprop_9MuTauTree_9MuTauTree_mMatchesMu17Ele8Path, 0, 0, 0},
  {(char *)"mMatchesMu17Mu8Path", __pyx_getprop_9MuTauTree_9MuTauTree_mMatchesMu17Mu8Path, 0, 0, 0},
  {(char *)"mMatchesMu17TrkMu8Path", __pyx_getprop_9MuTauTree_9MuTauTree_mMatchesMu17TrkMu8Path, 0, 0, 0},
  {(char *)"mMatchesMu8Ele17Path", __pyx_getprop_9MuTauTree_9MuTauTree_mMatchesMu8Ele17Path, 0, 0, 0},
  {(char *)"mMtToMET", __pyx_getprop_9MuTauTree_9MuTauTree_mMtToMET, 0, 0, 0},
  {(char *)"mMtToMVAMET", __pyx_getprop_9MuTauTree_9MuTauTree_mMtToMVAMET, 0, 0, 0},
  {(char *)"mMtToPFMET", __pyx_getprop_9MuTauTree_9MuTauTree_mMtToPFMET, 0, 0, 0},
  {(char *)"mMtToPfMet_Ty1", __pyx_getprop_9MuTauTree_9MuTauTree_mMtToPfMet_Ty1, 0, 0, 0},
  {(char *)"mMtToPfMet_jes", __pyx_getprop_9MuTauTree_9MuTauTree_mMtToPfMet_jes, 0, 0, 0},
  {(char *)"mMtToPfMet_mes", __pyx_getprop_9MuTauTree_9MuTauTree_mMtToPfMet_mes, 0, 0, 0},
  {(char *)"mMtToPfMet_tes", __pyx_getprop_9MuTauTree_9MuTauTree_mMtToPfMet_tes, 0, 0, 0},
  {(char *)"mMtToPfMet_ues", __pyx_getprop_9MuTauTree_9MuTauTree_mMtToPfMet_ues, 0, 0, 0},
  {(char *)"mMu17Ele8dZFilter", __pyx_getprop_9MuTauTree_9MuTauTree_mMu17Ele8dZFilter, 0, 0, 0},
  {(char *)"mMuonHits", __pyx_getprop_9MuTauTree_9MuTauTree_mMuonHits, 0, 0, 0},
  {(char *)"mNormTrkChi2", __pyx_getprop_9MuTauTree_9MuTauTree_mNormTrkChi2, 0, 0, 0},
  {(char *)"mPFChargedIso", __pyx_getprop_9MuTauTree_9MuTauTree_mPFChargedIso, 0, 0, 0},
  {(char *)"mPFIDTight", __pyx_getprop_9MuTauTree_9MuTauTree_mPFIDTight, 0, 0, 0},
  {(char *)"mPFNeutralIso", __pyx_getprop_9MuTauTree_9MuTauTree_mPFNeutralIso, 0, 0, 0},
  {(char *)"mPFPUChargedIso", __pyx_getprop_9MuTauTree_9MuTauTree_mPFPUChargedIso, 0, 0, 0},
  {(char *)"mPFPhotonIso", __pyx_getprop_9MuTauTree_9MuTauTree_mPFPhotonIso, 0, 0, 0},
  {(char *)"mPVDXY", __pyx_getprop_9MuTauTree_9MuTauTree_mPVDXY, 0, 0, 0},
  {(char *)"mPVDZ", __pyx_getprop_9MuTauTree_9MuTauTree_mPVDZ, 0, 0, 0},
  {(char *)"mPhi", __pyx_getprop_9MuTauTree_9MuTauTree_mPhi, 0, 0, 0},
  {(char *)"mPhiRochCor2011A", __pyx_getprop_9MuTauTree_9MuTauTree_mPhiRochCor2011A, 0, 0, 0},
  {(char *)"mPhiRochCor2011B", __pyx_getprop_9MuTauTree_9MuTauTree_mPhiRochCor2011B, 0, 0, 0},
  {(char *)"mPhiRochCor2012", __pyx_getprop_9MuTauTree_9MuTauTree_mPhiRochCor2012, 0, 0, 0},
  {(char *)"mPixHits", __pyx_getprop_9MuTauTree_9MuTauTree_mPixHits, 0, 0, 0},
  {(char *)"mPt", __pyx_getprop_9MuTauTree_9MuTauTree_mPt, 0, 0, 0},
  {(char *)"mPtRochCor2011A", __pyx_getprop_9MuTauTree_9MuTauTree_mPtRochCor2011A, 0, 0, 0},
  {(char *)"mPtRochCor2011B", __pyx_getprop_9MuTauTree_9MuTauTree_mPtRochCor2011B, 0, 0, 0},
  {(char *)"mPtRochCor2012", __pyx_getprop_9MuTauTree_9MuTauTree_mPtRochCor2012, 0, 0, 0},
  {(char *)"mPtUncorr", __pyx_getprop_9MuTauTree_9MuTauTree_mPtUncorr, 0, 0, 0},
  {(char *)"mRelPFIsoDB", __pyx_getprop_9MuTauTree_9MuTauTree_mRelPFIsoDB, 0, 0, 0},
  {(char *)"mRhoHZG2011", __pyx_getprop_9MuTauTree_9MuTauTree_mRhoHZG2011, 0, 0, 0},
  {(char *)"mRhoHZG2012", __pyx_getprop_9MuTauTree_9MuTauTree_mRhoHZG2012, 0, 0, 0},
  {(char *)"mSingleMu13L3Filtered13", __pyx_getprop_9MuTauTree_9MuTauTree_mSingleMu13L3Filtered13, 0, 0, 0},
  {(char *)"mSingleMu13L3Filtered17", __pyx_getprop_9MuTauTree_9MuTauTree_mSingleMu13L3Filtered17, 0, 0, 0},
  {(char *)"mTkLayersWithMeasurement", __pyx_getprop_9MuTauTree_9MuTauTree_mTkLayersWithMeasurement, 0, 0, 0},
  {(char *)"mToMETDPhi", __pyx_getprop_9MuTauTree_9MuTauTree_mToMETDPhi, 0, 0, 0},
  {(char *)"mTypeCode", __pyx_getprop_9MuTauTree_9MuTauTree_mTypeCode, 0, 0, 0},
  {(char *)"mVBTFID", __pyx_getprop_9MuTauTree_9MuTauTree_mVBTFID, 0, 0, 0},
  {(char *)"mVZ", __pyx_getprop_9MuTauTree_9MuTauTree_mVZ, 0, 0, 0},
  {(char *)"mWWID", __pyx_getprop_9MuTauTree_9MuTauTree_mWWID, 0, 0, 0},
  {(char *)"m_t_CosThetaStar", __pyx_getprop_9MuTauTree_9MuTauTree_m_t_CosThetaStar, 0, 0, 0},
  {(char *)"m_t_DPhi", __pyx_getprop_9MuTauTree_9MuTauTree_m_t_DPhi, 0, 0, 0},
  {(char *)"m_t_DR", __pyx_getprop_9MuTauTree_9MuTauTree_m_t_DR, 0, 0, 0},
  {(char *)"m_t_Mass", __pyx_getprop_9MuTauTree_9MuTauTree_m_t_Mass, 0, 0, 0},
  {(char *)"m_t_PZeta", __pyx_getprop_9MuTauTree_9MuTauTree_m_t_PZeta, 0, 0, 0},
  {(char *)"m_t_PZetaVis", __pyx_getprop_9MuTauTree_9MuTauTree_m_t_PZetaVis, 0, 0, 0},
  {(char *)"m_t_Pt", __pyx_getprop_9MuTauTree_9MuTauTree_m_t_Pt, 0, 0, 0},
  {(char *)"m_t_SS", __pyx_getprop_9MuTauTree_9MuTauTree_m_t_SS, 0, 0, 0},
  {(char *)"m_t_ToMETDPhi_Ty1", __pyx_getprop_9MuTauTree_9MuTauTree_m_t_ToMETDPhi_Ty1, 0, 0, 0},
  {(char *)"m_t_Zcompat", __pyx_getprop_9MuTauTree_9MuTauTree_m_t_Zcompat, 0, 0, 0},
  {(char *)"mu17ele8Group", __pyx_getprop_9MuTauTree_9MuTauTree_mu17ele8Group, 0, 0, 0},
  {(char *)"mu17ele8Pass", __pyx_getprop_9MuTauTree_9MuTauTree_mu17ele8Pass, 0, 0, 0},
  {(char *)"mu17ele8Prescale", __pyx_getprop_9MuTauTree_9MuTauTree_mu17ele8Prescale, 0, 0, 0},
  {(char *)"mu17ele8isoGroup", __pyx_getprop_9MuTauTree_9MuTauTree_mu17ele8isoGroup, 0, 0, 0},
  {(char *)"mu17ele8isoPass", __pyx_getprop_9MuTauTree_9MuTauTree_mu17ele8isoPass, 0, 0, 0},
  {(char *)"mu17ele8isoPrescale", __pyx_getprop_9MuTauTree_9MuTauTree_mu17ele8isoPrescale, 0, 0, 0},
  {(char *)"mu17mu8Group", __pyx_getprop_9MuTauTree_9MuTauTree_mu17mu8Group, 0, 0, 0},
  {(char *)"mu17mu8Pass", __pyx_getprop_9MuTauTree_9MuTauTree_mu17mu8Pass, 0, 0, 0},
  {(char *)"mu17mu8Prescale", __pyx_getprop_9MuTauTree_9MuTauTree_mu17mu8Prescale, 0, 0, 0},
  {(char *)"mu8ele17Group", __pyx_getprop_9MuTauTree_9MuTauTree_mu8ele17Group, 0, 0, 0},
  {(char *)"mu8ele17Pass", __pyx_getprop_9MuTauTree_9MuTauTree_mu8ele17Pass, 0, 0, 0},
  {(char *)"mu8ele17Prescale", __pyx_getprop_9MuTauTree_9MuTauTree_mu8ele17Prescale, 0, 0, 0},
  {(char *)"mu8ele17isoGroup", __pyx_getprop_9MuTauTree_9MuTauTree_mu8ele17isoGroup, 0, 0, 0},
  {(char *)"mu8ele17isoPass", __pyx_getprop_9MuTauTree_9MuTauTree_mu8ele17isoPass, 0, 0, 0},
  {(char *)"mu8ele17isoPrescale", __pyx_getprop_9MuTauTree_9MuTauTree_mu8ele17isoPrescale, 0, 0, 0},
  {(char *)"muGlbIsoVetoPt10", __pyx_getprop_9MuTauTree_9MuTauTree_muGlbIsoVetoPt10, 0, 0, 0},
  {(char *)"muTauGroup", __pyx_getprop_9MuTauTree_9MuTauTree_muTauGroup, 0, 0, 0},
  {(char *)"muTauPass", __pyx_getprop_9MuTauTree_9MuTauTree_muTauPass, 0, 0, 0},
  {(char *)"muTauPrescale", __pyx_getprop_9MuTauTree_9MuTauTree_muTauPrescale, 0, 0, 0},
  {(char *)"muTauTestGroup", __pyx_getprop_9MuTauTree_9MuTauTree_muTauTestGroup, 0, 0, 0},
  {(char *)"muTauTestPass", __pyx_getprop_9MuTauTree_9MuTauTree_muTauTestPass, 0, 0, 0},
  {(char *)"muTauTestPrescale", __pyx_getprop_9MuTauTree_9MuTauTree_muTauTestPrescale, 0, 0, 0},
  {(char *)"muVetoPt15IsoIdVtx", __pyx_getprop_9MuTauTree_9MuTauTree_muVetoPt15IsoIdVtx, 0, 0, 0},
  {(char *)"muVetoPt5", __pyx_getprop_9MuTauTree_9MuTauTree_muVetoPt5, 0, 0, 0},
  {(char *)"muVetoPt5IsoIdVtx", __pyx_getprop_9MuTauTree_9MuTauTree_muVetoPt5IsoIdVtx, 0, 0, 0},
  {(char *)"mva_metEt", __pyx_getprop_9MuTauTree_9MuTauTree_mva_metEt, 0, 0, 0},
  {(char *)"mva_metPhi", __pyx_getprop_9MuTauTree_9MuTauTree_mva_metPhi, 0, 0, 0},
  {(char *)"nTruePU", __pyx_getprop_9MuTauTree_9MuTauTree_nTruePU, 0, 0, 0},
  {(char *)"nvtx", __pyx_getprop_9MuTauTree_9MuTauTree_nvtx, 0, 0, 0},
  {(char *)"pfMetEt", __pyx_getprop_9MuTauTree_9MuTauTree_pfMetEt, 0, 0, 0},
  {(char *)"pfMetPhi", __pyx_getprop_9MuTauTree_9MuTauTree_pfMetPhi, 0, 0, 0},
  {(char *)"pfMet_jes_Et", __pyx_getprop_9MuTauTree_9MuTauTree_pfMet_jes_Et, 0, 0, 0},
  {(char *)"pfMet_jes_Phi", __pyx_getprop_9MuTauTree_9MuTauTree_pfMet_jes_Phi, 0, 0, 0},
  {(char *)"pfMet_mes_Et", __pyx_getprop_9MuTauTree_9MuTauTree_pfMet_mes_Et, 0, 0, 0},
  {(char *)"pfMet_mes_Phi", __pyx_getprop_9MuTauTree_9MuTauTree_pfMet_mes_Phi, 0, 0, 0},
  {(char *)"pfMet_tes_Et", __pyx_getprop_9MuTauTree_9MuTauTree_pfMet_tes_Et, 0, 0, 0},
  {(char *)"pfMet_tes_Phi", __pyx_getprop_9MuTauTree_9MuTauTree_pfMet_tes_Phi, 0, 0, 0},
  {(char *)"pfMet_ues_Et", __pyx_getprop_9MuTauTree_9MuTauTree_pfMet_ues_Et, 0, 0, 0},
  {(char *)"pfMet_ues_Phi", __pyx_getprop_9MuTauTree_9MuTauTree_pfMet_ues_Phi, 0, 0, 0},
  {(char *)"processID", __pyx_getprop_9MuTauTree_9MuTauTree_processID, 0, 0, 0},
  {(char *)"pvChi2", __pyx_getprop_9MuTauTree_9MuTauTree_pvChi2, 0, 0, 0},
  {(char *)"pvDX", __pyx_getprop_9MuTauTree_9MuTauTree_pvDX, 0, 0, 0},
  {(char *)"pvDY", __pyx_getprop_9MuTauTree_9MuTauTree_pvDY, 0, 0, 0},
  {(char *)"pvDZ", __pyx_getprop_9MuTauTree_9MuTauTree_pvDZ, 0, 0, 0},
  {(char *)"pvIsFake", __pyx_getprop_9MuTauTree_9MuTauTree_pvIsFake, 0, 0, 0},
  {(char *)"pvIsValid", __pyx_getprop_9MuTauTree_9MuTauTree_pvIsValid, 0, 0, 0},
  {(char *)"pvNormChi2", __pyx_getprop_9MuTauTree_9MuTauTree_pvNormChi2, 0, 0, 0},
  {(char *)"pvX", __pyx_getprop_9MuTauTree_9MuTauTree_pvX, 0, 0, 0},
  {(char *)"pvY", __pyx_getprop_9MuTauTree_9MuTauTree_pvY, 0, 0, 0},
  {(char *)"pvZ", __pyx_getprop_9MuTauTree_9MuTauTree_pvZ, 0, 0, 0},
  {(char *)"pvndof", __pyx_getprop_9MuTauTree_9MuTauTree_pvndof, 0, 0, 0},
  {(char *)"recoilDaught", __pyx_getprop_9MuTauTree_9MuTauTree_recoilDaught, 0, 0, 0},
  {(char *)"recoilWithMet", __pyx_getprop_9MuTauTree_9MuTauTree_recoilWithMet, 0, 0, 0},
  {(char *)"rho", __pyx_getprop_9MuTauTree_9MuTauTree_rho, 0, 0, 0},
  {(char *)"run", __pyx_getprop_9MuTauTree_9MuTauTree_run, 0, 0, 0},
  {(char *)"singleEGroup", __pyx_getprop_9MuTauTree_9MuTauTree_singleEGroup, 0, 0, 0},
  {(char *)"singleEPFMTGroup", __pyx_getprop_9MuTauTree_9MuTauTree_singleEPFMTGroup, 0, 0, 0},
  {(char *)"singleEPFMTPass", __pyx_getprop_9MuTauTree_9MuTauTree_singleEPFMTPass, 0, 0, 0},
  {(char *)"singleEPFMTPrescale", __pyx_getprop_9MuTauTree_9MuTauTree_singleEPFMTPrescale, 0, 0, 0},
  {(char *)"singleEPass", __pyx_getprop_9MuTauTree_9MuTauTree_singleEPass, 0, 0, 0},
  {(char *)"singleEPrescale", __pyx_getprop_9MuTauTree_9MuTauTree_singleEPrescale, 0, 0, 0},
  {(char *)"singleMuGroup", __pyx_getprop_9MuTauTree_9MuTauTree_singleMuGroup, 0, 0, 0},
  {(char *)"singleMuPass", __pyx_getprop_9MuTauTree_9MuTauTree_singleMuPass, 0, 0, 0},
  {(char *)"singleMuPrescale", __pyx_getprop_9MuTauTree_9MuTauTree_singleMuPrescale, 0, 0, 0},
  {(char *)"singlePhoGroup", __pyx_getprop_9MuTauTree_9MuTauTree_singlePhoGroup, 0, 0, 0},
  {(char *)"singlePhoPass", __pyx_getprop_9MuTauTree_9MuTauTree_singlePhoPass, 0, 0, 0},
  {(char *)"singlePhoPrescale", __pyx_getprop_9MuTauTree_9MuTauTree_singlePhoPrescale, 0, 0, 0},
  {(char *)"tAbsEta", __pyx_getprop_9MuTauTree_9MuTauTree_tAbsEta, 0, 0, 0},
  {(char *)"tAntiElectronLoose", __pyx_getprop_9MuTauTree_9MuTauTree_tAntiElectronLoose, 0, 0, 0},
  {(char *)"tAntiElectronMVA", __pyx_getprop_9MuTauTree_9MuTauTree_tAntiElectronMVA, 0, 0, 0},
  {(char *)"tAntiElectronMVA2Loose", __pyx_getprop_9MuTauTree_9MuTauTree_tAntiElectronMVA2Loose, 0, 0, 0},
  {(char *)"tAntiElectronMVA2Medium", __pyx_getprop_9MuTauTree_9MuTauTree_tAntiElectronMVA2Medium, 0, 0, 0},
  {(char *)"tAntiElectronMVA2Tight", __pyx_getprop_9MuTauTree_9MuTauTree_tAntiElectronMVA2Tight, 0, 0, 0},
  {(char *)"tAntiElectronMVA2Vloose", __pyx_getprop_9MuTauTree_9MuTauTree_tAntiElectronMVA2Vloose, 0, 0, 0},
  {(char *)"tAntiElectronMVA3Loose", __pyx_getprop_9MuTauTree_9MuTauTree_tAntiElectronMVA3Loose, 0, 0, 0},
  {(char *)"tAntiElectronMVA3Medium", __pyx_getprop_9MuTauTree_9MuTauTree_tAntiElectronMVA3Medium, 0, 0, 0},
  {(char *)"tAntiElectronMVA3Tight", __pyx_getprop_9MuTauTree_9MuTauTree_tAntiElectronMVA3Tight, 0, 0, 0},
  {(char *)"tAntiElectronMVA3VTight", __pyx_getprop_9MuTauTree_9MuTauTree_tAntiElectronMVA3VTight, 0, 0, 0},
  {(char *)"tAntiElectronMedium", __pyx_getprop_9MuTauTree_9MuTauTree_tAntiElectronMedium, 0, 0, 0},
  {(char *)"tAntiElectronTight", __pyx_getprop_9MuTauTree_9MuTauTree_tAntiElectronTight, 0, 0, 0},
  {(char *)"tAntiMuonLoose", __pyx_getprop_9MuTauTree_9MuTauTree_tAntiMuonLoose, 0, 0, 0},
  {(char *)"tAntiMuonLoose2", __pyx_getprop_9MuTauTree_9MuTauTree_tAntiMuonLoose2, 0, 0, 0},
  {(char *)"tAntiMuonMedium", __pyx_getprop_9MuTauTree_9MuTauTree_tAntiMuonMedium, 0, 0, 0},
  {(char *)"tAntiMuonMedium2", __pyx_getprop_9MuTauTree_9MuTauTree_tAntiMuonMedium2, 0, 0, 0},
  {(char *)"tAntiMuonTight", __pyx_getprop_9MuTauTree_9MuTauTree_tAntiMuonTight, 0, 0, 0},
  {(char *)"tAntiMuonTight2", __pyx_getprop_9MuTauTree_9MuTauTree_tAntiMuonTight2, 0, 0, 0},
  {(char *)"tCharge", __pyx_getprop_9MuTauTree_9MuTauTree_tCharge, 0, 0, 0},
  {(char *)"tCiCTightElecOverlap", __pyx_getprop_9MuTauTree_9MuTauTree_tCiCTightElecOverlap, 0, 0, 0},
  {(char *)"tDZ", __pyx_getprop_9MuTauTree_9MuTauTree_tDZ, 0, 0, 0},
  {(char *)"tDecayFinding", __pyx_getprop_9MuTauTree_9MuTauTree_tDecayFinding, 0, 0, 0},
  {(char *)"tDecayMode", __pyx_getprop_9MuTauTree_9MuTauTree_tDecayMode, 0, 0, 0},
  {(char *)"tElecOverlap", __pyx_getprop_9MuTauTree_9MuTauTree_tElecOverlap, 0, 0, 0},
  {(char *)"tEta", __pyx_getprop_9MuTauTree_9MuTauTree_tEta, 0, 0, 0},
  {(char *)"tGenDecayMode", __pyx_getprop_9MuTauTree_9MuTauTree_tGenDecayMode, 0, 0, 0},
  {(char *)"tIP3DS", __pyx_getprop_9MuTauTree_9MuTauTree_tIP3DS, 0, 0, 0},
  {(char *)"tJetArea", __pyx_getprop_9MuTauTree_9MuTauTree_tJetArea, 0, 0, 0},
  {(char *)"tJetBtag", __pyx_getprop_9MuTauTree_9MuTauTree_tJetBtag, 0, 0, 0},
  {(char *)"tJetCSVBtag", __pyx_getprop_9MuTauTree_9MuTauTree_tJetCSVBtag, 0, 0, 0},
  {(char *)"tJetEtaEtaMoment", __pyx_getprop_9MuTauTree_9MuTauTree_tJetEtaEtaMoment, 0, 0, 0},
  {(char *)"tJetEtaPhiMoment", __pyx_getprop_9MuTauTree_9MuTauTree_tJetEtaPhiMoment, 0, 0, 0},
  {(char *)"tJetEtaPhiSpread", __pyx_getprop_9MuTauTree_9MuTauTree_tJetEtaPhiSpread, 0, 0, 0},
  {(char *)"tJetPhiPhiMoment", __pyx_getprop_9MuTauTree_9MuTauTree_tJetPhiPhiMoment, 0, 0, 0},
  {(char *)"tJetPt", __pyx_getprop_9MuTauTree_9MuTauTree_tJetPt, 0, 0, 0},
  {(char *)"tLeadTrackPt", __pyx_getprop_9MuTauTree_9MuTauTree_tLeadTrackPt, 0, 0, 0},
  {(char *)"tLooseIso", __pyx_getprop_9MuTauTree_9MuTauTree_tLooseIso, 0, 0, 0},
  {(char *)"tLooseIso3Hits", __pyx_getprop_9MuTauTree_9MuTauTree_tLooseIso3Hits, 0, 0, 0},
  {(char *)"tLooseMVA2Iso", __pyx_getprop_9MuTauTree_9MuTauTree_tLooseMVA2Iso, 0, 0, 0},
  {(char *)"tLooseMVAIso", __pyx_getprop_9MuTauTree_9MuTauTree_tLooseMVAIso, 0, 0, 0},
  {(char *)"tMass", __pyx_getprop_9MuTauTree_9MuTauTree_tMass, 0, 0, 0},
  {(char *)"tMediumIso", __pyx_getprop_9MuTauTree_9MuTauTree_tMediumIso, 0, 0, 0},
  {(char *)"tMediumIso3Hits", __pyx_getprop_9MuTauTree_9MuTauTree_tMediumIso3Hits, 0, 0, 0},
  {(char *)"tMediumMVA2Iso", __pyx_getprop_9MuTauTree_9MuTauTree_tMediumMVA2Iso, 0, 0, 0},
  {(char *)"tMediumMVAIso", __pyx_getprop_9MuTauTree_9MuTauTree_tMediumMVAIso, 0, 0, 0},
  {(char *)"tMtToMET", __pyx_getprop_9MuTauTree_9MuTauTree_tMtToMET, 0, 0, 0},
  {(char *)"tMtToMVAMET", __pyx_getprop_9MuTauTree_9MuTauTree_tMtToMVAMET, 0, 0, 0},
  {(char *)"tMtToPFMET", __pyx_getprop_9MuTauTree_9MuTauTree_tMtToPFMET, 0, 0, 0},
  {(char *)"tMtToPfMet_Ty1", __pyx_getprop_9MuTauTree_9MuTauTree_tMtToPfMet_Ty1, 0, 0, 0},
  {(char *)"tMtToPfMet_jes", __pyx_getprop_9MuTauTree_9MuTauTree_tMtToPfMet_jes, 0, 0, 0},
  {(char *)"tMtToPfMet_mes", __pyx_getprop_9MuTauTree_9MuTauTree_tMtToPfMet_mes, 0, 0, 0},
  {(char *)"tMtToPfMet_tes", __pyx_getprop_9MuTauTree_9MuTauTree_tMtToPfMet_tes, 0, 0, 0},
  {(char *)"tMtToPfMet_ues", __pyx_getprop_9MuTauTree_9MuTauTree_tMtToPfMet_ues, 0, 0, 0},
  {(char *)"tMuOverlap", __pyx_getprop_9MuTauTree_9MuTauTree_tMuOverlap, 0, 0, 0},
  {(char *)"tPhi", __pyx_getprop_9MuTauTree_9MuTauTree_tPhi, 0, 0, 0},
  {(char *)"tPt", __pyx_getprop_9MuTauTree_9MuTauTree_tPt, 0, 0, 0},
  {(char *)"tTNPId", __pyx_getprop_9MuTauTree_9MuTauTree_tTNPId, 0, 0, 0},
  {(char *)"tTightIso", __pyx_getprop_9MuTauTree_9MuTauTree_tTightIso, 0, 0, 0},
  {(char *)"tTightIso3Hits", __pyx_getprop_9MuTauTree_9MuTauTree_tTightIso3Hits, 0, 0, 0},
  {(char *)"tTightMVA2Iso", __pyx_getprop_9MuTauTree_9MuTauTree_tTightMVA2Iso, 0, 0, 0},
  {(char *)"tTightMVAIso", __pyx_getprop_9MuTauTree_9MuTauTree_tTightMVAIso, 0, 0, 0},
  {(char *)"tToMETDPhi", __pyx_getprop_9MuTauTree_9MuTauTree_tToMETDPhi, 0, 0, 0},
  {(char *)"tVLooseIso", __pyx_getprop_9MuTauTree_9MuTauTree_tVLooseIso, 0, 0, 0},
  {(char *)"tVZ", __pyx_getprop_9MuTauTree_9MuTauTree_tVZ, 0, 0, 0},
  {(char *)"tauHpsVetoPt20", __pyx_getprop_9MuTauTree_9MuTauTree_tauHpsVetoPt20, 0, 0, 0},
  {(char *)"tauVetoPt20", __pyx_getprop_9MuTauTree_9MuTauTree_tauVetoPt20, 0, 0, 0},
  {(char *)"tauVetoPt20Loose3HitsVtx", __pyx_getprop_9MuTauTree_9MuTauTree_tauVetoPt20Loose3HitsVtx, 0, 0, 0},
  {(char *)"tauVetoPt20LooseMVA2Vtx", __pyx_getprop_9MuTauTree_9MuTauTree_tauVetoPt20LooseMVA2Vtx, 0, 0, 0},
  {(char *)"tauVetoPt20LooseMVAVtx", __pyx_getprop_9MuTauTree_9MuTauTree_tauVetoPt20LooseMVAVtx, 0, 0, 0},
  {(char *)"tauVetoPt20VLooseHPSVtx", __pyx_getprop_9MuTauTree_9MuTauTree_tauVetoPt20VLooseHPSVtx, 0, 0, 0},
  {(char *)"type1_pfMetEt", __pyx_getprop_9MuTauTree_9MuTauTree_type1_pfMetEt, 0, 0, 0},
  {(char *)"type1_pfMetPhi", __pyx_getprop_9MuTauTree_9MuTauTree_type1_pfMetPhi, 0, 0, 0},
  {(char *)"vbfDeta", __pyx_getprop_9MuTauTree_9MuTauTree_vbfDeta, 0, 0, 0},
  {(char *)"vbfDijetrap", __pyx_getprop_9MuTauTree_9MuTauTree_vbfDijetrap, 0, 0, 0},
  {(char *)"vbfDphihj", __pyx_getprop_9MuTauTree_9MuTauTree_vbfDphihj, 0, 0, 0},
  {(char *)"vbfDphihjnomet", __pyx_getprop_9MuTauTree_9MuTauTree_vbfDphihjnomet, 0, 0, 0},
  {(char *)"vbfHrap", __pyx_getprop_9MuTauTree_9MuTauTree_vbfHrap, 0, 0, 0},
  {(char *)"vbfJetVeto20", __pyx_getprop_9MuTauTree_9MuTauTree_vbfJetVeto20, 0, 0, 0},
  {(char *)"vbfJetVeto30", __pyx_getprop_9MuTauTree_9MuTauTree_vbfJetVeto30, 0, 0, 0},
  {(char *)"vbfMVA", __pyx_getprop_9MuTauTree_9MuTauTree_vbfMVA, 0, 0, 0},
  {(char *)"vbfMass", __pyx_getprop_9MuTauTree_9MuTauTree_vbfMass, 0, 0, 0},
  {(char *)"vbfNJets", __pyx_getprop_9MuTauTree_9MuTauTree_vbfNJets, 0, 0, 0},
  {(char *)"vbfVispt", __pyx_getprop_9MuTauTree_9MuTauTree_vbfVispt, 0, 0, 0},
  {(char *)"vbfj1eta", __pyx_getprop_9MuTauTree_9MuTauTree_vbfj1eta, 0, 0, 0},
  {(char *)"vbfj2eta", __pyx_getprop_9MuTauTree_9MuTauTree_vbfj2eta, 0, 0, 0},
  {(char *)"idx", __pyx_getprop_9MuTauTree_9MuTauTree_idx, 0, 0, 0},
  {(char *)"complained", __pyx_getprop_9MuTauTree_9MuTauTree_complained, __pyx_setprop_9MuTauTree_9MuTauTree_complained, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_9MuTauTree_MuTauTree = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("MuTauTree.MuTauTree"), /*tp_name*/
  sizeof(struct __pyx_obj_9MuTauTree_MuTauTree), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_9MuTauTree_MuTauTree, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_9MuTauTree_MuTauTree, /*tp_traverse*/
  __pyx_tp_clear_9MuTauTree_MuTauTree, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  __pyx_pw_9MuTauTree_9MuTauTree_3__iter__, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_9MuTauTree_MuTauTree, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_9MuTauTree_MuTauTree, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_9MuTauTree_MuTauTree, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};

#if PY_MAJOR_VERSION >= 3
static struct PyModuleDef __pyx_moduledef = {
  #if PY_VERSION_HEX < 0x03020000
    { PyObject_HEAD_INIT(NULL) NULL, 0, NULL },
  #else
    PyModuleDef_HEAD_INIT,
  #endif
    __Pyx_NAMESTR("MuTauTree"),
    0, /* m_doc */
    -1, /* m_size */
    __pyx_methods /* m_methods */,
    NULL, /* m_reload */
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_kp_s_1, __pyx_k_1, sizeof(__pyx_k_1), 0, 0, 1, 0},
  {&__pyx_kp_s_10, __pyx_k_10, sizeof(__pyx_k_10), 0, 0, 1, 0},
  {&__pyx_kp_s_100, __pyx_k_100, sizeof(__pyx_k_100), 0, 0, 1, 0},
  {&__pyx_kp_s_102, __pyx_k_102, sizeof(__pyx_k_102), 0, 0, 1, 0},
  {&__pyx_kp_s_103, __pyx_k_103, sizeof(__pyx_k_103), 0, 0, 1, 0},
  {&__pyx_kp_s_104, __pyx_k_104, sizeof(__pyx_k_104), 0, 0, 1, 0},
  {&__pyx_kp_s_106, __pyx_k_106, sizeof(__pyx_k_106), 0, 0, 1, 0},
  {&__pyx_kp_s_108, __pyx_k_108, sizeof(__pyx_k_108), 0, 0, 1, 0},
  {&__pyx_kp_s_109, __pyx_k_109, sizeof(__pyx_k_109), 0, 0, 1, 0},
  {&__pyx_kp_s_11, __pyx_k_11, sizeof(__pyx_k_11), 0, 0, 1, 0},
  {&__pyx_kp_s_111, __pyx_k_111, sizeof(__pyx_k_111), 0, 0, 1, 0},
  {&__pyx_kp_s_112, __pyx_k_112, sizeof(__pyx_k_112), 0, 0, 1, 0},
  {&__pyx_kp_s_114, __pyx_k_114, sizeof(__pyx_k_114), 0, 0, 1, 0},
  {&__pyx_kp_s_116, __pyx_k_116, sizeof(__pyx_k_116), 0, 0, 1, 0},
  {&__pyx_kp_s_117, __pyx_k_117, sizeof(__pyx_k_117), 0, 0, 1, 0},
  {&__pyx_kp_s_118, __pyx_k_118, sizeof(__pyx_k_118), 0, 0, 1, 0},
  {&__pyx_kp_s_119, __pyx_k_119, sizeof(__pyx_k_119), 0, 0, 1, 0},
  {&__pyx_kp_s_12, __pyx_k_12, sizeof(__pyx_k_12), 0, 0, 1, 0},
  {&__pyx_kp_s_120, __pyx_k_120, sizeof(__pyx_k_120), 0, 0, 1, 0},
  {&__pyx_kp_s_121, __pyx_k_121, sizeof(__pyx_k_121), 0, 0, 1, 0},
  {&__pyx_kp_s_122, __pyx_k_122, sizeof(__pyx_k_122), 0, 0, 1, 0},
  {&__pyx_kp_s_123, __pyx_k_123, sizeof(__pyx_k_123), 0, 0, 1, 0},
  {&__pyx_kp_s_124, __pyx_k_124, sizeof(__pyx_k_124), 0, 0, 1, 0},
  {&__pyx_kp_s_125, __pyx_k_125, sizeof(__pyx_k_125), 0, 0, 1, 0},
  {&__pyx_kp_s_126, __pyx_k_126, sizeof(__pyx_k_126), 0, 0, 1, 0},
  {&__pyx_kp_s_127, __pyx_k_127, sizeof(__pyx_k_127), 0, 0, 1, 0},
  {&__pyx_kp_s_128, __pyx_k_128, sizeof(__pyx_k_128), 0, 0, 1, 0},
  {&__pyx_kp_s_129, __pyx_k_129, sizeof(__pyx_k_129), 0, 0, 1, 0},
  {&__pyx_kp_s_13, __pyx_k_13, sizeof(__pyx_k_13), 0, 0, 1, 0},
  {&__pyx_kp_s_130, __pyx_k_130, sizeof(__pyx_k_130), 0, 0, 1, 0},
  {&__pyx_kp_s_131, __pyx_k_131, sizeof(__pyx_k_131), 0, 0, 1, 0},
  {&__pyx_kp_s_132, __pyx_k_132, sizeof(__pyx_k_132), 0, 0, 1, 0},
  {&__pyx_kp_s_133, __pyx_k_133, sizeof(__pyx_k_133), 0, 0, 1, 0},
  {&__pyx_kp_s_134, __pyx_k_134, sizeof(__pyx_k_134), 0, 0, 1, 0},
  {&__pyx_kp_s_135, __pyx_k_135, sizeof(__pyx_k_135), 0, 0, 1, 0},
  {&__pyx_kp_s_136, __pyx_k_136, sizeof(__pyx_k_136), 0, 0, 1, 0},
  {&__pyx_kp_s_137, __pyx_k_137, sizeof(__pyx_k_137), 0, 0, 1, 0},
  {&__pyx_kp_s_138, __pyx_k_138, sizeof(__pyx_k_138), 0, 0, 1, 0},
  {&__pyx_kp_s_139, __pyx_k_139, sizeof(__pyx_k_139), 0, 0, 1, 0},
  {&__pyx_kp_s_140, __pyx_k_140, sizeof(__pyx_k_140), 0, 0, 1, 0},
  {&__pyx_kp_s_141, __pyx_k_141, sizeof(__pyx_k_141), 0, 0, 1, 0},
  {&__pyx_kp_s_142, __pyx_k_142, sizeof(__pyx_k_142), 0, 0, 1, 0},
  {&__pyx_kp_s_143, __pyx_k_143, sizeof(__pyx_k_143), 0, 0, 1, 0},
  {&__pyx_kp_s_144, __pyx_k_144, sizeof(__pyx_k_144), 0, 0, 1, 0},
  {&__pyx_kp_s_145, __pyx_k_145, sizeof(__pyx_k_145), 0, 0, 1, 0},
  {&__pyx_kp_s_146, __pyx_k_146, sizeof(__pyx_k_146), 0, 0, 1, 0},
  {&__pyx_kp_s_147, __pyx_k_147, sizeof(__pyx_k_147), 0, 0, 1, 0},
  {&__pyx_kp_s_149, __pyx_k_149, sizeof(__pyx_k_149), 0, 0, 1, 0},
  {&__pyx_kp_s_15, __pyx_k_15, sizeof(__pyx_k_15), 0, 0, 1, 0},
  {&__pyx_kp_s_151, __pyx_k_151, sizeof(__pyx_k_151), 0, 0, 1, 0},
  {&__pyx_kp_s_153, __pyx_k_153, sizeof(__pyx_k_153), 0, 0, 1, 0},
  {&__pyx_kp_s_154, __pyx_k_154, sizeof(__pyx_k_154), 0, 0, 1, 0},
  {&__pyx_kp_s_155, __pyx_k_155, sizeof(__pyx_k_155), 0, 0, 1, 0},
  {&__pyx_kp_s_156, __pyx_k_156, sizeof(__pyx_k_156), 0, 0, 1, 0},
  {&__pyx_kp_s_157, __pyx_k_157, sizeof(__pyx_k_157), 0, 0, 1, 0},
  {&__pyx_kp_s_158, __pyx_k_158, sizeof(__pyx_k_158), 0, 0, 1, 0},
  {&__pyx_kp_s_159, __pyx_k_159, sizeof(__pyx_k_159), 0, 0, 1, 0},
  {&__pyx_kp_s_16, __pyx_k_16, sizeof(__pyx_k_16), 0, 0, 1, 0},
  {&__pyx_kp_s_160, __pyx_k_160, sizeof(__pyx_k_160), 0, 0, 1, 0},
  {&__pyx_kp_s_161, __pyx_k_161, sizeof(__pyx_k_161), 0, 0, 1, 0},
  {&__pyx_kp_s_162, __pyx_k_162, sizeof(__pyx_k_162), 0, 0, 1, 0},
  {&__pyx_kp_s_163, __pyx_k_163, sizeof(__pyx_k_163), 0, 0, 1, 0},
  {&__pyx_kp_s_164, __pyx_k_164, sizeof(__pyx_k_164), 0, 0, 1, 0},
  {&__pyx_kp_s_165, __pyx_k_165, sizeof(__pyx_k_165), 0, 0, 1, 0},
  {&__pyx_kp_s_166, __pyx_k_166, sizeof(__pyx_k_166), 0, 0, 1, 0},
  {&__pyx_kp_s_167, __pyx_k_167, sizeof(__pyx_k_167), 0, 0, 1, 0},
  {&__pyx_kp_s_168, __pyx_k_168, sizeof(__pyx_k_168), 0, 0, 1, 0},
  {&__pyx_kp_s_169, __pyx_k_169, sizeof(__pyx_k_169), 0, 0, 1, 0},
  {&__pyx_kp_s_17, __pyx_k_17, sizeof(__pyx_k_17), 0, 0, 1, 0},
  {&__pyx_kp_s_170, __pyx_k_170, sizeof(__pyx_k_170), 0, 0, 1, 0},
  {&__pyx_kp_s_171, __pyx_k_171, sizeof(__pyx_k_171), 0, 0, 1, 0},
  {&__pyx_kp_s_172, __pyx_k_172, sizeof(__pyx_k_172), 0, 0, 1, 0},
  {&__pyx_kp_s_173, __pyx_k_173, sizeof(__pyx_k_173), 0, 0, 1, 0},
  {&__pyx_kp_s_174, __pyx_k_174, sizeof(__pyx_k_174), 0, 0, 1, 0},
  {&__pyx_kp_s_175, __pyx_k_175, sizeof(__pyx_k_175), 0, 0, 1, 0},
  {&__pyx_kp_s_176, __pyx_k_176, sizeof(__pyx_k_176), 0, 0, 1, 0},
  {&__pyx_kp_s_177, __pyx_k_177, sizeof(__pyx_k_177), 0, 0, 1, 0},
  {&__pyx_kp_s_178, __pyx_k_178, sizeof(__pyx_k_178), 0, 0, 1, 0},
  {&__pyx_kp_s_179, __pyx_k_179, sizeof(__pyx_k_179), 0, 0, 1, 0},
  {&__pyx_kp_s_18, __pyx_k_18, sizeof(__pyx_k_18), 0, 0, 1, 0},
  {&__pyx_kp_s_180, __pyx_k_180, sizeof(__pyx_k_180), 0, 0, 1, 0},
  {&__pyx_kp_s_181, __pyx_k_181, sizeof(__pyx_k_181), 0, 0, 1, 0},
  {&__pyx_kp_s_182, __pyx_k_182, sizeof(__pyx_k_182), 0, 0, 1, 0},
  {&__pyx_kp_s_183, __pyx_k_183, sizeof(__pyx_k_183), 0, 0, 1, 0},
  {&__pyx_kp_s_184, __pyx_k_184, sizeof(__pyx_k_184), 0, 0, 1, 0},
  {&__pyx_kp_s_185, __pyx_k_185, sizeof(__pyx_k_185), 0, 0, 1, 0},
  {&__pyx_kp_s_186, __pyx_k_186, sizeof(__pyx_k_186), 0, 0, 1, 0},
  {&__pyx_kp_s_187, __pyx_k_187, sizeof(__pyx_k_187), 0, 0, 1, 0},
  {&__pyx_kp_s_188, __pyx_k_188, sizeof(__pyx_k_188), 0, 0, 1, 0},
  {&__pyx_kp_s_189, __pyx_k_189, sizeof(__pyx_k_189), 0, 0, 1, 0},
  {&__pyx_kp_s_19, __pyx_k_19, sizeof(__pyx_k_19), 0, 0, 1, 0},
  {&__pyx_kp_s_190, __pyx_k_190, sizeof(__pyx_k_190), 0, 0, 1, 0},
  {&__pyx_kp_s_191, __pyx_k_191, sizeof(__pyx_k_191), 0, 0, 1, 0},
  {&__pyx_kp_s_192, __pyx_k_192, sizeof(__pyx_k_192), 0, 0, 1, 0},
  {&__pyx_kp_s_193, __pyx_k_193, sizeof(__pyx_k_193), 0, 0, 1, 0},
  {&__pyx_kp_s_194, __pyx_k_194, sizeof(__pyx_k_194), 0, 0, 1, 0},
  {&__pyx_kp_s_195, __pyx_k_195, sizeof(__pyx_k_195), 0, 0, 1, 0},
  {&__pyx_kp_s_196, __pyx_k_196, sizeof(__pyx_k_196), 0, 0, 1, 0},
  {&__pyx_kp_s_197, __pyx_k_197, sizeof(__pyx_k_197), 0, 0, 1, 0},
  {&__pyx_kp_s_198, __pyx_k_198, sizeof(__pyx_k_198), 0, 0, 1, 0},
  {&__pyx_kp_s_199, __pyx_k_199, sizeof(__pyx_k_199), 0, 0, 1, 0},
  {&__pyx_kp_s_2, __pyx_k_2, sizeof(__pyx_k_2), 0, 0, 1, 0},
  {&__pyx_kp_s_200, __pyx_k_200, sizeof(__pyx_k_200), 0, 0, 1, 0},
  {&__pyx_kp_s_201, __pyx_k_201, sizeof(__pyx_k_201), 0, 0, 1, 0},
  {&__pyx_kp_s_202, __pyx_k_202, sizeof(__pyx_k_202), 0, 0, 1, 0},
  {&__pyx_kp_s_203, __pyx_k_203, sizeof(__pyx_k_203), 0, 0, 1, 0},
  {&__pyx_kp_s_204, __pyx_k_204, sizeof(__pyx_k_204), 0, 0, 1, 0},
  {&__pyx_kp_s_205, __pyx_k_205, sizeof(__pyx_k_205), 0, 0, 1, 0},
  {&__pyx_kp_s_206, __pyx_k_206, sizeof(__pyx_k_206), 0, 0, 1, 0},
  {&__pyx_kp_s_207, __pyx_k_207, sizeof(__pyx_k_207), 0, 0, 1, 0},
  {&__pyx_kp_s_208, __pyx_k_208, sizeof(__pyx_k_208), 0, 0, 1, 0},
  {&__pyx_kp_s_209, __pyx_k_209, sizeof(__pyx_k_209), 0, 0, 1, 0},
  {&__pyx_kp_s_21, __pyx_k_21, sizeof(__pyx_k_21), 0, 0, 1, 0},
  {&__pyx_kp_s_210, __pyx_k_210, sizeof(__pyx_k_210), 0, 0, 1, 0},
  {&__pyx_kp_s_211, __pyx_k_211, sizeof(__pyx_k_211), 0, 0, 1, 0},
  {&__pyx_kp_s_212, __pyx_k_212, sizeof(__pyx_k_212), 0, 0, 1, 0},
  {&__pyx_kp_s_213, __pyx_k_213, sizeof(__pyx_k_213), 0, 0, 1, 0},
  {&__pyx_kp_s_214, __pyx_k_214, sizeof(__pyx_k_214), 0, 0, 1, 0},
  {&__pyx_kp_s_215, __pyx_k_215, sizeof(__pyx_k_215), 0, 0, 1, 0},
  {&__pyx_kp_s_216, __pyx_k_216, sizeof(__pyx_k_216), 0, 0, 1, 0},
  {&__pyx_kp_s_217, __pyx_k_217, sizeof(__pyx_k_217), 0, 0, 1, 0},
  {&__pyx_kp_s_218, __pyx_k_218, sizeof(__pyx_k_218), 0, 0, 1, 0},
  {&__pyx_kp_s_219, __pyx_k_219, sizeof(__pyx_k_219), 0, 0, 1, 0},
  {&__pyx_kp_s_22, __pyx_k_22, sizeof(__pyx_k_22), 0, 0, 1, 0},
  {&__pyx_kp_s_220, __pyx_k_220, sizeof(__pyx_k_220), 0, 0, 1, 0},
  {&__pyx_kp_s_221, __pyx_k_221, sizeof(__pyx_k_221), 0, 0, 1, 0},
  {&__pyx_kp_s_222, __pyx_k_222, sizeof(__pyx_k_222), 0, 0, 1, 0},
  {&__pyx_kp_s_223, __pyx_k_223, sizeof(__pyx_k_223), 0, 0, 1, 0},
  {&__pyx_kp_s_224, __pyx_k_224, sizeof(__pyx_k_224), 0, 0, 1, 0},
  {&__pyx_kp_s_225, __pyx_k_225, sizeof(__pyx_k_225), 0, 0, 1, 0},
  {&__pyx_kp_s_226, __pyx_k_226, sizeof(__pyx_k_226), 0, 0, 1, 0},
  {&__pyx_kp_s_227, __pyx_k_227, sizeof(__pyx_k_227), 0, 0, 1, 0},
  {&__pyx_kp_s_228, __pyx_k_228, sizeof(__pyx_k_228), 0, 0, 1, 0},
  {&__pyx_kp_s_229, __pyx_k_229, sizeof(__pyx_k_229), 0, 0, 1, 0},
  {&__pyx_kp_s_23, __pyx_k_23, sizeof(__pyx_k_23), 0, 0, 1, 0},
  {&__pyx_kp_s_230, __pyx_k_230, sizeof(__pyx_k_230), 0, 0, 1, 0},
  {&__pyx_kp_s_231, __pyx_k_231, sizeof(__pyx_k_231), 0, 0, 1, 0},
  {&__pyx_kp_s_232, __pyx_k_232, sizeof(__pyx_k_232), 0, 0, 1, 0},
  {&__pyx_kp_s_233, __pyx_k_233, sizeof(__pyx_k_233), 0, 0, 1, 0},
  {&__pyx_kp_s_234, __pyx_k_234, sizeof(__pyx_k_234), 0, 0, 1, 0},
  {&__pyx_kp_s_235, __pyx_k_235, sizeof(__pyx_k_235), 0, 0, 1, 0},
  {&__pyx_kp_s_236, __pyx_k_236, sizeof(__pyx_k_236), 0, 0, 1, 0},
  {&__pyx_kp_s_237, __pyx_k_237, sizeof(__pyx_k_237), 0, 0, 1, 0},
  {&__pyx_kp_s_238, __pyx_k_238, sizeof(__pyx_k_238), 0, 0, 1, 0},
  {&__pyx_kp_s_24, __pyx_k_24, sizeof(__pyx_k_24), 0, 0, 1, 0},
  {&__pyx_kp_s_240, __pyx_k_240, sizeof(__pyx_k_240), 0, 0, 1, 0},
  {&__pyx_kp_s_242, __pyx_k_242, sizeof(__pyx_k_242), 0, 0, 1, 0},
  {&__pyx_kp_s_244, __pyx_k_244, sizeof(__pyx_k_244), 0, 0, 1, 0},
  {&__pyx_kp_s_246, __pyx_k_246, sizeof(__pyx_k_246), 0, 0, 1, 0},
  {&__pyx_kp_s_248, __pyx_k_248, sizeof(__pyx_k_248), 0, 0, 1, 0},
  {&__pyx_kp_s_25, __pyx_k_25, sizeof(__pyx_k_25), 0, 0, 1, 0},
  {&__pyx_kp_s_250, __pyx_k_250, sizeof(__pyx_k_250), 0, 0, 1, 0},
  {&__pyx_kp_s_252, __pyx_k_252, sizeof(__pyx_k_252), 0, 0, 1, 0},
  {&__pyx_kp_s_254, __pyx_k_254, sizeof(__pyx_k_254), 0, 0, 1, 0},
  {&__pyx_kp_s_255, __pyx_k_255, sizeof(__pyx_k_255), 0, 0, 1, 0},
  {&__pyx_kp_s_256, __pyx_k_256, sizeof(__pyx_k_256), 0, 0, 1, 0},
  {&__pyx_kp_s_257, __pyx_k_257, sizeof(__pyx_k_257), 0, 0, 1, 0},
  {&__pyx_kp_s_258, __pyx_k_258, sizeof(__pyx_k_258), 0, 0, 1, 0},
  {&__pyx_kp_s_259, __pyx_k_259, sizeof(__pyx_k_259), 0, 0, 1, 0},
  {&__pyx_kp_s_26, __pyx_k_26, sizeof(__pyx_k_26), 0, 0, 1, 0},
  {&__pyx_kp_s_260, __pyx_k_260, sizeof(__pyx_k_260), 0, 0, 1, 0},
  {&__pyx_kp_s_261, __pyx_k_261, sizeof(__pyx_k_261), 0, 0, 1, 0},
  {&__pyx_kp_s_262, __pyx_k_262, sizeof(__pyx_k_262), 0, 0, 1, 0},
  {&__pyx_kp_s_263, __pyx_k_263, sizeof(__pyx_k_263), 0, 0, 1, 0},
  {&__pyx_kp_s_265, __pyx_k_265, sizeof(__pyx_k_265), 0, 0, 1, 0},
  {&__pyx_kp_s_266, __pyx_k_266, sizeof(__pyx_k_266), 0, 0, 1, 0},
  {&__pyx_kp_s_267, __pyx_k_267, sizeof(__pyx_k_267), 0, 0, 1, 0},
  {&__pyx_kp_s_268, __pyx_k_268, sizeof(__pyx_k_268), 0, 0, 1, 0},
  {&__pyx_kp_s_269, __pyx_k_269, sizeof(__pyx_k_269), 0, 0, 1, 0},
  {&__pyx_kp_s_270, __pyx_k_270, sizeof(__pyx_k_270), 0, 0, 1, 0},
  {&__pyx_kp_s_271, __pyx_k_271, sizeof(__pyx_k_271), 0, 0, 1, 0},
  {&__pyx_kp_s_272, __pyx_k_272, sizeof(__pyx_k_272), 0, 0, 1, 0},
  {&__pyx_kp_s_273, __pyx_k_273, sizeof(__pyx_k_273), 0, 0, 1, 0},
  {&__pyx_kp_s_274, __pyx_k_274, sizeof(__pyx_k_274), 0, 0, 1, 0},
  {&__pyx_kp_s_275, __pyx_k_275, sizeof(__pyx_k_275), 0, 0, 1, 0},
  {&__pyx_kp_s_276, __pyx_k_276, sizeof(__pyx_k_276), 0, 0, 1, 0},
  {&__pyx_kp_s_277, __pyx_k_277, sizeof(__pyx_k_277), 0, 0, 1, 0},
  {&__pyx_kp_s_278, __pyx_k_278, sizeof(__pyx_k_278), 0, 0, 1, 0},
  {&__pyx_kp_s_279, __pyx_k_279, sizeof(__pyx_k_279), 0, 0, 1, 0},
  {&__pyx_kp_s_28, __pyx_k_28, sizeof(__pyx_k_28), 0, 0, 1, 0},
  {&__pyx_kp_s_280, __pyx_k_280, sizeof(__pyx_k_280), 0, 0, 1, 0},
  {&__pyx_kp_s_281, __pyx_k_281, sizeof(__pyx_k_281), 0, 0, 1, 0},
  {&__pyx_kp_s_282, __pyx_k_282, sizeof(__pyx_k_282), 0, 0, 1, 0},
  {&__pyx_kp_s_283, __pyx_k_283, sizeof(__pyx_k_283), 0, 0, 1, 0},
  {&__pyx_kp_s_284, __pyx_k_284, sizeof(__pyx_k_284), 0, 0, 1, 0},
  {&__pyx_kp_s_285, __pyx_k_285, sizeof(__pyx_k_285), 0, 0, 1, 0},
  {&__pyx_kp_s_286, __pyx_k_286, sizeof(__pyx_k_286), 0, 0, 1, 0},
  {&__pyx_kp_s_287, __pyx_k_287, sizeof(__pyx_k_287), 0, 0, 1, 0},
  {&__pyx_kp_s_288, __pyx_k_288, sizeof(__pyx_k_288), 0, 0, 1, 0},
  {&__pyx_kp_s_289, __pyx_k_289, sizeof(__pyx_k_289), 0, 0, 1, 0},
  {&__pyx_kp_s_29, __pyx_k_29, sizeof(__pyx_k_29), 0, 0, 1, 0},
  {&__pyx_kp_s_290, __pyx_k_290, sizeof(__pyx_k_290), 0, 0, 1, 0},
  {&__pyx_kp_s_291, __pyx_k_291, sizeof(__pyx_k_291), 0, 0, 1, 0},
  {&__pyx_kp_s_292, __pyx_k_292, sizeof(__pyx_k_292), 0, 0, 1, 0},
  {&__pyx_kp_s_293, __pyx_k_293, sizeof(__pyx_k_293), 0, 0, 1, 0},
  {&__pyx_kp_s_294, __pyx_k_294, sizeof(__pyx_k_294), 0, 0, 1, 0},
  {&__pyx_kp_s_295, __pyx_k_295, sizeof(__pyx_k_295), 0, 0, 1, 0},
  {&__pyx_kp_s_296, __pyx_k_296, sizeof(__pyx_k_296), 0, 0, 1, 0},
  {&__pyx_kp_s_297, __pyx_k_297, sizeof(__pyx_k_297), 0, 0, 1, 0},
  {&__pyx_kp_s_298, __pyx_k_298, sizeof(__pyx_k_298), 0, 0, 1, 0},
  {&__pyx_kp_s_299, __pyx_k_299, sizeof(__pyx_k_299), 0, 0, 1, 0},
  {&__pyx_kp_s_3, __pyx_k_3, sizeof(__pyx_k_3), 0, 0, 1, 0},
  {&__pyx_kp_s_30, __pyx_k_30, sizeof(__pyx_k_30), 0, 0, 1, 0},
  {&__pyx_kp_s_300, __pyx_k_300, sizeof(__pyx_k_300), 0, 0, 1, 0},
  {&__pyx_kp_s_301, __pyx_k_301, sizeof(__pyx_k_301), 0, 0, 1, 0},
  {&__pyx_kp_s_302, __pyx_k_302, sizeof(__pyx_k_302), 0, 0, 1, 0},
  {&__pyx_kp_s_303, __pyx_k_303, sizeof(__pyx_k_303), 0, 0, 1, 0},
  {&__pyx_kp_s_304, __pyx_k_304, sizeof(__pyx_k_304), 0, 0, 1, 0},
  {&__pyx_kp_s_305, __pyx_k_305, sizeof(__pyx_k_305), 0, 0, 1, 0},
  {&__pyx_kp_s_306, __pyx_k_306, sizeof(__pyx_k_306), 0, 0, 1, 0},
  {&__pyx_kp_s_307, __pyx_k_307, sizeof(__pyx_k_307), 0, 0, 1, 0},
  {&__pyx_kp_s_308, __pyx_k_308, sizeof(__pyx_k_308), 0, 0, 1, 0},
  {&__pyx_kp_s_309, __pyx_k_309, sizeof(__pyx_k_309), 0, 0, 1, 0},
  {&__pyx_kp_s_31, __pyx_k_31, sizeof(__pyx_k_31), 0, 0, 1, 0},
  {&__pyx_kp_s_310, __pyx_k_310, sizeof(__pyx_k_310), 0, 0, 1, 0},
  {&__pyx_kp_s_311, __pyx_k_311, sizeof(__pyx_k_311), 0, 0, 1, 0},
  {&__pyx_kp_s_313, __pyx_k_313, sizeof(__pyx_k_313), 0, 0, 1, 0},
  {&__pyx_kp_s_315, __pyx_k_315, sizeof(__pyx_k_315), 0, 0, 1, 0},
  {&__pyx_kp_s_317, __pyx_k_317, sizeof(__pyx_k_317), 0, 0, 1, 0},
  {&__pyx_kp_s_319, __pyx_k_319, sizeof(__pyx_k_319), 0, 0, 1, 0},
  {&__pyx_kp_s_32, __pyx_k_32, sizeof(__pyx_k_32), 0, 0, 1, 0},
  {&__pyx_kp_s_320, __pyx_k_320, sizeof(__pyx_k_320), 0, 0, 1, 0},
  {&__pyx_kp_s_321, __pyx_k_321, sizeof(__pyx_k_321), 0, 0, 1, 0},
  {&__pyx_kp_s_322, __pyx_k_322, sizeof(__pyx_k_322), 0, 0, 1, 0},
  {&__pyx_kp_s_323, __pyx_k_323, sizeof(__pyx_k_323), 0, 0, 1, 0},
  {&__pyx_kp_s_324, __pyx_k_324, sizeof(__pyx_k_324), 0, 0, 1, 0},
  {&__pyx_kp_s_325, __pyx_k_325, sizeof(__pyx_k_325), 0, 0, 1, 0},
  {&__pyx_kp_s_326, __pyx_k_326, sizeof(__pyx_k_326), 0, 0, 1, 0},
  {&__pyx_kp_s_327, __pyx_k_327, sizeof(__pyx_k_327), 0, 0, 1, 0},
  {&__pyx_kp_s_328, __pyx_k_328, sizeof(__pyx_k_328), 0, 0, 1, 0},
  {&__pyx_kp_s_329, __pyx_k_329, sizeof(__pyx_k_329), 0, 0, 1, 0},
  {&__pyx_kp_s_33, __pyx_k_33, sizeof(__pyx_k_33), 0, 0, 1, 0},
  {&__pyx_kp_s_330, __pyx_k_330, sizeof(__pyx_k_330), 0, 0, 1, 0},
  {&__pyx_kp_s_331, __pyx_k_331, sizeof(__pyx_k_331), 0, 0, 1, 0},
  {&__pyx_kp_s_332, __pyx_k_332, sizeof(__pyx_k_332), 0, 0, 1, 0},
  {&__pyx_kp_s_333, __pyx_k_333, sizeof(__pyx_k_333), 0, 0, 1, 0},
  {&__pyx_kp_s_334, __pyx_k_334, sizeof(__pyx_k_334), 0, 0, 1, 0},
  {&__pyx_kp_s_335, __pyx_k_335, sizeof(__pyx_k_335), 0, 0, 1, 0},
  {&__pyx_kp_s_338, __pyx_k_338, sizeof(__pyx_k_338), 0, 0, 1, 0},
  {&__pyx_kp_s_34, __pyx_k_34, sizeof(__pyx_k_34), 0, 0, 1, 0},
  {&__pyx_kp_s_35, __pyx_k_35, sizeof(__pyx_k_35), 0, 0, 1, 0},
  {&__pyx_kp_s_36, __pyx_k_36, sizeof(__pyx_k_36), 0, 0, 1, 0},
  {&__pyx_kp_s_37, __pyx_k_37, sizeof(__pyx_k_37), 0, 0, 1, 0},
  {&__pyx_kp_s_38, __pyx_k_38, sizeof(__pyx_k_38), 0, 0, 1, 0},
  {&__pyx_kp_s_39, __pyx_k_39, sizeof(__pyx_k_39), 0, 0, 1, 0},
  {&__pyx_kp_s_4, __pyx_k_4, sizeof(__pyx_k_4), 0, 0, 1, 0},
  {&__pyx_kp_s_40, __pyx_k_40, sizeof(__pyx_k_40), 0, 0, 1, 0},
  {&__pyx_kp_s_41, __pyx_k_41, sizeof(__pyx_k_41), 0, 0, 1, 0},
  {&__pyx_kp_s_42, __pyx_k_42, sizeof(__pyx_k_42), 0, 0, 1, 0},
  {&__pyx_kp_s_43, __pyx_k_43, sizeof(__pyx_k_43), 0, 0, 1, 0},
  {&__pyx_kp_s_44, __pyx_k_44, sizeof(__pyx_k_44), 0, 0, 1, 0},
  {&__pyx_kp_s_45, __pyx_k_45, sizeof(__pyx_k_45), 0, 0, 1, 0},
  {&__pyx_kp_s_46, __pyx_k_46, sizeof(__pyx_k_46), 0, 0, 1, 0},
  {&__pyx_kp_s_47, __pyx_k_47, sizeof(__pyx_k_47), 0, 0, 1, 0},
  {&__pyx_kp_s_48, __pyx_k_48, sizeof(__pyx_k_48), 0, 0, 1, 0},
  {&__pyx_kp_s_5, __pyx_k_5, sizeof(__pyx_k_5), 0, 0, 1, 0},
  {&__pyx_kp_s_50, __pyx_k_50, sizeof(__pyx_k_50), 0, 0, 1, 0},
  {&__pyx_kp_s_51, __pyx_k_51, sizeof(__pyx_k_51), 0, 0, 1, 0},
  {&__pyx_kp_s_52, __pyx_k_52, sizeof(__pyx_k_52), 0, 0, 1, 0},
  {&__pyx_kp_s_53, __pyx_k_53, sizeof(__pyx_k_53), 0, 0, 1, 0},
  {&__pyx_kp_s_54, __pyx_k_54, sizeof(__pyx_k_54), 0, 0, 1, 0},
  {&__pyx_kp_s_55, __pyx_k_55, sizeof(__pyx_k_55), 0, 0, 1, 0},
  {&__pyx_kp_s_56, __pyx_k_56, sizeof(__pyx_k_56), 0, 0, 1, 0},
  {&__pyx_kp_s_57, __pyx_k_57, sizeof(__pyx_k_57), 0, 0, 1, 0},
  {&__pyx_kp_s_58, __pyx_k_58, sizeof(__pyx_k_58), 0, 0, 1, 0},
  {&__pyx_kp_s_59, __pyx_k_59, sizeof(__pyx_k_59), 0, 0, 1, 0},
  {&__pyx_kp_s_6, __pyx_k_6, sizeof(__pyx_k_6), 0, 0, 1, 0},
  {&__pyx_kp_s_60, __pyx_k_60, sizeof(__pyx_k_60), 0, 0, 1, 0},
  {&__pyx_kp_s_61, __pyx_k_61, sizeof(__pyx_k_61), 0, 0, 1, 0},
  {&__pyx_kp_s_62, __pyx_k_62, sizeof(__pyx_k_62), 0, 0, 1, 0},
  {&__pyx_kp_s_63, __pyx_k_63, sizeof(__pyx_k_63), 0, 0, 1, 0},
  {&__pyx_kp_s_64, __pyx_k_64, sizeof(__pyx_k_64), 0, 0, 1, 0},
  {&__pyx_kp_s_65, __pyx_k_65, sizeof(__pyx_k_65), 0, 0, 1, 0},
  {&__pyx_kp_s_67, __pyx_k_67, sizeof(__pyx_k_67), 0, 0, 1, 0},
  {&__pyx_kp_s_69, __pyx_k_69, sizeof(__pyx_k_69), 0, 0, 1, 0},
  {&__pyx_kp_s_7, __pyx_k_7, sizeof(__pyx_k_7), 0, 0, 1, 0},
  {&__pyx_kp_s_71, __pyx_k_71, sizeof(__pyx_k_71), 0, 0, 1, 0},
  {&__pyx_kp_s_72, __pyx_k_72, sizeof(__pyx_k_72), 0, 0, 1, 0},
  {&__pyx_kp_s_73, __pyx_k_73, sizeof(__pyx_k_73), 0, 0, 1, 0},
  {&__pyx_kp_s_74, __pyx_k_74, sizeof(__pyx_k_74), 0, 0, 1, 0},
  {&__pyx_kp_s_75, __pyx_k_75, sizeof(__pyx_k_75), 0, 0, 1, 0},
  {&__pyx_kp_s_76, __pyx_k_76, sizeof(__pyx_k_76), 0, 0, 1, 0},
  {&__pyx_kp_s_77, __pyx_k_77, sizeof(__pyx_k_77), 0, 0, 1, 0},
  {&__pyx_kp_s_78, __pyx_k_78, sizeof(__pyx_k_78), 0, 0, 1, 0},
  {&__pyx_kp_s_79, __pyx_k_79, sizeof(__pyx_k_79), 0, 0, 1, 0},
  {&__pyx_kp_s_8, __pyx_k_8, sizeof(__pyx_k_8), 0, 0, 1, 0},
  {&__pyx_kp_s_80, __pyx_k_80, sizeof(__pyx_k_80), 0, 0, 1, 0},
  {&__pyx_kp_s_81, __pyx_k_81, sizeof(__pyx_k_81), 0, 0, 1, 0},
  {&__pyx_kp_s_82, __pyx_k_82, sizeof(__pyx_k_82), 0, 0, 1, 0},
  {&__pyx_kp_s_83, __pyx_k_83, sizeof(__pyx_k_83), 0, 0, 1, 0},
  {&__pyx_kp_s_84, __pyx_k_84, sizeof(__pyx_k_84), 0, 0, 1, 0},
  {&__pyx_kp_s_85, __pyx_k_85, sizeof(__pyx_k_85), 0, 0, 1, 0},
  {&__pyx_kp_s_86, __pyx_k_86, sizeof(__pyx_k_86), 0, 0, 1, 0},
  {&__pyx_kp_s_87, __pyx_k_87, sizeof(__pyx_k_87), 0, 0, 1, 0},
  {&__pyx_kp_s_88, __pyx_k_88, sizeof(__pyx_k_88), 0, 0, 1, 0},
  {&__pyx_kp_s_89, __pyx_k_89, sizeof(__pyx_k_89), 0, 0, 1, 0},
  {&__pyx_kp_s_9, __pyx_k_9, sizeof(__pyx_k_9), 0, 0, 1, 0},
  {&__pyx_kp_s_90, __pyx_k_90, sizeof(__pyx_k_90), 0, 0, 1, 0},
  {&__pyx_kp_s_91, __pyx_k_91, sizeof(__pyx_k_91), 0, 0, 1, 0},
  {&__pyx_kp_s_92, __pyx_k_92, sizeof(__pyx_k_92), 0, 0, 1, 0},
  {&__pyx_kp_s_93, __pyx_k_93, sizeof(__pyx_k_93), 0, 0, 1, 0},
  {&__pyx_kp_s_94, __pyx_k_94, sizeof(__pyx_k_94), 0, 0, 1, 0},
  {&__pyx_kp_s_95, __pyx_k_95, sizeof(__pyx_k_95), 0, 0, 1, 0},
  {&__pyx_kp_s_96, __pyx_k_96, sizeof(__pyx_k_96), 0, 0, 1, 0},
  {&__pyx_kp_s_97, __pyx_k_97, sizeof(__pyx_k_97), 0, 0, 1, 0},
  {&__pyx_kp_s_98, __pyx_k_98, sizeof(__pyx_k_98), 0, 0, 1, 0},
  {&__pyx_n_s__AsCObject, __pyx_k__AsCObject, sizeof(__pyx_k__AsCObject), 0, 0, 1, 1},
  {&__pyx_n_s__MuTauTree, __pyx_k__MuTauTree, sizeof(__pyx_k__MuTauTree), 0, 0, 1, 1},
  {&__pyx_n_s__ROOT, __pyx_k__ROOT, sizeof(__pyx_k__ROOT), 0, 0, 1, 1},
  {&__pyx_n_s__Warning, __pyx_k__Warning, sizeof(__pyx_k__Warning), 0, 0, 1, 1},
  {&__pyx_n_s____import__, __pyx_k____import__, sizeof(__pyx_k____import__), 0, 0, 1, 1},
  {&__pyx_n_s____main__, __pyx_k____main__, sizeof(__pyx_k____main__), 0, 0, 1, 1},
  {&__pyx_n_s____name__, __pyx_k____name__, sizeof(__pyx_k____name__), 0, 0, 1, 1},
  {&__pyx_n_s____pyx_vtable__, __pyx_k____pyx_vtable__, sizeof(__pyx_k____pyx_vtable__), 0, 0, 1, 1},
  {&__pyx_n_s____test__, __pyx_k____test__, sizeof(__pyx_k____test__), 0, 0, 1, 1},
  {&__pyx_n_s__args, __pyx_k__args, sizeof(__pyx_k__args), 0, 0, 1, 1},
  {&__pyx_n_s__category, __pyx_k__category, sizeof(__pyx_k__category), 0, 0, 1, 1},
  {&__pyx_n_s__close, __pyx_k__close, sizeof(__pyx_k__close), 0, 0, 1, 1},
  {&__pyx_n_s__end, __pyx_k__end, sizeof(__pyx_k__end), 0, 0, 1, 1},
  {&__pyx_n_s__file, __pyx_k__file, sizeof(__pyx_k__file), 0, 0, 1, 1},
  {&__pyx_n_s__filename, __pyx_k__filename, sizeof(__pyx_k__filename), 0, 0, 1, 1},
  {&__pyx_n_s__formatwarning, __pyx_k__formatwarning, sizeof(__pyx_k__formatwarning), 0, 0, 1, 1},
  {&__pyx_n_s__line, __pyx_k__line, sizeof(__pyx_k__line), 0, 0, 1, 1},
  {&__pyx_n_s__lineno, __pyx_k__lineno, sizeof(__pyx_k__lineno), 0, 0, 1, 1},
  {&__pyx_n_s__message, __pyx_k__message, sizeof(__pyx_k__message), 0, 0, 1, 1},
  {&__pyx_n_s__my_warning_format, __pyx_k__my_warning_format, sizeof(__pyx_k__my_warning_format), 0, 0, 1, 1},
  {&__pyx_n_s__print, __pyx_k__print, sizeof(__pyx_k__print), 0, 0, 1, 1},
  {&__pyx_n_s__send, __pyx_k__send, sizeof(__pyx_k__send), 0, 0, 1, 1},
  {&__pyx_n_s__throw, __pyx_k__throw, sizeof(__pyx_k__throw), 0, 0, 1, 1},
  {&__pyx_n_s__ttree, __pyx_k__ttree, sizeof(__pyx_k__ttree), 0, 0, 1, 1},
  {&__pyx_n_s__warn, __pyx_k__warn, sizeof(__pyx_k__warn), 0, 0, 1, 1},
  {&__pyx_n_s__warnings, __pyx_k__warnings, sizeof(__pyx_k__warnings), 0, 0, 1, 1},
  {&__pyx_n_s__where, __pyx_k__where, sizeof(__pyx_k__where), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_Warning = __Pyx_GetBuiltinName(__pyx_n_s__Warning); if (!__pyx_builtin_Warning) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 998; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  return 0;
  __pyx_L1_error:;
  return -1;
}

static int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "MuTauTree.pyx":38
 * from cpython cimport PyCObject_AsVoidPtr
 * import warnings
 * def my_warning_format(message, category, filename, lineno, line=""):             # <<<<<<<<<<<<<<
 *     return "%s:%s\n" % (category.__name__, message)
 * warnings.formatwarning = my_warning_format
 */
  __pyx_k_tuple_336 = PyTuple_Pack(5, ((PyObject *)__pyx_n_s__message), ((PyObject *)__pyx_n_s__category), ((PyObject *)__pyx_n_s__filename), ((PyObject *)__pyx_n_s__lineno), ((PyObject *)__pyx_n_s__line)); if (unlikely(!__pyx_k_tuple_336)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_336);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_336));
  __pyx_k_codeobj_337 = (PyObject*)__Pyx_PyCode_New(5, 0, 5, 0, 0, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_k_tuple_336, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_338, __pyx_n_s__my_warning_format, 38, __pyx_empty_bytes); if (unlikely(!__pyx_k_codeobj_337)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_InitGlobals(void) {
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  return 0;
  __pyx_L1_error:;
  return -1;
}

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC initMuTauTree(void); /*proto*/
PyMODINIT_FUNC initMuTauTree(void)
#else
PyMODINIT_FUNC PyInit_MuTauTree(void); /*proto*/
PyMODINIT_FUNC PyInit_MuTauTree(void)
#endif
{
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  #if CYTHON_REFNANNY
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
  if (!__Pyx_RefNanny) {
      PyErr_Clear();
      __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
      if (!__Pyx_RefNanny)
          Py_FatalError("failed to import 'refnanny' module");
  }
  #endif
  __Pyx_RefNannySetupContext("PyMODINIT_FUNC PyInit_MuTauTree(void)", 0);
  if ( __Pyx_check_binary_version() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #ifdef __Pyx_CyFunction_USED
  if (__Pyx_CyFunction_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  #ifdef WITH_THREAD /* Python build with threading support? */
  PyEval_InitThreads();
  #endif
  #endif
  /*--- Module creation code ---*/
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4(__Pyx_NAMESTR("MuTauTree"), __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (unlikely(!__pyx_m)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  Py_INCREF(__pyx_d);
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (!PyDict_GetItemString(modules, "MuTauTree")) {
      if (unlikely(PyDict_SetItemString(modules, "MuTauTree", __pyx_m) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif
  __pyx_b = PyImport_AddModule(__Pyx_NAMESTR(__Pyx_BUILTIN_MODULE_NAME)); if (unlikely(!__pyx_b)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #if CYTHON_COMPILING_IN_PYPY
  Py_INCREF(__pyx_b);
  #endif
  if (__Pyx_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  /*--- Initialize various global constants etc. ---*/
  if (unlikely(__Pyx_InitGlobals() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  if (__pyx_module_is_main_MuTauTree) {
    if (__Pyx_SetAttrString(__pyx_m, "__name__", __pyx_n_s____main__) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  /*--- Builtin init code ---*/
  if (unlikely(__Pyx_InitCachedBuiltins() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Constants init code ---*/
  if (unlikely(__Pyx_InitCachedConstants() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Global init code ---*/
  /*--- Variable export code ---*/
  /*--- Function export code ---*/
  /*--- Type init code ---*/
  if (PyType_Ready(&__pyx_type_9MuTauTree___pyx_scope_struct____iter__) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3723; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_9MuTauTree___pyx_scope_struct____iter__ = &__pyx_type_9MuTauTree___pyx_scope_struct____iter__;
  if (PyType_Ready(&__pyx_type_9MuTauTree___pyx_scope_struct_1_where) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3731; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_9MuTauTree___pyx_scope_struct_1_where = &__pyx_type_9MuTauTree___pyx_scope_struct_1_where;
  __pyx_vtabptr_9MuTauTree_MuTauTree = &__pyx_vtable_9MuTauTree_MuTauTree;
  __pyx_vtable_9MuTauTree_MuTauTree.load_entry = (PyObject *(*)(struct __pyx_obj_9MuTauTree_MuTauTree *, long))__pyx_f_9MuTauTree_9MuTauTree_load_entry;
  __pyx_vtable_9MuTauTree_MuTauTree.setup_branches = (PyObject *(*)(struct __pyx_obj_9MuTauTree_MuTauTree *, TTree *))__pyx_f_9MuTauTree_9MuTauTree_setup_branches;
  if (PyType_Ready(&__pyx_type_9MuTauTree_MuTauTree) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetVtable(__pyx_type_9MuTauTree_MuTauTree.tp_dict, __pyx_vtabptr_9MuTauTree_MuTauTree) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "MuTauTree", (PyObject *)&__pyx_type_9MuTauTree_MuTauTree) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 42; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_9MuTauTree_MuTauTree = &__pyx_type_9MuTauTree_MuTauTree;
  /*--- Type import code ---*/
  __pyx_ptype_7cpython_4type_type = __Pyx_ImportType(__Pyx_BUILTIN_MODULE_NAME, "type", 
  #if CYTHON_COMPILING_IN_PYPY
  sizeof(PyTypeObject),
  #else
  sizeof(PyHeapTypeObject),
  #endif
  0); if (unlikely(!__pyx_ptype_7cpython_4type_type)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 9; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_7cpython_4bool_bool = __Pyx_ImportType(__Pyx_BUILTIN_MODULE_NAME, "bool", sizeof(PyBoolObject), 0); if (unlikely(!__pyx_ptype_7cpython_4bool_bool)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 8; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_7cpython_7complex_complex = __Pyx_ImportType(__Pyx_BUILTIN_MODULE_NAME, "complex", sizeof(PyComplexObject), 0); if (unlikely(!__pyx_ptype_7cpython_7complex_complex)) {__pyx_filename = __pyx_f[3]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Variable import code ---*/
  /*--- Function import code ---*/
  /*--- Execution code ---*/

  /* "MuTauTree.pyx":37
 * 
 * from cpython cimport PyCObject_AsVoidPtr
 * import warnings             # <<<<<<<<<<<<<<
 * def my_warning_format(message, category, filename, lineno, line=""):
 *     return "%s:%s\n" % (category.__name__, message)
 */
  __pyx_t_1 = __Pyx_Import(((PyObject *)__pyx_n_s__warnings), 0, -1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s__warnings, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "MuTauTree.pyx":38
 * from cpython cimport PyCObject_AsVoidPtr
 * import warnings
 * def my_warning_format(message, category, filename, lineno, line=""):             # <<<<<<<<<<<<<<
 *     return "%s:%s\n" % (category.__name__, message)
 * warnings.formatwarning = my_warning_format
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_9MuTauTree_1my_warning_format, NULL, __pyx_n_s__MuTauTree); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s__my_warning_format, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 38; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "MuTauTree.pyx":40
 * def my_warning_format(message, category, filename, lineno, line=""):
 *     return "%s:%s\n" % (category.__name__, message)
 * warnings.formatwarning = my_warning_format             # <<<<<<<<<<<<<<
 * 
 * cdef class MuTauTree:
 */
  __pyx_t_1 = __Pyx_GetModuleGlobalName(__pyx_n_s__my_warning_format); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 40; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_GetModuleGlobalName(__pyx_n_s__warnings); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 40; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_PyObject_SetAttrStr(__pyx_t_2, __pyx_n_s__formatwarning, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 40; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "MuTauTree.pyx":3
 * 
 * 
 * # Load relevant ROOT C++ headers             # <<<<<<<<<<<<<<
 * cdef extern from "TObject.h":
 *     cdef cppclass TObject:
 */
  __pyx_t_2 = PyDict_New(); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_2));
  if (PyDict_SetItem(__pyx_d, __pyx_n_s____test__, ((PyObject *)__pyx_t_2)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 3; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  if (__pyx_m) {
    __Pyx_AddTraceback("init MuTauTree", __pyx_clineno, __pyx_lineno, __pyx_filename);
    Py_DECREF(__pyx_m); __pyx_m = 0;
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init MuTauTree");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if PY_MAJOR_VERSION < 3
  return;
  #else
  return __pyx_m;
  #endif
}

/* Runtime support code */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule((char *)modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, (char *)"RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif /* CYTHON_REFNANNY */

static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStr(__pyx_b, name);
    if (unlikely(!result)) {
        PyErr_Format(PyExc_NameError,
#if PY_MAJOR_VERSION >= 3
            "name '%U' is not defined", name);
#else
            "name '%s' is not defined", PyString_AS_STRING(name));
#endif
    }
    return result;
}

static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%s() takes %s %" CYTHON_FORMAT_SSIZE_T "d positional argument%s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
            continue;
        }
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_CheckExact(key)) || likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (**name == key) ? 0 :
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (PyUnicode_GET_SIZE(**name) != PyUnicode_GET_SIZE(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key);
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (PyUnicode_GET_SIZE(**argname) != PyUnicode_GET_SIZE(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%s() got an unexpected keyword argument '%s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name) {
    PyObject* value = __Pyx_PyObject_GetAttrStr(module, name);
    if (unlikely(!value) && PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Format(PyExc_ImportError,
        #if PY_MAJOR_VERSION < 3
            "cannot import name %.230s", PyString_AS_STRING(name));
        #else
            "cannot import name %S", name);
        #endif
    }
    return value;
}

static CYTHON_INLINE PyObject *__Pyx_GetModuleGlobalName(PyObject *name) {
    PyObject *result;
#if CYTHON_COMPILING_IN_CPYTHON
    result = PyDict_GetItem(__pyx_d, name);
    if (result) {
        Py_INCREF(result);
    } else {
#else
    result = PyObject_GetItem(__pyx_d, name);
    if (!result) {
        PyErr_Clear();
#endif
        result = __Pyx_GetBuiltinName(name);
    }
    return result;
}

static int __Pyx_SetVtable(PyObject *dict, void *vtable) {
#if PY_VERSION_HEX >= 0x02070000 && !(PY_MAJOR_VERSION==3&&PY_MINOR_VERSION==0)
    PyObject *ob = PyCapsule_New(vtable, 0, 0);
#else
    PyObject *ob = PyCObject_FromVoidPtr(vtable, 0);
#endif
    if (!ob)
        goto bad;
    if (PyDict_SetItem(dict, __pyx_n_s____pyx_vtable__, ob) < 0)
        goto bad;
    Py_DECREF(ob);
    return 0;
bad:
    Py_XDECREF(ob);
    return -1;
}

static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {
    PyObject *empty_list = 0;
    PyObject *module = 0;
    PyObject *global_dict = 0;
    PyObject *empty_dict = 0;
    PyObject *list;
    #if PY_VERSION_HEX < 0x03030000
    PyObject *py_import;
    py_import = __Pyx_PyObject_GetAttrStr(__pyx_b, __pyx_n_s____import__);
    if (!py_import)
        goto bad;
    #endif
    if (from_list)
        list = from_list;
    else {
        empty_list = PyList_New(0);
        if (!empty_list)
            goto bad;
        list = empty_list;
    }
    global_dict = PyModule_GetDict(__pyx_m);
    if (!global_dict)
        goto bad;
    empty_dict = PyDict_New();
    if (!empty_dict)
        goto bad;
    #if PY_VERSION_HEX >= 0x02050000
    {
        #if PY_MAJOR_VERSION >= 3
        if (level == -1) {
            if (strchr(__Pyx_MODULE_NAME, '.')) {
                #if PY_VERSION_HEX < 0x03030000
                PyObject *py_level = PyInt_FromLong(1);
                if (!py_level)
                    goto bad;
                module = PyObject_CallFunctionObjArgs(py_import,
                    name, global_dict, empty_dict, list, py_level, NULL);
                Py_DECREF(py_level);
                #else
                module = PyImport_ImportModuleLevelObject(
                    name, global_dict, empty_dict, list, 1);
                #endif
                if (!module) {
                    if (!PyErr_ExceptionMatches(PyExc_ImportError))
                        goto bad;
                    PyErr_Clear();
                }
            }
            level = 0; /* try absolute import on failure */
        }
        #endif
        if (!module) {
            #if PY_VERSION_HEX < 0x03030000
            PyObject *py_level = PyInt_FromLong(level);
            if (!py_level)
                goto bad;
            module = PyObject_CallFunctionObjArgs(py_import,
                name, global_dict, empty_dict, list, py_level, NULL);
            Py_DECREF(py_level);
            #else
            module = PyImport_ImportModuleLevelObject(
                name, global_dict, empty_dict, list, level);
            #endif
        }
    }
    #else
    if (level>0) {
        PyErr_SetString(PyExc_RuntimeError, "Relative import is not supported for Python <=2.4.");
        goto bad;
    }
    module = PyObject_CallFunctionObjArgs(py_import,
        name, global_dict, empty_dict, list, NULL);
    #endif
bad:
    #if PY_VERSION_HEX < 0x03030000
    Py_XDECREF(py_import);
    #endif
    Py_XDECREF(empty_list);
    Py_XDECREF(empty_dict);
    return module;
}

#if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION < 3
static PyObject *__Pyx_GetStdout(void) {
    PyObject *f = PySys_GetObject((char *)"stdout");
    if (!f) {
        PyErr_SetString(PyExc_RuntimeError, "lost sys.stdout");
    }
    return f;
}
static int __Pyx_Print(PyObject* f, PyObject *arg_tuple, int newline) {
    int i;
    if (!f) {
        if (!(f = __Pyx_GetStdout()))
            return -1;
    }
    Py_INCREF(f);
    for (i=0; i < PyTuple_GET_SIZE(arg_tuple); i++) {
        PyObject* v;
        if (PyFile_SoftSpace(f, 1)) {
            if (PyFile_WriteString(" ", f) < 0)
                goto error;
        }
        v = PyTuple_GET_ITEM(arg_tuple, i);
        if (PyFile_WriteObject(v, f, Py_PRINT_RAW) < 0)
            goto error;
        if (PyString_Check(v)) {
            char *s = PyString_AsString(v);
            Py_ssize_t len = PyString_Size(v);
            if (len > 0 &&
                isspace(Py_CHARMASK(s[len-1])) &&
                s[len-1] != ' ')
                    PyFile_SoftSpace(f, 0);
        }
    }
    if (newline) {
        if (PyFile_WriteString("\n", f) < 0)
            goto error;
        PyFile_SoftSpace(f, 0);
    }
    Py_DECREF(f);
    return 0;
error:
    Py_DECREF(f);
    return -1;
}
#else /* Python 3 has a print function */
static int __Pyx_Print(PyObject* stream, PyObject *arg_tuple, int newline) {
    PyObject* kwargs = 0;
    PyObject* result = 0;
    PyObject* end_string;
    if (unlikely(!__pyx_print)) {
        __pyx_print = PyObject_GetAttr(__pyx_b, __pyx_n_s__print);
        if (!__pyx_print)
            return -1;
    }
    if (stream) {
        kwargs = PyDict_New();
        if (unlikely(!kwargs))
            return -1;
        if (unlikely(PyDict_SetItem(kwargs, __pyx_n_s__file, stream) < 0))
            goto bad;
        if (!newline) {
            end_string = PyUnicode_FromStringAndSize(" ", 1);
            if (unlikely(!end_string))
                goto bad;
            if (PyDict_SetItem(kwargs, __pyx_n_s__end, end_string) < 0) {
                Py_DECREF(end_string);
                goto bad;
            }
            Py_DECREF(end_string);
        }
    } else if (!newline) {
        if (unlikely(!__pyx_print_kwargs)) {
            __pyx_print_kwargs = PyDict_New();
            if (unlikely(!__pyx_print_kwargs))
                return -1;
            end_string = PyUnicode_FromStringAndSize(" ", 1);
            if (unlikely(!end_string))
                return -1;
            if (PyDict_SetItem(__pyx_print_kwargs, __pyx_n_s__end, end_string) < 0) {
                Py_DECREF(end_string);
                return -1;
            }
            Py_DECREF(end_string);
        }
        kwargs = __pyx_print_kwargs;
    }
    result = PyObject_Call(__pyx_print, arg_tuple, kwargs);
    if (unlikely(kwargs) && (kwargs != __pyx_print_kwargs))
        Py_DECREF(kwargs);
    if (!result)
        return -1;
    Py_DECREF(result);
    return 0;
bad:
    if (kwargs != __pyx_print_kwargs)
        Py_XDECREF(kwargs);
    return -1;
}
#endif

#if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION < 3
static int __Pyx_PrintOne(PyObject* f, PyObject *o) {
    if (!f) {
        if (!(f = __Pyx_GetStdout()))
            return -1;
    }
    Py_INCREF(f);
    if (PyFile_SoftSpace(f, 0)) {
        if (PyFile_WriteString(" ", f) < 0)
            goto error;
    }
    if (PyFile_WriteObject(o, f, Py_PRINT_RAW) < 0)
        goto error;
    if (PyFile_WriteString("\n", f) < 0)
        goto error;
    Py_DECREF(f);
    return 0;
error:
    Py_DECREF(f);
    return -1;
    /* the line below is just to avoid C compiler
     * warnings about unused functions */
    return __Pyx_Print(f, NULL, 0);
}
#else /* Python 3 has a print function */
static int __Pyx_PrintOne(PyObject* stream, PyObject *o) {
    int res;
    PyObject* arg_tuple = PyTuple_Pack(1, o);
    if (unlikely(!arg_tuple))
        return -1;
    res = __Pyx_Print(stream, arg_tuple, 1);
    Py_DECREF(arg_tuple);
    return res;
}
#endif

static CYTHON_INLINE unsigned char __Pyx_PyInt_AsUnsignedChar(PyObject* x) {
    const unsigned char neg_one = (unsigned char)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(unsigned char) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(unsigned char)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to unsigned char" :
                    "value too large to convert to unsigned char");
            }
            return (unsigned char)-1;
        }
        return (unsigned char)val;
    }
    return (unsigned char)__Pyx_PyInt_AsUnsignedLong(x);
}

static CYTHON_INLINE unsigned short __Pyx_PyInt_AsUnsignedShort(PyObject* x) {
    const unsigned short neg_one = (unsigned short)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(unsigned short) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(unsigned short)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to unsigned short" :
                    "value too large to convert to unsigned short");
            }
            return (unsigned short)-1;
        }
        return (unsigned short)val;
    }
    return (unsigned short)__Pyx_PyInt_AsUnsignedLong(x);
}

static CYTHON_INLINE unsigned int __Pyx_PyInt_AsUnsignedInt(PyObject* x) {
    const unsigned int neg_one = (unsigned int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(unsigned int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(unsigned int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to unsigned int" :
                    "value too large to convert to unsigned int");
            }
            return (unsigned int)-1;
        }
        return (unsigned int)val;
    }
    return (unsigned int)__Pyx_PyInt_AsUnsignedLong(x);
}

static CYTHON_INLINE char __Pyx_PyInt_AsChar(PyObject* x) {
    const char neg_one = (char)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(char) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(char)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to char" :
                    "value too large to convert to char");
            }
            return (char)-1;
        }
        return (char)val;
    }
    return (char)__Pyx_PyInt_AsLong(x);
}

static CYTHON_INLINE short __Pyx_PyInt_AsShort(PyObject* x) {
    const short neg_one = (short)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(short) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(short)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to short" :
                    "value too large to convert to short");
            }
            return (short)-1;
        }
        return (short)val;
    }
    return (short)__Pyx_PyInt_AsLong(x);
}

static CYTHON_INLINE int __Pyx_PyInt_AsInt(PyObject* x) {
    const int neg_one = (int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to int" :
                    "value too large to convert to int");
            }
            return (int)-1;
        }
        return (int)val;
    }
    return (int)__Pyx_PyInt_AsLong(x);
}

static CYTHON_INLINE signed char __Pyx_PyInt_AsSignedChar(PyObject* x) {
    const signed char neg_one = (signed char)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(signed char) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(signed char)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to signed char" :
                    "value too large to convert to signed char");
            }
            return (signed char)-1;
        }
        return (signed char)val;
    }
    return (signed char)__Pyx_PyInt_AsSignedLong(x);
}

static CYTHON_INLINE signed short __Pyx_PyInt_AsSignedShort(PyObject* x) {
    const signed short neg_one = (signed short)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(signed short) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(signed short)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to signed short" :
                    "value too large to convert to signed short");
            }
            return (signed short)-1;
        }
        return (signed short)val;
    }
    return (signed short)__Pyx_PyInt_AsSignedLong(x);
}

static CYTHON_INLINE signed int __Pyx_PyInt_AsSignedInt(PyObject* x) {
    const signed int neg_one = (signed int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(signed int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(signed int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to signed int" :
                    "value too large to convert to signed int");
            }
            return (signed int)-1;
        }
        return (signed int)val;
    }
    return (signed int)__Pyx_PyInt_AsSignedLong(x);
}

static CYTHON_INLINE int __Pyx_PyInt_AsLongDouble(PyObject* x) {
    const int neg_one = (int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to int" :
                    "value too large to convert to int");
            }
            return (int)-1;
        }
        return (int)val;
    }
    return (int)__Pyx_PyInt_AsLong(x);
}

#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
#include "longintrepr.h"
#endif
#endif
static CYTHON_INLINE unsigned long __Pyx_PyInt_AsUnsignedLong(PyObject* x) {
    const unsigned long neg_one = (unsigned long)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to unsigned long");
            return (unsigned long)-1;
        }
        return (unsigned long)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
            if (sizeof(digit) <= sizeof(unsigned long)) {
                switch (Py_SIZE(x)) {
                    case  0: return 0;
                    case  1: return (unsigned long) ((PyLongObject*)x)->ob_digit[0];
                }
            }
#endif
#endif
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to unsigned long");
                return (unsigned long)-1;
            }
            return (unsigned long)PyLong_AsUnsignedLong(x);
        } else {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
            if (sizeof(digit) <= sizeof(unsigned long)) {
                switch (Py_SIZE(x)) {
                    case  0: return 0;
                    case  1: return +(unsigned long) ((PyLongObject*)x)->ob_digit[0];
                    case -1: return -(unsigned long) ((PyLongObject*)x)->ob_digit[0];
                }
            }
#endif
#endif
            return (unsigned long)PyLong_AsLong(x);
        }
    } else {
        unsigned long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (unsigned long)-1;
        val = __Pyx_PyInt_AsUnsignedLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
#include "longintrepr.h"
#endif
#endif
static CYTHON_INLINE unsigned PY_LONG_LONG __Pyx_PyInt_AsUnsignedLongLong(PyObject* x) {
    const unsigned PY_LONG_LONG neg_one = (unsigned PY_LONG_LONG)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to unsigned PY_LONG_LONG");
            return (unsigned PY_LONG_LONG)-1;
        }
        return (unsigned PY_LONG_LONG)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
            if (sizeof(digit) <= sizeof(unsigned PY_LONG_LONG)) {
                switch (Py_SIZE(x)) {
                    case  0: return 0;
                    case  1: return (unsigned PY_LONG_LONG) ((PyLongObject*)x)->ob_digit[0];
                }
            }
#endif
#endif
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to unsigned PY_LONG_LONG");
                return (unsigned PY_LONG_LONG)-1;
            }
            return (unsigned PY_LONG_LONG)PyLong_AsUnsignedLongLong(x);
        } else {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
            if (sizeof(digit) <= sizeof(unsigned PY_LONG_LONG)) {
                switch (Py_SIZE(x)) {
                    case  0: return 0;
                    case  1: return +(unsigned PY_LONG_LONG) ((PyLongObject*)x)->ob_digit[0];
                    case -1: return -(unsigned PY_LONG_LONG) ((PyLongObject*)x)->ob_digit[0];
                }
            }
#endif
#endif
            return (unsigned PY_LONG_LONG)PyLong_AsLongLong(x);
        }
    } else {
        unsigned PY_LONG_LONG val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (unsigned PY_LONG_LONG)-1;
        val = __Pyx_PyInt_AsUnsignedLongLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
#include "longintrepr.h"
#endif
#endif
static CYTHON_INLINE long __Pyx_PyInt_AsLong(PyObject* x) {
    const long neg_one = (long)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to long");
            return (long)-1;
        }
        return (long)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
            if (sizeof(digit) <= sizeof(long)) {
                switch (Py_SIZE(x)) {
                    case  0: return 0;
                    case  1: return (long) ((PyLongObject*)x)->ob_digit[0];
                }
            }
#endif
#endif
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to long");
                return (long)-1;
            }
            return (long)PyLong_AsUnsignedLong(x);
        } else {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
            if (sizeof(digit) <= sizeof(long)) {
                switch (Py_SIZE(x)) {
                    case  0: return 0;
                    case  1: return +(long) ((PyLongObject*)x)->ob_digit[0];
                    case -1: return -(long) ((PyLongObject*)x)->ob_digit[0];
                }
            }
#endif
#endif
            return (long)PyLong_AsLong(x);
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (long)-1;
        val = __Pyx_PyInt_AsLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
#include "longintrepr.h"
#endif
#endif
static CYTHON_INLINE PY_LONG_LONG __Pyx_PyInt_AsLongLong(PyObject* x) {
    const PY_LONG_LONG neg_one = (PY_LONG_LONG)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to PY_LONG_LONG");
            return (PY_LONG_LONG)-1;
        }
        return (PY_LONG_LONG)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
            if (sizeof(digit) <= sizeof(PY_LONG_LONG)) {
                switch (Py_SIZE(x)) {
                    case  0: return 0;
                    case  1: return (PY_LONG_LONG) ((PyLongObject*)x)->ob_digit[0];
                }
            }
#endif
#endif
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to PY_LONG_LONG");
                return (PY_LONG_LONG)-1;
            }
            return (PY_LONG_LONG)PyLong_AsUnsignedLongLong(x);
        } else {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
            if (sizeof(digit) <= sizeof(PY_LONG_LONG)) {
                switch (Py_SIZE(x)) {
                    case  0: return 0;
                    case  1: return +(PY_LONG_LONG) ((PyLongObject*)x)->ob_digit[0];
                    case -1: return -(PY_LONG_LONG) ((PyLongObject*)x)->ob_digit[0];
                }
            }
#endif
#endif
            return (PY_LONG_LONG)PyLong_AsLongLong(x);
        }
    } else {
        PY_LONG_LONG val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (PY_LONG_LONG)-1;
        val = __Pyx_PyInt_AsLongLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
#include "longintrepr.h"
#endif
#endif
static CYTHON_INLINE signed long __Pyx_PyInt_AsSignedLong(PyObject* x) {
    const signed long neg_one = (signed long)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to signed long");
            return (signed long)-1;
        }
        return (signed long)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
            if (sizeof(digit) <= sizeof(signed long)) {
                switch (Py_SIZE(x)) {
                    case  0: return 0;
                    case  1: return (signed long) ((PyLongObject*)x)->ob_digit[0];
                }
            }
#endif
#endif
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to signed long");
                return (signed long)-1;
            }
            return (signed long)PyLong_AsUnsignedLong(x);
        } else {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
            if (sizeof(digit) <= sizeof(signed long)) {
                switch (Py_SIZE(x)) {
                    case  0: return 0;
                    case  1: return +(signed long) ((PyLongObject*)x)->ob_digit[0];
                    case -1: return -(signed long) ((PyLongObject*)x)->ob_digit[0];
                }
            }
#endif
#endif
            return (signed long)PyLong_AsLong(x);
        }
    } else {
        signed long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (signed long)-1;
        val = __Pyx_PyInt_AsSignedLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
#include "longintrepr.h"
#endif
#endif
static CYTHON_INLINE signed PY_LONG_LONG __Pyx_PyInt_AsSignedLongLong(PyObject* x) {
    const signed PY_LONG_LONG neg_one = (signed PY_LONG_LONG)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to signed PY_LONG_LONG");
            return (signed PY_LONG_LONG)-1;
        }
        return (signed PY_LONG_LONG)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
            if (sizeof(digit) <= sizeof(signed PY_LONG_LONG)) {
                switch (Py_SIZE(x)) {
                    case  0: return 0;
                    case  1: return (signed PY_LONG_LONG) ((PyLongObject*)x)->ob_digit[0];
                }
            }
#endif
#endif
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to signed PY_LONG_LONG");
                return (signed PY_LONG_LONG)-1;
            }
            return (signed PY_LONG_LONG)PyLong_AsUnsignedLongLong(x);
        } else {
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
#if CYTHON_USE_PYLONG_INTERNALS
            if (sizeof(digit) <= sizeof(signed PY_LONG_LONG)) {
                switch (Py_SIZE(x)) {
                    case  0: return 0;
                    case  1: return +(signed PY_LONG_LONG) ((PyLongObject*)x)->ob_digit[0];
                    case -1: return -(signed PY_LONG_LONG) ((PyLongObject*)x)->ob_digit[0];
                }
            }
#endif
#endif
            return (signed PY_LONG_LONG)PyLong_AsLongLong(x);
        }
    } else {
        signed PY_LONG_LONG val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (signed PY_LONG_LONG)-1;
        val = __Pyx_PyInt_AsSignedLongLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static CYTHON_INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    PyThreadState *tstate = PyThreadState_GET();
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_Restore(type, value, tb);
#endif
}
static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyThreadState *tstate = PyThreadState_GET();
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#else
    PyErr_Fetch(type, value, tb);
#endif
}

#if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb,
                        CYTHON_UNUSED PyObject *cause) {
    Py_XINCREF(type);
    if (!value || value == Py_None)
        value = NULL;
    else
        Py_INCREF(value);
    if (!tb || tb == Py_None)
        tb = NULL;
    else {
        Py_INCREF(tb);
        if (!PyTraceBack_Check(tb)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: arg 3 must be a traceback or None");
            goto raise_error;
        }
    }
    #if PY_VERSION_HEX < 0x02050000
    if (PyClass_Check(type)) {
    #else
    if (PyType_Check(type)) {
    #endif
#if CYTHON_COMPILING_IN_PYPY
        if (!value) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#endif
        PyErr_NormalizeException(&type, &value, &tb);
    } else {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        value = type;
        #if PY_VERSION_HEX < 0x02050000
        if (PyInstance_Check(type)) {
            type = (PyObject*) ((PyInstanceObject*)type)->in_class;
            Py_INCREF(type);
        } else {
            type = 0;
            PyErr_SetString(PyExc_TypeError,
                "raise: exception must be an old-style class or instance");
            goto raise_error;
        }
        #else
        type = (PyObject*) Py_TYPE(type);
        Py_INCREF(type);
        if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: exception class must be a subclass of BaseException");
            goto raise_error;
        }
        #endif
    }
    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}
#else /* Python 3+ */
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    PyObject* owned_instance = NULL;
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;
    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (PyExceptionClass_Check(type)) {
        PyObject *args;
        if (!value)
            args = PyTuple_New(0);
        else if (PyTuple_Check(value)) {
            Py_INCREF(value);
            args = value;
        } else
            args = PyTuple_Pack(1, value);
        if (!args)
            goto bad;
        owned_instance = PyEval_CallObject(type, args);
        Py_DECREF(args);
        if (!owned_instance)
            goto bad;
        value = owned_instance;
        if (!PyExceptionInstance_Check(value)) {
            PyErr_Format(PyExc_TypeError,
                         "calling %R should have returned an instance of "
                         "BaseException, not %R",
                         type, Py_TYPE(value));
            goto bad;
        }
    } else {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }
#if PY_VERSION_HEX >= 0x03030000
    if (cause) {
#else
    if (cause && cause != Py_None) {
#endif
        PyObject *fixed_cause;
        if (cause == Py_None) {
            fixed_cause = NULL;
        } else if (PyExceptionClass_Check(cause)) {
            fixed_cause = PyObject_CallObject(cause, NULL);
            if (fixed_cause == NULL)
                goto bad;
        } else if (PyExceptionInstance_Check(cause)) {
            fixed_cause = cause;
            Py_INCREF(fixed_cause);
        } else {
            PyErr_SetString(PyExc_TypeError,
                            "exception causes must derive from "
                            "BaseException");
            goto bad;
        }
        PyException_SetCause(value, fixed_cause);
    }
    PyErr_SetObject(type, value);
    if (tb) {
        PyThreadState *tstate = PyThreadState_GET();
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
    }
bad:
    Py_XDECREF(owned_instance);
    return;
}
#endif

static CYTHON_INLINE void __Pyx_ExceptionSwap(PyObject **type, PyObject **value, PyObject **tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
#if CYTHON_COMPILING_IN_CPYTHON
    PyThreadState *tstate = PyThreadState_GET();
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = *type;
    tstate->exc_value = *value;
    tstate->exc_traceback = *tb;
#else
    PyErr_GetExcInfo(&tmp_type, &tmp_value, &tmp_tb);
    PyErr_SetExcInfo(*type, *value, *tb);
#endif
    *type = tmp_type;
    *value = tmp_value;
    *tb = tmp_tb;
}

static PyObject *__Pyx_Generator_Next(PyObject *self);
static PyObject *__Pyx_Generator_Send(PyObject *self, PyObject *value);
static PyObject *__Pyx_Generator_Close(PyObject *self);
static PyObject *__Pyx_Generator_Throw(PyObject *gen, PyObject *args);
static PyTypeObject *__pyx_GeneratorType = 0;
#define __Pyx_Generator_CheckExact(obj) (Py_TYPE(obj) == __pyx_GeneratorType)
#define __Pyx_Generator_Undelegate(gen) Py_CLEAR((gen)->yieldfrom)
#if 1 || PY_VERSION_HEX < 0x030300B0
static int __Pyx_PyGen_FetchStopIterationValue(PyObject **pvalue) {
    PyObject *et, *ev, *tb;
    PyObject *value = NULL;
    __Pyx_ErrFetch(&et, &ev, &tb);
    if (!et) {
        Py_XDECREF(tb);
        Py_XDECREF(ev);
        Py_INCREF(Py_None);
        *pvalue = Py_None;
        return 0;
    }
    if (unlikely(et != PyExc_StopIteration) &&
            unlikely(!PyErr_GivenExceptionMatches(et, PyExc_StopIteration))) {
        __Pyx_ErrRestore(et, ev, tb);
        return -1;
    }
    if (likely(et == PyExc_StopIteration)) {
        if (likely(!ev) || !PyObject_IsInstance(ev, PyExc_StopIteration)) {
            if (!ev) {
                Py_INCREF(Py_None);
                ev = Py_None;
            }
            Py_XDECREF(tb);
            Py_DECREF(et);
            *pvalue = ev;
            return 0;
        }
    }
    PyErr_NormalizeException(&et, &ev, &tb);
    if (unlikely(!PyObject_IsInstance(ev, PyExc_StopIteration))) {
        __Pyx_ErrRestore(et, ev, tb);
        return -1;
    }
    Py_XDECREF(tb);
    Py_DECREF(et);
#if PY_VERSION_HEX >= 0x030300A0
    value = ((PyStopIterationObject *)ev)->value;
    Py_INCREF(value);
    Py_DECREF(ev);
#else
    {
        PyObject* args = PyObject_GetAttr(ev, __pyx_n_s__args);
        Py_DECREF(ev);
        if (likely(args)) {
            value = PyObject_GetItem(args, 0);
            Py_DECREF(args);
        }
        if (unlikely(!value)) {
            __Pyx_ErrRestore(NULL, NULL, NULL);
            Py_INCREF(Py_None);
            value = Py_None;
        }
    }
#endif
    *pvalue = value;
    return 0;
}
#endif
static CYTHON_INLINE
void __Pyx_Generator_ExceptionClear(__pyx_GeneratorObject *self) {
    PyObject *exc_type = self->exc_type;
    PyObject *exc_value = self->exc_value;
    PyObject *exc_traceback = self->exc_traceback;
    self->exc_type = NULL;
    self->exc_value = NULL;
    self->exc_traceback = NULL;
    Py_XDECREF(exc_type);
    Py_XDECREF(exc_value);
    Py_XDECREF(exc_traceback);
}
static CYTHON_INLINE
int __Pyx_Generator_CheckRunning(__pyx_GeneratorObject *gen) {
    if (unlikely(gen->is_running)) {
        PyErr_SetString(PyExc_ValueError,
                        "generator already executing");
        return 1;
    }
    return 0;
}
static CYTHON_INLINE
PyObject *__Pyx_Generator_SendEx(__pyx_GeneratorObject *self, PyObject *value) {
    PyObject *retval;
    assert(!self->is_running);
    if (unlikely(self->resume_label == 0)) {
        if (unlikely(value && value != Py_None)) {
            PyErr_SetString(PyExc_TypeError,
                            "can't send non-None value to a "
                            "just-started generator");
            return NULL;
        }
    }
    if (unlikely(self->resume_label == -1)) {
        PyErr_SetNone(PyExc_StopIteration);
        return NULL;
    }
    if (value) {
#if CYTHON_COMPILING_IN_PYPY
#else
        /* Generators always return to their most recent caller, not
         * necessarily their creator. */
        if (self->exc_traceback) {
            PyThreadState *tstate = PyThreadState_GET();
            PyTracebackObject *tb = (PyTracebackObject *) self->exc_traceback;
            PyFrameObject *f = tb->tb_frame;
            Py_XINCREF(tstate->frame);
            assert(f->f_back == NULL);
            f->f_back = tstate->frame;
        }
#endif
        __Pyx_ExceptionSwap(&self->exc_type, &self->exc_value,
                            &self->exc_traceback);
    } else {
        __Pyx_Generator_ExceptionClear(self);
    }
    self->is_running = 1;
    retval = self->body((PyObject *) self, value);
    self->is_running = 0;
    if (retval) {
        __Pyx_ExceptionSwap(&self->exc_type, &self->exc_value,
                            &self->exc_traceback);
#if CYTHON_COMPILING_IN_PYPY
#else
        /* Don't keep the reference to f_back any longer than necessary.  It
         * may keep a chain of frames alive or it could create a reference
         * cycle. */
        if (self->exc_traceback) {
            PyTracebackObject *tb = (PyTracebackObject *) self->exc_traceback;
            PyFrameObject *f = tb->tb_frame;
            Py_CLEAR(f->f_back);
        }
#endif
    } else {
        __Pyx_Generator_ExceptionClear(self);
    }
    return retval;
}
static CYTHON_INLINE
PyObject *__Pyx_Generator_FinishDelegation(__pyx_GeneratorObject *gen) {
    PyObject *ret;
    PyObject *val = NULL;
    __Pyx_Generator_Undelegate(gen);
    __Pyx_PyGen_FetchStopIterationValue(&val);
    ret = __Pyx_Generator_SendEx(gen, val);
    Py_XDECREF(val);
    return ret;
}
static PyObject *__Pyx_Generator_Next(PyObject *self) {
    __pyx_GeneratorObject *gen = (__pyx_GeneratorObject*) self;
    PyObject *yf = gen->yieldfrom;
    if (unlikely(__Pyx_Generator_CheckRunning(gen)))
        return NULL;
    if (yf) {
        PyObject *ret;
        gen->is_running = 1;
        ret = Py_TYPE(yf)->tp_iternext(yf);
        gen->is_running = 0;
        if (likely(ret)) {
            return ret;
        }
        return __Pyx_Generator_FinishDelegation(gen);
    }
    return __Pyx_Generator_SendEx(gen, Py_None);
}
static PyObject *__Pyx_Generator_Send(PyObject *self, PyObject *value) {
    __pyx_GeneratorObject *gen = (__pyx_GeneratorObject*) self;
    PyObject *yf = gen->yieldfrom;
    if (unlikely(__Pyx_Generator_CheckRunning(gen)))
        return NULL;
    if (yf) {
        PyObject *ret;
        gen->is_running = 1;
        if (__Pyx_Generator_CheckExact(yf)) {
            ret = __Pyx_Generator_Send(yf, value);
        } else {
            if (value == Py_None)
                ret = PyIter_Next(yf);
            else
                ret = __Pyx_PyObject_CallMethod1(yf, __pyx_n_s__send, value);
        }
        gen->is_running = 0;
        if (likely(ret)) {
            return ret;
        }
        return __Pyx_Generator_FinishDelegation(gen);
    }
    return __Pyx_Generator_SendEx(gen, value);
}
static int __Pyx_Generator_CloseIter(__pyx_GeneratorObject *gen, PyObject *yf) {
    PyObject *retval = NULL;
    int err = 0;
    if (__Pyx_Generator_CheckExact(yf)) {
        retval = __Pyx_Generator_Close(yf);
        if (!retval)
            return -1;
    } else {
        PyObject *meth;
        gen->is_running = 1;
        meth = PyObject_GetAttr(yf, __pyx_n_s__close);
        if (unlikely(!meth)) {
            if (!PyErr_ExceptionMatches(PyExc_AttributeError)) {
                PyErr_WriteUnraisable(yf);
            }
            PyErr_Clear();
        } else {
            retval = PyObject_CallFunction(meth, NULL);
            Py_DECREF(meth);
            if (!retval)
                err = -1;
        }
        gen->is_running = 0;
    }
    Py_XDECREF(retval);
    return err;
}
static PyObject *__Pyx_Generator_Close(PyObject *self) {
    __pyx_GeneratorObject *gen = (__pyx_GeneratorObject *) self;
    PyObject *retval, *raised_exception;
    PyObject *yf = gen->yieldfrom;
    int err = 0;
    if (unlikely(__Pyx_Generator_CheckRunning(gen)))
        return NULL;
    if (yf) {
        Py_INCREF(yf);
        err = __Pyx_Generator_CloseIter(gen, yf);
        __Pyx_Generator_Undelegate(gen);
        Py_DECREF(yf);
    }
    if (err == 0)
#if PY_VERSION_HEX < 0x02050000
        PyErr_SetNone(PyExc_StopIteration);
#else
        PyErr_SetNone(PyExc_GeneratorExit);
#endif
    retval = __Pyx_Generator_SendEx(gen, NULL);
    if (retval) {
        Py_DECREF(retval);
        PyErr_SetString(PyExc_RuntimeError,
                        "generator ignored GeneratorExit");
        return NULL;
    }
    raised_exception = PyErr_Occurred();
    if (!raised_exception
        || raised_exception == PyExc_StopIteration
#if PY_VERSION_HEX >= 0x02050000
        || raised_exception == PyExc_GeneratorExit
        || PyErr_GivenExceptionMatches(raised_exception, PyExc_GeneratorExit)
#endif
        || PyErr_GivenExceptionMatches(raised_exception, PyExc_StopIteration))
    {
        if (raised_exception) PyErr_Clear();      /* ignore these errors */
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
}
static PyObject *__Pyx_Generator_Throw(PyObject *self, PyObject *args) {
    __pyx_GeneratorObject *gen = (__pyx_GeneratorObject *) self;
    PyObject *typ;
    PyObject *tb = NULL;
    PyObject *val = NULL;
    PyObject *yf = gen->yieldfrom;
    if (!PyArg_UnpackTuple(args, (char *)"throw", 1, 3, &typ, &val, &tb))
        return NULL;
    if (unlikely(__Pyx_Generator_CheckRunning(gen)))
        return NULL;
    if (yf) {
        PyObject *ret;
        Py_INCREF(yf);
#if PY_VERSION_HEX >= 0x02050000
        if (PyErr_GivenExceptionMatches(typ, PyExc_GeneratorExit)) {
            int err = __Pyx_Generator_CloseIter(gen, yf);
            Py_DECREF(yf);
            __Pyx_Generator_Undelegate(gen);
            if (err < 0)
                return __Pyx_Generator_SendEx(gen, NULL);
            goto throw_here;
        }
#endif
        gen->is_running = 1;
        if (__Pyx_Generator_CheckExact(yf)) {
            ret = __Pyx_Generator_Throw(yf, args);
        } else {
            PyObject *meth = PyObject_GetAttr(yf, __pyx_n_s__throw);
            if (unlikely(!meth)) {
                Py_DECREF(yf);
                if (!PyErr_ExceptionMatches(PyExc_AttributeError)) {
                    gen->is_running = 0;
                    return NULL;
                }
                PyErr_Clear();
                __Pyx_Generator_Undelegate(gen);
                gen->is_running = 0;
                goto throw_here;
            }
            ret = PyObject_CallObject(meth, args);
            Py_DECREF(meth);
        }
        gen->is_running = 0;
        Py_DECREF(yf);
        if (!ret) {
            ret = __Pyx_Generator_FinishDelegation(gen);
        }
        return ret;
    }
throw_here:
    __Pyx_Raise(typ, val, tb, NULL);
    return __Pyx_Generator_SendEx(gen, NULL);
}
static int __Pyx_Generator_traverse(PyObject *self, visitproc visit, void *arg) {
    __pyx_GeneratorObject *gen = (__pyx_GeneratorObject *) self;
    Py_VISIT(gen->closure);
    Py_VISIT(gen->classobj);
    Py_VISIT(gen->yieldfrom);
    Py_VISIT(gen->exc_type);
    Py_VISIT(gen->exc_value);
    Py_VISIT(gen->exc_traceback);
    return 0;
}
static int __Pyx_Generator_clear(PyObject *self) {
    __pyx_GeneratorObject *gen = (__pyx_GeneratorObject *) self;
    Py_CLEAR(gen->closure);
    Py_CLEAR(gen->classobj);
    Py_CLEAR(gen->yieldfrom);
    Py_CLEAR(gen->exc_type);
    Py_CLEAR(gen->exc_value);
    Py_CLEAR(gen->exc_traceback);
    return 0;
}
static void __Pyx_Generator_dealloc(PyObject *self) {
    __pyx_GeneratorObject *gen = (__pyx_GeneratorObject *) self;
    PyObject_GC_UnTrack(gen);
    if (gen->gi_weakreflist != NULL)
        PyObject_ClearWeakRefs(self);
    PyObject_GC_Track(self);
    if (gen->resume_label > 0) {
        Py_TYPE(gen)->tp_del(self);
        if (self->ob_refcnt > 0)
            return;                     /* resurrected.  :( */
    }
    PyObject_GC_UnTrack(self);
    __Pyx_Generator_clear(self);
    PyObject_GC_Del(gen);
}
static void __Pyx_Generator_del(PyObject *self) {
    PyObject *res;
    PyObject *error_type, *error_value, *error_traceback;
    __pyx_GeneratorObject *gen = (__pyx_GeneratorObject *) self;
    if (gen->resume_label <= 0)
        return ;
    assert(self->ob_refcnt == 0);
    self->ob_refcnt = 1;
    __Pyx_ErrFetch(&error_type, &error_value, &error_traceback);
    res = __Pyx_Generator_Close(self);
    if (res == NULL)
        PyErr_WriteUnraisable(self);
    else
        Py_DECREF(res);
    __Pyx_ErrRestore(error_type, error_value, error_traceback);
    /* Undo the temporary resurrection; can't use DECREF here, it would
     * cause a recursive call.
     */
    assert(self->ob_refcnt > 0);
    if (--self->ob_refcnt == 0)
        return; /* this is the normal path out */
    /* close() resurrected it!  Make it look like the original Py_DECREF
     * never happened.
     */
    {
        Py_ssize_t refcnt = self->ob_refcnt;
        _Py_NewReference(self);
        self->ob_refcnt = refcnt;
    }
#if CYTHON_COMPILING_IN_CPYTHON
    assert(PyType_IS_GC(self->ob_type) &&
           _Py_AS_GC(self)->gc.gc_refs != _PyGC_REFS_UNTRACKED);
    /* If Py_REF_DEBUG, _Py_NewReference bumped _Py_RefTotal, so
     * we need to undo that. */
    _Py_DEC_REFTOTAL;
#endif
    /* If Py_TRACE_REFS, _Py_NewReference re-added self to the object
     * chain, so no more to do there.
     * If COUNT_ALLOCS, the original decref bumped tp_frees, and
     * _Py_NewReference bumped tp_allocs:  both of those need to be
     * undone.
     */
#ifdef COUNT_ALLOCS
    --Py_TYPE(self)->tp_frees;
    --Py_TYPE(self)->tp_allocs;
#endif
}
static PyMemberDef __pyx_Generator_memberlist[] = {
    {(char *) "gi_running",
#if PY_VERSION_HEX >= 0x02060000
     T_BOOL,
#else
     T_BYTE,
#endif
     offsetof(__pyx_GeneratorObject, is_running),
     READONLY,
     NULL},
    {0, 0, 0, 0, 0}
};
static PyMethodDef __pyx_Generator_methods[] = {
    {__Pyx_NAMESTR("send"), (PyCFunction) __Pyx_Generator_Send, METH_O, 0},
    {__Pyx_NAMESTR("throw"), (PyCFunction) __Pyx_Generator_Throw, METH_VARARGS, 0},
    {__Pyx_NAMESTR("close"), (PyCFunction) __Pyx_Generator_Close, METH_NOARGS, 0},
    {0, 0, 0, 0}
};
static PyTypeObject __pyx_GeneratorType_type = {
    PyVarObject_HEAD_INIT(0, 0)
    __Pyx_NAMESTR("generator"),         /*tp_name*/
    sizeof(__pyx_GeneratorObject),      /*tp_basicsize*/
    0,                                  /*tp_itemsize*/
    (destructor) __Pyx_Generator_dealloc,/*tp_dealloc*/
    0,                                  /*tp_print*/
    0,                                  /*tp_getattr*/
    0,                                  /*tp_setattr*/
#if PY_MAJOR_VERSION < 3
    0,                                  /*tp_compare*/
#else
    0,                                  /*reserved*/
#endif
    0,                                   /*tp_repr*/
    0,                                  /*tp_as_number*/
    0,                                  /*tp_as_sequence*/
    0,                                  /*tp_as_mapping*/
    0,                                  /*tp_hash*/
    0,                                  /*tp_call*/
    0,                                  /*tp_str*/
    0,                                  /*tp_getattro*/
    0,                                  /*tp_setattro*/
    0,                                  /*tp_as_buffer*/
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC, /* tp_flags*/
    0,                                  /*tp_doc*/
    (traverseproc) __Pyx_Generator_traverse,   /*tp_traverse*/
    0,                                  /*tp_clear*/
    0,                                  /*tp_richcompare*/
    offsetof(__pyx_GeneratorObject, gi_weakreflist), /* tp_weaklistoffse */
    0,                                  /*tp_iter*/
    (iternextfunc) __Pyx_Generator_Next, /*tp_iternext*/
    __pyx_Generator_methods,            /*tp_methods*/
    __pyx_Generator_memberlist,         /*tp_members*/
    0,                                  /*tp_getset*/
    0,                                  /*tp_base*/
    0,                                  /*tp_dict*/
    0,                                  /*tp_descr_get*/
    0,                                  /*tp_descr_set*/
    0,                                  /*tp_dictoffset*/
    0,                                  /*tp_init*/
    0,                                  /*tp_alloc*/
    0,                                  /*tp_new*/
    0,                                  /*tp_free*/
    0,                                  /*tp_is_gc*/
    0,                                  /*tp_bases*/
    0,                                  /*tp_mro*/
    0,                                  /*tp_cache*/
    0,                                  /*tp_subclasses*/
    0,                                  /*tp_weaklist*/
    __Pyx_Generator_del,                /*tp_del*/
#if PY_VERSION_HEX >= 0x02060000
    0,                                  /*tp_version_tag*/
#endif
};
static __pyx_GeneratorObject *__Pyx_Generator_New(__pyx_generator_body_t body,
                                                  PyObject *closure) {
    __pyx_GeneratorObject *gen =
        PyObject_GC_New(__pyx_GeneratorObject, &__pyx_GeneratorType_type);
    if (gen == NULL)
        return NULL;
    gen->body = body;
    gen->closure = closure;
    Py_XINCREF(closure);
    gen->is_running = 0;
    gen->resume_label = 0;
    gen->classobj = NULL;
    gen->yieldfrom = NULL;
    gen->exc_type = NULL;
    gen->exc_value = NULL;
    gen->exc_traceback = NULL;
    gen->gi_weakreflist = NULL;
    PyObject_GC_Track(gen);
    return gen;
}
static int __pyx_Generator_init(void) {
    __pyx_GeneratorType_type.tp_getattro = PyObject_GenericGetAttr;
    __pyx_GeneratorType_type.tp_iter = PyObject_SelfIter;
    if (PyType_Ready(&__pyx_GeneratorType_type)) {
        return -1;
    }
    __pyx_GeneratorType = &__pyx_GeneratorType_type;
    return 0;
}

static int __Pyx_check_binary_version(void) {
    char ctversion[4], rtversion[4];
    PyOS_snprintf(ctversion, 4, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    PyOS_snprintf(rtversion, 4, "%s", Py_GetVersion());
    if (ctversion[0] != rtversion[0] || ctversion[2] != rtversion[2]) {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compiletime version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        #if PY_VERSION_HEX < 0x02050000
        return PyErr_Warn(NULL, message);
        #else
        return PyErr_WarnEx(NULL, message, 1);
        #endif
    }
    return 0;
}

#ifndef __PYX_HAVE_RT_ImportModule
#define __PYX_HAVE_RT_ImportModule
static PyObject *__Pyx_ImportModule(const char *name) {
    PyObject *py_name = 0;
    PyObject *py_module = 0;
    py_name = __Pyx_PyIdentifier_FromString(name);
    if (!py_name)
        goto bad;
    py_module = PyImport_Import(py_name);
    Py_DECREF(py_name);
    return py_module;
bad:
    Py_XDECREF(py_name);
    return 0;
}
#endif

#ifndef __PYX_HAVE_RT_ImportType
#define __PYX_HAVE_RT_ImportType
static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name,
    size_t size, int strict)
{
    PyObject *py_module = 0;
    PyObject *result = 0;
    PyObject *py_name = 0;
    char warning[200];
    Py_ssize_t basicsize;
#ifdef Py_LIMITED_API
    PyObject *py_basicsize;
#endif
    py_module = __Pyx_ImportModule(module_name);
    if (!py_module)
        goto bad;
    py_name = __Pyx_PyIdentifier_FromString(class_name);
    if (!py_name)
        goto bad;
    result = PyObject_GetAttr(py_module, py_name);
    Py_DECREF(py_name);
    py_name = 0;
    Py_DECREF(py_module);
    py_module = 0;
    if (!result)
        goto bad;
    if (!PyType_Check(result)) {
        PyErr_Format(PyExc_TypeError,
            "%s.%s is not a type object",
            module_name, class_name);
        goto bad;
    }
#ifndef Py_LIMITED_API
    basicsize = ((PyTypeObject *)result)->tp_basicsize;
#else
    py_basicsize = PyObject_GetAttrString(result, "__basicsize__");
    if (!py_basicsize)
        goto bad;
    basicsize = PyLong_AsSsize_t(py_basicsize);
    Py_DECREF(py_basicsize);
    py_basicsize = 0;
    if (basicsize == (Py_ssize_t)-1 && PyErr_Occurred())
        goto bad;
#endif
    if (!strict && (size_t)basicsize > size) {
        PyOS_snprintf(warning, sizeof(warning),
            "%s.%s size changed, may indicate binary incompatibility",
            module_name, class_name);
        #if PY_VERSION_HEX < 0x02050000
        if (PyErr_Warn(NULL, warning) < 0) goto bad;
        #else
        if (PyErr_WarnEx(NULL, warning, 0) < 0) goto bad;
        #endif
    }
    else if ((size_t)basicsize != size) {
        PyErr_Format(PyExc_ValueError,
            "%s.%s has the wrong size, try recompiling",
            module_name, class_name);
        goto bad;
    }
    return (PyTypeObject *)result;
bad:
    Py_XDECREF(py_module);
    Py_XDECREF(result);
    return NULL;
}
#endif

static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = (start + end) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, new_max*sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}

#include "compile.h"
#include "frameobject.h"
#include "traceback.h"
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(filename);
    #else
    py_srcfile = PyUnicode_FromString(filename);
    #endif
    if (!py_srcfile) goto bad;
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_code = __Pyx_PyCode_New(
        0,            /*int argcount,*/
        0,            /*int kwonlyargcount,*/
        0,            /*int nlocals,*/
        0,            /*int stacksize,*/
        0,            /*int flags,*/
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,      /*int firstlineno,*/
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    Py_DECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_globals = 0;
    PyFrameObject *py_frame = 0;
    py_code = __pyx_find_code_object(c_line ? c_line : py_line);
    if (!py_code) {
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) goto bad;
        __pyx_insert_code_object(c_line ? c_line : py_line, py_code);
    }
    py_globals = PyModule_GetDict(__pyx_m);
    if (!py_globals) goto bad;
    py_frame = PyFrame_New(
        PyThreadState_GET(), /*PyThreadState *tstate,*/
        py_code,             /*PyCodeObject *code,*/
        py_globals,          /*PyObject *globals,*/
        0                    /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    py_frame->f_lineno = py_line;
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else  /* Python 3+ has unicode identifiers */
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        ++t;
    }
    return 0;
}

static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(char* c_str) {
    return __Pyx_PyUnicode_FromStringAndSize(c_str, strlen(c_str));
}
static CYTHON_INLINE char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
static CYTHON_INLINE char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
#if PY_VERSION_HEX < 0x03030000
        char* defenc_c;
        PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
        if (!defenc) return NULL;
        defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        {
            char* end = defenc_c + PyBytes_GET_SIZE(defenc);
            char* c;
            for (c = defenc_c; c < end; c++) {
                if ((unsigned char) (*c) >= 128) {
                    PyUnicode_AsASCIIString(o);
                    return NULL;
                }
            }
        }
#endif /*__PYX_DEFAULT_STRING_ENCODING_IS_ASCII*/
        *length = PyBytes_GET_SIZE(defenc);
        return defenc_c;
#else /* PY_VERSION_HEX < 0x03030000 */
        if (PyUnicode_READY(o) == -1) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
        if (PyUnicode_IS_ASCII(o)) {
            *length = PyUnicode_GET_DATA_SIZE(o);
            return PyUnicode_AsUTF8(o);
        } else {
            PyUnicode_AsASCIIString(o);
            return NULL;
        }
#else /* __PYX_DEFAULT_STRING_ENCODING_IS_ASCII */
        return PyUnicode_AsUTF8AndSize(o, length);
#endif /* __PYX_DEFAULT_STRING_ENCODING_IS_ASCII */
#endif /* PY_VERSION_HEX < 0x03030000 */
    } else
#endif /* __PYX_DEFAULT_STRING_ENCODING_IS_ASCII  || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT */
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (r < 0) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x) {
  PyNumberMethods *m;
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (PyInt_Check(x) || PyLong_Check(x))
#else
  if (PyLong_Check(x))
#endif
    return Py_INCREF(x), x;
  m = Py_TYPE(x)->tp_as_number;
#if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = PyNumber_Long(x);
  }
#else
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Long(x);
  }
#endif
  if (res) {
#if PY_MAJOR_VERSION < 3
    if (!PyInt_Check(res) && !PyLong_Check(res)) {
#else
    if (!PyLong_Check(res)) {
#endif
      PyErr_Format(PyExc_TypeError,
                   "__%s__ returned non-%s (type %.200s)",
                   name, name, Py_TYPE(res)->tp_name);
      Py_DECREF(res);
      return NULL;
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject* x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
#if PY_VERSION_HEX < 0x02050000
   if (ival <= LONG_MAX)
       return PyInt_FromLong((long)ival);
   else {
       unsigned char *bytes = (unsigned char *) &ival;
       int one = 1; int little = (int)*(unsigned char*)&one;
       return _PyLong_FromByteArray(bytes, sizeof(size_t), little, 0);
   }
#else
   return PyInt_FromSize_t(ival);
#endif
}
static CYTHON_INLINE size_t __Pyx_PyInt_AsSize_t(PyObject* x) {
   unsigned PY_LONG_LONG val = __Pyx_PyInt_AsUnsignedLongLong(x);
   if (unlikely(val != (unsigned PY_LONG_LONG)(size_t)val)) {
       if ((val != (unsigned PY_LONG_LONG)-1) || !PyErr_Occurred())
           PyErr_SetString(PyExc_OverflowError,
                           "value too large to convert to size_t");
       return (size_t)-1;
   }
   return (size_t)val;
}


#endif /* Py_PYTHON_H */
